-- -------------------------------------------------------------
-- 

-- File Name: C:\EELE466\GHC_DDC\lab3\hdl_coder_Madgwick_correction\codegen\Madgwick_correction\hdlsrc\Madgwick_correction_fixpt.vhd
-- Created: 2018-02-06 13:35:26
-- 
-- Generated by MATLAB 9.3, MATLAB Coder 3.4 and HDL Coder 3.11
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 0.25
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- s0                            ce_out        1
-- s1                            ce_out        1
-- s2                            ce_out        1
-- s3                            ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Madgwick_correction_fixpt
-- Source Path: Madgwick_correction_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.Madgwick_correction_fixpt_pac.ALL;

ENTITY Madgwick_correction_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        q0                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        q1                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        q2                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        q3                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        ax                                :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En5
        ay                                :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En5
        az                                :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En5
        mx                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En5
        my                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En5
        mz                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En5
        ce_out                            :   OUT   std_logic;
        s0                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_E9
        s1                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_E9
        s2                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_E10
        s3                                :   OUT   std_logic_vector(13 DOWNTO 0)  -- sfix14_E10
        );
END Madgwick_correction_fixpt;


ARCHITECTURE rtl OF Madgwick_correction_fixpt IS

  -- Component Declarations
  COMPONENT Madgwick_correction_fixpt_en
    PORT( clk_1                           :   IN    std_logic;
          reset_x_1                       :   IN    std_logic;
          clk_enable_1                    :   IN    std_logic;
          clk_enable_2                    :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Madgwick_correction_fixpt_tc
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb                             :   OUT   std_logic;
          enb_1_2_0                       :   OUT   std_logic;
          enb_1_4_0                       :   OUT   std_logic;
          enb_1_4_1                       :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Madgwick_correction_fixpt_en
    USE ENTITY work.Madgwick_correction_fixpt_en(rtl);

  FOR ALL : Madgwick_correction_fixpt_tc
    USE ENTITY work.Madgwick_correction_fixpt_tc(rtl);

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL enb_1_4_0                        : std_logic;
  SIGNAL enb                              : std_logic;
  SIGNAL enb_1_2_0                        : std_logic;
  SIGNAL enb_1_4_1                        : std_logic;
  SIGNAL clk_enable_1                     : std_logic;
  SIGNAL alpha0_deserializer_contl_cnt    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL alpha0_deserializer_contl_validOutpu : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn   : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn  : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn   : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_1 : std_logic;
  SIGNAL counterSig                       : std_logic;  -- ufix1
  SIGNAL alpha0_deserializer_contl_cnt_1  : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_1 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_1 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_1 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_1 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_2 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_3 : std_logic;
  SIGNAL counterSig_1                     : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL c0_serial_0                      : vector_of_std_logic_vector14(0 TO 3);  -- ufix14 [4]
  SIGNAL c0_serial_0_1                    : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL rcc_out                          : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL ratechange_splitcomp_out0        : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out1        : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out2        : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out3        : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q1_1                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL c0_serial_1                      : vector_of_std_logic_vector14(0 TO 3);  -- ufix14 [4]
  SIGNAL c0_serial_1_1                    : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL rcc_out_1                        : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL ratechange_splitcomp_out0_1      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out1_1      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out2_1      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out3_1      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q3_1                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp                              : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL alpha0_deserializer_tapout       : vector_of_unsigned28(0 TO 2);  -- ufix28_En28 [3]
  SIGNAL alpha0_deserializer_muxOut       : vector_of_unsigned28(0 TO 3);  -- ufix28_En28 [4]
  SIGNAL c0_serialOut_0                   : vector_of_unsigned28(0 TO 3);  -- ufix28_En28 [4]
  SIGNAL tmp_1                            : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_2                            : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_3                            : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_4                            : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_5                            : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL alpha0_deserializer_contl_cnt_2  : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_2 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_2 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_2 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_2 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_4 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_5 : std_logic;
  SIGNAL q0_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_6                            : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_7                            : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL tmp_8                            : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_9                            : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL tmp_10                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_11                           : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL tmp_12                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_13                           : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL c0_serial_0_2                    : vector_of_signed17(0 TO 3);  -- sfix17 [4]
  SIGNAL rcc_out_2                        : vector_of_signed17(0 TO 3);  -- sfix17 [4]
  SIGNAL ratechange_splitcomp_out0_2      : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL ratechange_splitcomp_out1_2      : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL ratechange_splitcomp_out2_2      : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL ratechange_splitcomp_out3_2      : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL tmp_14                           : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL q2_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q2_1                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL mz_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL mz_1                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL my_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL my_1                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL mx_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL mx_1                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_1_2                    : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_3                        : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_3      : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_3      : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_3      : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_3      : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q2_2                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL multiplier_mul_temp              : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL tmp_15                           : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL alpha0_deserializer_tapout_1     : vector_of_signed31(0 TO 2);  -- sfix31 [3]
  SIGNAL alpha0_deserializer_muxOut_1     : vector_of_signed31(0 TO 3);  -- sfix31 [4]
  SIGNAL c0_serialOut_0_1                 : vector_of_signed31(0 TO 3);  -- sfix31 [4]
  SIGNAL tmp_16                           : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL tmp_17                           : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL tmp_18                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_19                           : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_20                           : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_21                           : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL ax_signed                        : signed(13 DOWNTO 0);  -- sfix14_En5
  SIGNAL tmp_22                           : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_23                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_24                           : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_25                           : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_26                           : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_27                           : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_28                           : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_29                           : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_30                           : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_31                           : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_32                           : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_33                           : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL c0_serial_0_3                    : vector_of_signed24(0 TO 1);  -- sfix24_En14 [2]
  SIGNAL rcc_out_4                        : vector_of_signed24(0 TO 1);  -- sfix24_En14 [2]
  SIGNAL ratechange_splitcomp_out0_4      : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL ratechange_splitcomp_out1_4      : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_34                           : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_35                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_36                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_37                           : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL tmp_38                           : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL p810tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL p810tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL tmp_39                           : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL tmp_40                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_41                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_42                           : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL tmp_43                           : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL p849tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL p849tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL tmp_44                           : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL c0_serial_1_3                    : vector_of_signed15(0 TO 1);  -- sfix15_En13 [2]
  SIGNAL rcc_out_5                        : vector_of_signed15(0 TO 1);  -- sfix15_En13 [2]
  SIGNAL ratechange_splitcomp_out0_5      : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL ratechange_splitcomp_out1_5      : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL tmp_45                           : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL tmp_46                           : signed(38 DOWNTO 0);  -- sfix39_En27
  SIGNAL alpha0_deserializer_tapout_2     : signed(38 DOWNTO 0);  -- sfix39_En27
  SIGNAL alpha0_deserializer_muxOut_2     : vector_of_signed39(0 TO 1);  -- sfix39_En27 [2]
  SIGNAL c0_serialOut_0_2                 : vector_of_signed39(0 TO 1);  -- sfix39_En27 [2]
  SIGNAL alpha0_deserializer_contl_cnt_3  : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_3 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_3 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_3 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_3 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_6 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_7 : std_logic;
  SIGNAL alpha0_deserializer_contl_cnt_4  : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_4 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_4 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_4 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_4 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_8 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_9 : std_logic;
  SIGNAL c0_serial_0_4                    : vector_of_std_logic_vector14(0 TO 3);  -- ufix14 [4]
  SIGNAL c0_serial_0_5                    : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL rcc_out_6                        : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL ratechange_splitcomp_out0_6      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out1_6      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out2_4      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out3_4      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q0_1                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL c0_serial_1_4                    : vector_of_std_logic_vector14(0 TO 3);  -- ufix14 [4]
  SIGNAL c0_serial_1_5                    : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL rcc_out_7                        : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL ratechange_splitcomp_out0_7      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out1_7      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out2_5      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out3_5      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q3_2                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_47                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL alpha0_deserializer_tapout_3     : vector_of_unsigned28(0 TO 2);  -- ufix28_En28 [3]
  SIGNAL alpha0_deserializer_muxOut_3     : vector_of_unsigned28(0 TO 3);  -- ufix28_En28 [4]
  SIGNAL c0_serialOut_0_3                 : vector_of_unsigned28(0 TO 3);  -- ufix28_En28 [4]
  SIGNAL tmp_48                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_49                           : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_50                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_51                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL alpha0_deserializer_contl_cnt_5  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL alpha0_deserializer_contl_validOutpu_5 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_5 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_5 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_5 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_10 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_11 : std_logic;
  SIGNAL q1_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_52                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_53                           : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL tmp_54                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_55                           : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL c0_serial_0_6                    : vector_of_signed17(0 TO 1);  -- sfix17 [2]
  SIGNAL rcc_out_8                        : vector_of_signed17(0 TO 1);  -- sfix17 [2]
  SIGNAL ratechange_splitcomp_out0_8      : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL ratechange_splitcomp_out1_8      : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL tmp_56                           : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL mx_2                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q3_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q3_3                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_1_6                    : vector_of_signed15(0 TO 1);  -- sfix15 [2]
  SIGNAL rcc_out_9                        : vector_of_signed15(0 TO 1);  -- sfix15 [2]
  SIGNAL ratechange_splitcomp_out0_9      : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_9      : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL mx_3                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL multiplier_mul_temp_1            : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL tmp_57                           : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL alpha0_deserializer_tapout_4     : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL alpha0_deserializer_muxOut_4     : vector_of_signed31(0 TO 1);  -- sfix31 [2]
  SIGNAL c0_serialOut_0_4                 : vector_of_signed31(0 TO 1);  -- sfix31 [2]
  SIGNAL tmp_58                           : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL tmp_59                           : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL tmp_60                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_61                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_62                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_63                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL ay_signed                        : signed(13 DOWNTO 0);  -- sfix14_En5
  SIGNAL tmp_64                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_65                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_66                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_67                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_68                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_69                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_70                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_71                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_72                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_73                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_74                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_75                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_76                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_77                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_78                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_79                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_80                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_81                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_82                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_83                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_84                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_85                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_86                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_87                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_88                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_89                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_90                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL c0_serial_0_7                    : vector_of_signed25(0 TO 3);  -- sfix25_En14 [4]
  SIGNAL rcc_out_10                       : vector_of_signed25(0 TO 3);  -- sfix25_En14 [4]
  SIGNAL ratechange_splitcomp_out0_10     : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL ratechange_splitcomp_out1_10     : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL ratechange_splitcomp_out2_6      : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL ratechange_splitcomp_out3_6      : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL tmp_91                           : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL v2q2                             : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_92                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_93                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL v2q3                             : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL v2q0                             : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_94                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_95                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL v2q1                             : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL c0_serial_1_7                    : vector_of_unsigned14(0 TO 3);  -- ufix14_En13 [4]
  SIGNAL rcc_out_11                       : vector_of_unsigned14(0 TO 3);  -- ufix14_En13 [4]
  SIGNAL ratechange_splitcomp_out0_11     : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL ratechange_splitcomp_out1_11     : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL ratechange_splitcomp_out2_7      : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL ratechange_splitcomp_out3_7      : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL v2q2_1                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL multiplier_cast                  : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL multiplier_mul_temp_2            : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_96                           : signed(38 DOWNTO 0);  -- sfix39_En27
  SIGNAL alpha0_deserializer_tapout_5     : vector_of_signed39(0 TO 2);  -- sfix39_En27 [3]
  SIGNAL alpha0_deserializer_muxOut_5     : vector_of_signed39(0 TO 3);  -- sfix39_En27 [4]
  SIGNAL c0_serialOut_0_5                 : vector_of_signed39(0 TO 3);  -- sfix39_En27 [4]
  SIGNAL tmp_97                           : signed(38 DOWNTO 0);  -- sfix39_En27
  SIGNAL tmp_98                           : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_99                           : signed(38 DOWNTO 0);  -- sfix39_En27
  SIGNAL tmp_100                          : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_101                          : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_102                          : signed(64 DOWNTO 0);  -- sfix65_En33
  SIGNAL alpha0_deserializer_contl_cnt_6  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL alpha0_deserializer_contl_validOutpu_6 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_6 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_6 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_6 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_12 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_13 : std_logic;
  SIGNAL alpha0_deserializer_contl_cnt_7  : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_7 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_7 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_7 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_7 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_14 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_15 : std_logic;
  SIGNAL alpha0_deserializer_contl_cnt_8  : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_8 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_8 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_8 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_8 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_16 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_17 : std_logic;
  SIGNAL q2_3                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q3_4                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2q1_1                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2q1_2                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_0_8                    : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_12                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_12     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_12     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_8      : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_8      : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q2_4                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q2_5                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q3_5                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL mz_2                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL my_2                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_1_8                    : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_13                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_13     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_13     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_9      : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_9      : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q2_6                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL multiplier_mul_temp_3            : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_103                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL alpha0_deserializer_tapout_6     : vector_of_signed29(0 TO 2);  -- sfix29 [3]
  SIGNAL alpha0_deserializer_muxOut_6     : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL c0_serialOut_0_6                 : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL tmp_104                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_105                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_106                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_107                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_108                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_109                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_110                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_111                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_112                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_113                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_114                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL delayMatch_reg                   : vector_of_signed19(0 TO 4);  -- sfix19 [5]
  SIGNAL tmp_115                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_116                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_117                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_118                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_119                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_120                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL delayMatch_reg_1                 : vector_of_signed19(0 TO 4);  -- sfix19 [5]
  SIGNAL tmp_121                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_122                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_123                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_124                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_125                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_126                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL delayMatch_reg_2                 : vector_of_signed19(0 TO 4);  -- sfix19 [5]
  SIGNAL tmp_127                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_128                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_129                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_130                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_131                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_132                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL delayMatch_reg_3                 : vector_of_signed19(0 TO 4);  -- sfix19 [5]
  SIGNAL tmp_133                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL c0_serial_0_9                    : vector_of_signed19(0 TO 3);  -- sfix19_En14 [4]
  SIGNAL rcc_out_14                       : vector_of_signed19(0 TO 3);  -- sfix19_En14 [4]
  SIGNAL ratechange_splitcomp_out0_14     : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL ratechange_splitcomp_out1_14     : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL ratechange_splitcomp_out2_10     : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL ratechange_splitcomp_out3_10     : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_134                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL alpha0_deserializer_contl_cnt_9  : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_9 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_9 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_9 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_9 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_18 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_19 : std_logic;
  SIGNAL tmp_135                          : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL tmp_136                          : unsigned(29 DOWNTO 0);  -- ufix30_En19
  SIGNAL tmp_137                          : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL delayMatch_reg_4                 : vector_of_unsigned14(0 TO 2);  -- ufix14 [3]
  SIGNAL v2q1mx                           : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL v2q1mx_1                         : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL alpha0_deserializer_contl_cnt_10 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_10 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_10 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_10 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_10 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_20 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_21 : std_logic;
  SIGNAL mx_4                             : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL mz_3                             : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL my_3                             : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL c0_serial_0_10                   : vector_of_unsigned14(0 TO 3);  -- ufix14_En5 [4]
  SIGNAL rcc_out_15                       : vector_of_unsigned14(0 TO 3);  -- ufix14_En5 [4]
  SIGNAL ratechange_splitcomp_out0_15     : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL ratechange_splitcomp_out1_15     : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL ratechange_splitcomp_out2_11     : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL ratechange_splitcomp_out3_11     : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL mx_5                             : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL tmp_138                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_139                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_140                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_141                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL c0_serial_1_9                    : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL rcc_out_16                       : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL ratechange_splitcomp_out0_16     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out1_16     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out2_12     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out3_12     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q0q0                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_142                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL alpha0_deserializer_tapout_7     : vector_of_unsigned28(0 TO 2);  -- ufix28_En19 [3]
  SIGNAL alpha0_deserializer_muxOut_7     : vector_of_unsigned28(0 TO 3);  -- ufix28_En19 [4]
  SIGNAL c0_serialOut_0_7                 : vector_of_unsigned28(0 TO 3);  -- ufix28_En19 [4]
  SIGNAL alpha0_deserializer_contl_cnt_11 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_11 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_11 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_11 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_11 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_22 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_23 : std_logic;
  SIGNAL tmp_143                          : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL tmp_144                          : unsigned(29 DOWNTO 0);  -- ufix30_En19
  SIGNAL tmp_145                          : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL tmp_146                          : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL tmp_147                          : unsigned(29 DOWNTO 0);  -- ufix30_En19
  SIGNAL tmp_148                          : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL c0_serial_0_11                   : vector_of_unsigned14(0 TO 3);  -- ufix14_En4 [4]
  SIGNAL rcc_out_17                       : vector_of_unsigned14(0 TO 3);  -- ufix14_En4 [4]
  SIGNAL ratechange_splitcomp_out0_17     : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL ratechange_splitcomp_out1_17     : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL ratechange_splitcomp_out2_13     : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL ratechange_splitcomp_out3_13     : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL v2q0my                           : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL q1_2                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q3_6                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL c0_serial_1_10                   : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL rcc_out_18                       : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL ratechange_splitcomp_out0_18     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out1_18     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out2_14     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out3_14     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q1_3                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_149                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL alpha0_deserializer_tapout_8     : vector_of_unsigned28(0 TO 2);  -- ufix28_En18 [3]
  SIGNAL alpha0_deserializer_muxOut_8     : vector_of_unsigned28(0 TO 3);  -- ufix28_En18 [4]
  SIGNAL c0_serialOut_0_8                 : vector_of_unsigned28(0 TO 3);  -- ufix28_En18 [4]
  SIGNAL alpha0_deserializer_contl_cnt_12 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_12 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_12 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_12 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_12 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_24 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_25 : std_logic;
  SIGNAL my_4                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL mx_6                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL tmp_150                          : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL tmp_151                          : unsigned(29 DOWNTO 0);  -- ufix30_En19
  SIGNAL tmp_152                          : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL v2q0mz                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2q0mz_1                         : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_0_12                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_19                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_19     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_19     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_15     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_15     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL my_5                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q3q3                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q3q3_1                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q1_4                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q2_7                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q2_8                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_1_11                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_20                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_20     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_20     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_16     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_16     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q3q3_2                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL multiplier_mul_temp_4            : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_153                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL alpha0_deserializer_tapout_9     : vector_of_signed29(0 TO 2);  -- sfix29 [3]
  SIGNAL alpha0_deserializer_muxOut_9     : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL c0_serialOut_0_9                 : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL tmp_154                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_155                          : signed(28 DOWNTO 0);  -- sfix29_En19
  SIGNAL tmp_156                          : signed(30 DOWNTO 0);  -- sfix31_En19
  SIGNAL tmp_157                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_158                          : signed(30 DOWNTO 0);  -- sfix31_En19
  SIGNAL tmp_159                          : signed(30 DOWNTO 0);  -- sfix31_En19
  SIGNAL tmp_160                          : signed(32 DOWNTO 0);  -- sfix33_En19
  SIGNAL tmp_161                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_162                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_163                          : signed(32 DOWNTO 0);  -- sfix33_En19
  SIGNAL tmp_164                          : signed(32 DOWNTO 0);  -- sfix33_En19
  SIGNAL tmp_165                          : signed(34 DOWNTO 0);  -- sfix35_En19
  SIGNAL tmp_166                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_167                          : signed(34 DOWNTO 0);  -- sfix35_En19
  SIGNAL tmp_168                          : signed(34 DOWNTO 0);  -- sfix35_En19
  SIGNAL tmp_169                          : signed(49 DOWNTO 0);  -- sfix50_En32
  SIGNAL alpha0_deserializer_contl_cnt_13 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_13 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_13 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_13 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_13 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_26 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_27 : std_logic;
  SIGNAL tmp_170                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_171                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_172                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_173                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_174                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL alpha0_deserializer_contl_cnt_14 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_14 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_14 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_14 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_14 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_28 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_29 : std_logic;
  SIGNAL v2q2_2                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2q2_3                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL mz_4                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL my_6                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_0_13                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_21                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_21     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_21     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_17     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_17     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2q2_4                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL my_7                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL mz_5                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q0q0_1                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q0q0_2                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_1_12                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_22                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_22     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_22     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_18     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_18     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL my_8                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL multiplier_mul_temp_5            : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_175                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL alpha0_deserializer_tapout_10    : vector_of_signed29(0 TO 2);  -- sfix29 [3]
  SIGNAL alpha0_deserializer_muxOut_10    : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL c0_serialOut_0_10                : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL tmp_176                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_177                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_178                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_179                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_180                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL c0_serial_0_14                   : vector_of_unsigned28(0 TO 3);  -- ufix28_En18 [4]
  SIGNAL rcc_out_23                       : vector_of_unsigned28(0 TO 3);  -- ufix28_En18 [4]
  SIGNAL ratechange_splitcomp_out0_23     : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL ratechange_splitcomp_out1_23     : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL ratechange_splitcomp_out2_19     : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL ratechange_splitcomp_out3_19     : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_181                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL q3_7                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q2_9                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL c0_serial_1_13                   : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL rcc_out_24                       : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL ratechange_splitcomp_out0_24     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out1_24     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out2_20     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out3_20     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q3_8                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_182                          : unsigned(41 DOWNTO 0);  -- ufix42_En32
  SIGNAL alpha0_deserializer_tapout_11    : vector_of_unsigned42(0 TO 2);  -- ufix42_En32 [3]
  SIGNAL alpha0_deserializer_muxOut_11    : vector_of_unsigned42(0 TO 3);  -- ufix42_En32 [4]
  SIGNAL c0_serialOut_0_11                : vector_of_unsigned42(0 TO 3);  -- ufix42_En32 [4]
  SIGNAL tmp_183                          : signed(49 DOWNTO 0);  -- sfix50_En32
  SIGNAL tmp_184                          : unsigned(41 DOWNTO 0);  -- ufix42_En32
  SIGNAL tmp_185                          : signed(49 DOWNTO 0);  -- sfix50_En32
  SIGNAL tmp_186                          : signed(49 DOWNTO 0);  -- sfix50_En32
  SIGNAL tmp_187                          : signed(51 DOWNTO 0);  -- sfix52_En32
  SIGNAL tmp_188                          : unsigned(41 DOWNTO 0);  -- ufix42_En32
  SIGNAL tmp_189                          : signed(51 DOWNTO 0);  -- sfix52_En32
  SIGNAL tmp_190                          : signed(51 DOWNTO 0);  -- sfix52_En32
  SIGNAL tmp_191                          : signed(53 DOWNTO 0);  -- sfix54_En32
  SIGNAL alpha0_deserializer_contl_cnt_15 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_15 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_15 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_15 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_15 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_30 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_31 : std_logic;
  SIGNAL c0_serial_0_15                   : vector_of_unsigned14(0 TO 3);  -- ufix14_En5 [4]
  SIGNAL rcc_out_25                       : vector_of_unsigned14(0 TO 3);  -- ufix14_En5 [4]
  SIGNAL ratechange_splitcomp_out0_25     : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL ratechange_splitcomp_out1_25     : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL ratechange_splitcomp_out2_21     : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL ratechange_splitcomp_out3_21     : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL mz_6                             : unsigned(13 DOWNTO 0);  -- ufix14_En5
  SIGNAL c0_serial_1_14                   : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL rcc_out_26                       : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL ratechange_splitcomp_out0_26     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out1_26     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out2_22     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out3_22     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q2q2                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_192                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL alpha0_deserializer_tapout_12    : vector_of_unsigned28(0 TO 2);  -- ufix28_En19 [3]
  SIGNAL alpha0_deserializer_muxOut_12    : vector_of_unsigned28(0 TO 3);  -- ufix28_En19 [4]
  SIGNAL c0_serialOut_0_12                : vector_of_unsigned28(0 TO 3);  -- ufix28_En19 [4]
  SIGNAL tmp_193                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_194                          : signed(53 DOWNTO 0);  -- sfix54_En32
  SIGNAL tmp_195                          : signed(53 DOWNTO 0);  -- sfix54_En32
  SIGNAL tmp_196                          : signed(53 DOWNTO 0);  -- sfix54_En32
  SIGNAL tmp_197                          : signed(55 DOWNTO 0);  -- sfix56_En32
  SIGNAL tmp_198                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_199                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_200                          : signed(55 DOWNTO 0);  -- sfix56_En32
  SIGNAL tmp_201                          : signed(55 DOWNTO 0);  -- sfix56_En32
  SIGNAL tmp_202                          : signed(55 DOWNTO 0);  -- sfix56_En32
  SIGNAL tmp_203                          : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL tmp_204                          : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL hx                               : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL tmp_205                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_206                          : unsigned(29 DOWNTO 0);  -- ufix30_En19
  SIGNAL tmp_207                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_208                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_209                          : unsigned(29 DOWNTO 0);  -- ufix30_En19
  SIGNAL tmp_210                          : unsigned(29 DOWNTO 0);  -- ufix30_En19
  SIGNAL tmp_211                          : signed(30 DOWNTO 0);  -- sfix31_En19
  SIGNAL tmp_212                          : signed(32 DOWNTO 0);  -- sfix33_En19
  SIGNAL tmp_213                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_214                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_215                          : signed(32 DOWNTO 0);  -- sfix33_En19
  SIGNAL tmp_216                          : signed(32 DOWNTO 0);  -- sfix33_En19
  SIGNAL tmp_217                          : signed(34 DOWNTO 0);  -- sfix35_En19
  SIGNAL delayMatch_reg_5                 : vector_of_signed35(0 TO 2);  -- sfix35 [3]
  SIGNAL tmp_218                          : signed(34 DOWNTO 0);  -- sfix35_En19
  SIGNAL tmp_219                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_220                          : signed(36 DOWNTO 0);  -- sfix37_En19
  SIGNAL delayMatch_reg_6                 : vector_of_signed37(0 TO 2);  -- sfix37 [3]
  SIGNAL tmp_221                          : signed(36 DOWNTO 0);  -- sfix37_En19
  SIGNAL tmp_222                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_223                          : signed(38 DOWNTO 0);  -- sfix39_En19
  SIGNAL delayMatch_reg_7                 : vector_of_signed39(0 TO 2);  -- sfix39 [3]
  SIGNAL tmp_224                          : signed(38 DOWNTO 0);  -- sfix39_En19
  SIGNAL tmp_225                          : unsigned(41 DOWNTO 0);  -- ufix42_En32
  SIGNAL tmp_226                          : signed(53 DOWNTO 0);  -- sfix54_En32
  SIGNAL delayMatch_reg_8                 : vector_of_signed54(0 TO 1);  -- sfix54 [2]
  SIGNAL tmp_227                          : signed(53 DOWNTO 0);  -- sfix54_En32
  SIGNAL tmp_228                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_229                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_230                          : signed(55 DOWNTO 0);  -- sfix56_En32
  SIGNAL delayMatch_reg_9                 : vector_of_signed56(0 TO 2);  -- sfix56 [3]
  SIGNAL tmp_231                          : signed(55 DOWNTO 0);  -- sfix56_En32
  SIGNAL alpha0_deserializer_contl_cnt_16 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_16 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_16 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_16 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_16 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_32 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_33 : std_logic;
  SIGNAL tmp_232                          : signed(14 DOWNTO 0);  -- sfix15_En4
  SIGNAL tmp_233                          : signed(14 DOWNTO 0);  -- sfix15_En4
  SIGNAL p854tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En4
  SIGNAL p854tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En4
  SIGNAL tmp_234                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_235                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_236                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_237                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_238                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_239                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_240                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_241                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_242                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_243                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_244                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL delayMatch_reg_10                : vector_of_signed15(0 TO 1);  -- sfix15 [2]
  SIGNAL tmp_245                          : signed(14 DOWNTO 0);  -- sfix15_En4
  SIGNAL tmp_246                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL delayMatch_reg_11                : vector_of_unsigned15(0 TO 2);  -- ufix15 [3]
  SIGNAL tmp_247                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_248                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL delayMatch_reg_12                : vector_of_unsigned15(0 TO 2);  -- ufix15 [3]
  SIGNAL tmp_249                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_250                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL delayMatch_reg_13                : vector_of_unsigned15(0 TO 2);  -- ufix15 [3]
  SIGNAL tmp_251                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_252                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL c0_serial_0_16                   : vector_of_signed16(0 TO 3);  -- sfix16 [4]
  SIGNAL rcc_out_27                       : vector_of_signed16(0 TO 3);  -- sfix16 [4]
  SIGNAL ratechange_splitcomp_out0_27     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL ratechange_splitcomp_out1_27     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL ratechange_splitcomp_out2_23     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL ratechange_splitcomp_out3_23     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL tmp_253                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL q2_10                            : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q2_11                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL tmp_254                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_255                          : signed(30 DOWNTO 0);  -- sfix31_En18
  SIGNAL delayMatch_reg_14                : vector_of_signed31(0 TO 1);  -- sfix31 [2]
  SIGNAL tmp_256                          : signed(30 DOWNTO 0);  -- sfix31_En18
  SIGNAL tmp_257                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_258                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_259                          : signed(33 DOWNTO 0);  -- sfix34_En19
  SIGNAL delayMatch_reg_15                : vector_of_signed34(0 TO 1);  -- sfix34 [2]
  SIGNAL tmp_260                          : signed(33 DOWNTO 0);  -- sfix34_En19
  SIGNAL tmp_261                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_262                          : signed(35 DOWNTO 0);  -- sfix36_En19
  SIGNAL delayMatch_reg_16                : vector_of_signed36(0 TO 1);  -- sfix36 [2]
  SIGNAL tmp_263                          : signed(35 DOWNTO 0);  -- sfix36_En19
  SIGNAL tmp_264                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_265                          : signed(37 DOWNTO 0);  -- sfix38_En19
  SIGNAL delayMatch_reg_17                : vector_of_signed38(0 TO 1);  -- sfix38 [2]
  SIGNAL tmp_266                          : signed(37 DOWNTO 0);  -- sfix38_En19
  SIGNAL tmp_267                          : unsigned(41 DOWNTO 0);  -- ufix42_En32
  SIGNAL tmp_268                          : signed(52 DOWNTO 0);  -- sfix53_En32
  SIGNAL tmp_269                          : signed(52 DOWNTO 0);  -- sfix53_En32
  SIGNAL tmp_270                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_271                          : signed(54 DOWNTO 0);  -- sfix55_En32
  SIGNAL delayMatch_reg_18                : vector_of_signed55(0 TO 1);  -- sfix55 [2]
  SIGNAL tmp_272                          : signed(54 DOWNTO 0);  -- sfix55_En32
  SIGNAL tmp_273                          : unsigned(27 DOWNTO 0);  -- ufix28_En19
  SIGNAL tmp_274                          : signed(56 DOWNTO 0);  -- sfix57_En32
  SIGNAL delayMatch_reg_19                : vector_of_signed57(0 TO 1);  -- sfix57 [2]
  SIGNAL tmp_275                          : signed(56 DOWNTO 0);  -- sfix57_En32
  SIGNAL alpha0_deserializer_tapout_13    : vector_of_signed30(0 TO 2);  -- sfix30 [3]
  SIGNAL rcc_out_28                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out3_24     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_24     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_28     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL tmp_276                          : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL v2bz                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bz_1                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bz_2                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_1_15                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_28     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q2_12                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL multiplier_mul_temp_6            : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL tmp_277                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL alpha0_deserializer_muxOut_13    : vector_of_signed30(0 TO 3);  -- sfix30 [4]
  SIGNAL c0_serialOut_0_13                : vector_of_signed30(0 TO 3);  -- sfix30 [4]
  SIGNAL tmp_278                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_279                          : signed(28 DOWNTO 0);  -- sfix29_En18
  SIGNAL tmp_280                          : signed(30 DOWNTO 0);  -- sfix31_En18
  SIGNAL tmp_281                          : signed(30 DOWNTO 0);  -- sfix31_En18
  SIGNAL tmp_282                          : signed(33 DOWNTO 0);  -- sfix34_En19
  SIGNAL tmp_283                          : signed(33 DOWNTO 0);  -- sfix34_En19
  SIGNAL tmp_284                          : signed(35 DOWNTO 0);  -- sfix36_En19
  SIGNAL tmp_285                          : signed(35 DOWNTO 0);  -- sfix36_En19
  SIGNAL tmp_286                          : signed(37 DOWNTO 0);  -- sfix38_En19
  SIGNAL tmp_287                          : signed(37 DOWNTO 0);  -- sfix38_En19
  SIGNAL tmp_288                          : signed(52 DOWNTO 0);  -- sfix53_En32
  SIGNAL tmp_289                          : signed(52 DOWNTO 0);  -- sfix53_En32
  SIGNAL tmp_290                          : signed(54 DOWNTO 0);  -- sfix55_En32
  SIGNAL tmp_291                          : signed(54 DOWNTO 0);  -- sfix55_En32
  SIGNAL tmp_292                          : signed(56 DOWNTO 0);  -- sfix57_En32
  SIGNAL tmp_293                          : signed(56 DOWNTO 0);  -- sfix57_En32
  SIGNAL v2bz_3                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q2_13                            : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q2_14                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL hx_1                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q2_15                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL alpha0_deserializer_tapout_14    : vector_of_signed29(0 TO 2);  -- sfix29 [3]
  SIGNAL rcc_out_29                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out3_25     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_25     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_29     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL tmp_294                          : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL hy                               : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_1_16                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_29     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q2_16                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL rcc_out_30                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out3_26     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_26     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_30     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serialOut_0_14                : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL tmp_295                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_296                          : unsigned(27 DOWNTO 0);  -- ufix28_En18
  SIGNAL tmp_297                          : signed(34 DOWNTO 0);  -- sfix35_En19
  SIGNAL tmp_298                          : signed(34 DOWNTO 0);  -- sfix35_En19
  SIGNAL tmp_299                          : signed(36 DOWNTO 0);  -- sfix37_En19
  SIGNAL tmp_300                          : signed(36 DOWNTO 0);  -- sfix37_En19
  SIGNAL tmp_301                          : signed(38 DOWNTO 0);  -- sfix39_En19
  SIGNAL tmp_302                          : signed(38 DOWNTO 0);  -- sfix39_En19
  SIGNAL tmp_303                          : signed(53 DOWNTO 0);  -- sfix54_En32
  SIGNAL tmp_304                          : signed(53 DOWNTO 0);  -- sfix54_En32
  SIGNAL tmp_305                          : signed(55 DOWNTO 0);  -- sfix56_En32
  SIGNAL tmp_306                          : signed(55 DOWNTO 0);  -- sfix56_En32
  SIGNAL hy_1                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_0_17                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_30     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2q1mx_2                         : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL multiplier_mul_temp_7            : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_307                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL alpha0_deserializer_muxOut_14    : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL tmp_308                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_309                          : signed(27 DOWNTO 0);  -- sfix28_En4
  SIGNAL tmp_310                          : signed(28 DOWNTO 0);  -- sfix29_En4
  SIGNAL tmp_311                          : signed(28 DOWNTO 0);  -- sfix29_En4
  SIGNAL tmp_312                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_313                          : signed(27 DOWNTO 0);  -- sfix28_En4
  SIGNAL tmp_314                          : signed(28 DOWNTO 0);  -- sfix29_En4
  SIGNAL tmp_315                          : signed(28 DOWNTO 0);  -- sfix29_En4
  SIGNAL tmp_316                          : std_logic;
  SIGNAL y_y                              : signed(14 DOWNTO 0);  -- sfix15_En2
  SIGNAL y_y_1                            : signed(14 DOWNTO 0);  -- sfix15_En2
  SIGNAL delayMatch_reg_20                : vector_of_signed15(0 TO 5);  -- sfix15 [6]
  SIGNAL y_y_2                            : signed(14 DOWNTO 0);  -- sfix15_En2
  SIGNAL tmp_318                          : signed(14 DOWNTO 0);  -- sfix15_En2
  SIGNAL tmp_319                          : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL c0_serial_1_17                   : vector_of_unsigned14(0 TO 3);  -- ufix14_En3 [4]
  SIGNAL rcc_out_31                       : vector_of_unsigned14(0 TO 3);  -- ufix14_En3 [4]
  SIGNAL ratechange_splitcomp_out0_31     : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL ratechange_splitcomp_out1_31     : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL ratechange_splitcomp_out2_27     : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL ratechange_splitcomp_out3_27     : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL v2bx                             : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL multiplier_cast_1                : signed(14 DOWNTO 0);  -- sfix15_En3
  SIGNAL multiplier_mul_temp_8            : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_320                          : signed(32 DOWNTO 0);  -- sfix33_En17
  SIGNAL alpha0_deserializer_tapout_15    : vector_of_signed33(0 TO 2);  -- sfix33_En17 [3]
  SIGNAL alpha0_deserializer_muxOut_15    : vector_of_signed33(0 TO 3);  -- sfix33_En17 [4]
  SIGNAL c0_serialOut_0_15                : vector_of_signed33(0 TO 3);  -- sfix33_En17 [4]
  SIGNAL tmp_321                          : signed(32 DOWNTO 0);  -- sfix33_En17
  SIGNAL tmp_322                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL alpha0_deserializer_contl_cnt_17 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_17 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_17 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_17 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_17 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_34 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_35 : std_logic;
  SIGNAL tmp_323                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_324                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_325                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_326                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_327                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_328                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL delayMatch_reg_21                : vector_of_signed17(0 TO 2);  -- sfix17 [3]
  SIGNAL tmp_329                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_330                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_331                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_332                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_333                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL delayMatch_reg_22                : vector_of_signed17(0 TO 2);  -- sfix17 [3]
  SIGNAL tmp_334                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_335                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_336                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_337                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_338                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL delayMatch_reg_23                : vector_of_signed17(0 TO 2);  -- sfix17 [3]
  SIGNAL tmp_339                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_340                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_341                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_342                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_343                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL delayMatch_reg_24                : vector_of_signed17(0 TO 2);  -- sfix17 [3]
  SIGNAL tmp_344                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL c0_serial_0_18                   : vector_of_signed17(0 TO 3);  -- sfix17_En14 [4]
  SIGNAL rcc_out_32                       : vector_of_signed17(0 TO 3);  -- sfix17_En14 [4]
  SIGNAL ratechange_splitcomp_out0_32     : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL ratechange_splitcomp_out1_32     : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL ratechange_splitcomp_out2_28     : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL ratechange_splitcomp_out3_28     : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_345                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL c0_serial_1_18                   : vector_of_signed14(0 TO 3);  -- sfix14_En2 [4]
  SIGNAL rcc_out_33                       : vector_of_signed14(0 TO 3);  -- sfix14_En2 [4]
  SIGNAL ratechange_splitcomp_out0_33     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL ratechange_splitcomp_out1_33     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL ratechange_splitcomp_out2_29     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL ratechange_splitcomp_out3_29     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL v2bz_4                           : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL tmp_346                          : signed(30 DOWNTO 0);  -- sfix31_En16
  SIGNAL alpha0_deserializer_tapout_16    : vector_of_signed31(0 TO 2);  -- sfix31_En16 [3]
  SIGNAL alpha0_deserializer_muxOut_16    : vector_of_signed31(0 TO 3);  -- sfix31_En16 [4]
  SIGNAL c0_serialOut_0_16                : vector_of_signed31(0 TO 3);  -- sfix31_En16 [4]
  SIGNAL tmp_347                          : signed(30 DOWNTO 0);  -- sfix31_En16
  SIGNAL tmp_348                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL delayMatch_reg_25                : vector_of_signed34(0 TO 1);  -- sfix34 [2]
  SIGNAL tmp_349                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_350                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_351                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_352                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_353                          : signed(32 DOWNTO 0);  -- sfix33_En17
  SIGNAL tmp_354                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_355                          : signed(30 DOWNTO 0);  -- sfix31_En16
  SIGNAL tmp_356                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL delayMatch_reg_26                : vector_of_signed34(0 TO 1);  -- sfix34 [2]
  SIGNAL tmp_357                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_358                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_359                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_360                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL delayMatch_reg_27                : vector_of_signed36(0 TO 6);  -- sfix36 [7]
  SIGNAL tmp_361                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_362                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL delayMatch_reg_28                : vector_of_signed36(0 TO 6);  -- sfix36 [7]
  SIGNAL tmp_363                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_364                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL c0_serial_0_19                   : vector_of_signed36(0 TO 1);  -- sfix36_En17 [2]
  SIGNAL rcc_out_34                       : vector_of_signed36(0 TO 1);  -- sfix36_En17 [2]
  SIGNAL ratechange_splitcomp_out0_34     : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL ratechange_splitcomp_out1_34     : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_365                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL alpha0_deserializer_contl_cnt_18 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_18 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_18 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_18 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_18 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_36 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_37 : std_logic;
  SIGNAL v2bz_5                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bz_6                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bz_7                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL tmp_366                          : signed(15 DOWNTO 0);  -- sfix16_En2
  SIGNAL p850tmp_cast                     : signed(16 DOWNTO 0);  -- sfix17_En2
  SIGNAL tmp_367                          : signed(13 DOWNTO 0);  -- sfix14_En1
  SIGNAL v4bz                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_0_20                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_35                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_35     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_35     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_30     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_30     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bz_8                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL reduced_reg                      : vector_of_unsigned14(0 TO 1);  -- ufix14 [2]
  SIGNAL q3_9                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q3_10                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL reduced_reg_1                    : vector_of_unsigned14(0 TO 2);  -- ufix14 [3]
  SIGNAL q1_5                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q1_6                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q2_17                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q2_18                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_1_19                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_36                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_36     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_36     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_31     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_31     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q3_11                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL multiplier_mul_temp_9            : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_368                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL alpha0_deserializer_tapout_17    : vector_of_signed29(0 TO 2);  -- sfix29 [3]
  SIGNAL alpha0_deserializer_muxOut_17    : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL c0_serialOut_0_17                : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL tmp_369                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_370                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL delayMatch_reg_29                : vector_of_signed28(0 TO 1);  -- sfix28 [2]
  SIGNAL tmp_371                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL tmp_372                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_373                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL delayMatch_reg_30                : vector_of_signed28(0 TO 1);  -- sfix28 [2]
  SIGNAL tmp_374                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL c0_serial_1_20                   : vector_of_signed28(0 TO 1);  -- sfix28_En16 [2]
  SIGNAL rcc_out_37                       : vector_of_signed28(0 TO 1);  -- sfix28_En16 [2]
  SIGNAL ratechange_splitcomp_out0_37     : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL ratechange_splitcomp_out1_37     : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL tmp_375                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL tmp_376                          : signed(63 DOWNTO 0);  -- sfix64_En33
  SIGNAL alpha0_deserializer_tapout_18    : signed(63 DOWNTO 0);  -- sfix64_En33
  SIGNAL alpha0_deserializer_muxOut_18    : vector_of_signed64(0 TO 1);  -- sfix64_En33 [2]
  SIGNAL c0_serialOut_0_18                : vector_of_signed64(0 TO 1);  -- sfix64_En33 [2]
  SIGNAL alpha0_deserializer_contl_cnt_19 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL alpha0_deserializer_contl_validOutpu_19 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_19 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_19 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_19 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_38 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_39 : std_logic;
  SIGNAL alpha0_deserializer_contl_cnt_20 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_20 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_20 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_20 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_20 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_40 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_41 : std_logic;
  SIGNAL tmp_377                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_378                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_379                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_380                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_381                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_382                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_383                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_384                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL delayMatch_reg_31                : vector_of_signed17(0 TO 4);  -- sfix17 [5]
  SIGNAL tmp_385                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_386                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_387                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_388                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_389                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL delayMatch_reg_32                : vector_of_signed17(0 TO 4);  -- sfix17 [5]
  SIGNAL tmp_390                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_391                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_392                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_393                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_394                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL delayMatch_reg_33                : vector_of_signed17(0 TO 4);  -- sfix17 [5]
  SIGNAL tmp_395                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_396                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_397                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_398                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_399                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL delayMatch_reg_34                : vector_of_signed17(0 TO 4);  -- sfix17 [5]
  SIGNAL tmp_400                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL c0_serial_0_21                   : vector_of_signed17(0 TO 3);  -- sfix17_En14 [4]
  SIGNAL rcc_out_38                       : vector_of_signed17(0 TO 3);  -- sfix17_En14 [4]
  SIGNAL ratechange_splitcomp_out0_38     : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL ratechange_splitcomp_out1_38     : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL ratechange_splitcomp_out2_32     : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL ratechange_splitcomp_out3_32     : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_401                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL c0_serial_1_21                   : vector_of_unsigned14(0 TO 3);  -- ufix14_En3 [4]
  SIGNAL rcc_out_39                       : vector_of_unsigned14(0 TO 3);  -- ufix14_En3 [4]
  SIGNAL ratechange_splitcomp_out0_39     : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL ratechange_splitcomp_out1_39     : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL ratechange_splitcomp_out2_33     : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL ratechange_splitcomp_out3_33     : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL v2bx_1                           : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL multiplier_cast_2                : signed(14 DOWNTO 0);  -- sfix15_En3
  SIGNAL multiplier_mul_temp_10           : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_402                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL alpha0_deserializer_tapout_19    : vector_of_signed31(0 TO 2);  -- sfix31_En17 [3]
  SIGNAL alpha0_deserializer_muxOut_19    : vector_of_signed31(0 TO 3);  -- sfix31_En17 [4]
  SIGNAL c0_serialOut_0_19                : vector_of_signed31(0 TO 3);  -- sfix31_En17 [4]
  SIGNAL tmp_403                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_404                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_405                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_406                          : signed(28 DOWNTO 0);  -- sfix29_En16
  SIGNAL tmp_407                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL delayMatch_reg_35                : vector_of_signed32(0 TO 1);  -- sfix32 [2]
  SIGNAL tmp_408                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_409                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_410                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_411                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL alpha0_deserializer_contl_cnt_21 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_21 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_21 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_21 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_21 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_42 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_43 : std_logic;
  SIGNAL tmp_412                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_413                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_414                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_415                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_416                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_417                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_418                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_419                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_420                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_421                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_422                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_423                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL delayMatch_reg_36                : vector_of_unsigned15(0 TO 4);  -- ufix15 [5]
  SIGNAL tmp_424                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_425                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL delayMatch_reg_37                : vector_of_unsigned15(0 TO 4);  -- ufix15 [5]
  SIGNAL tmp_426                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_427                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL delayMatch_reg_38                : vector_of_unsigned15(0 TO 4);  -- ufix15 [5]
  SIGNAL tmp_428                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_429                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL delayMatch_reg_39                : vector_of_unsigned15(0 TO 4);  -- ufix15 [5]
  SIGNAL tmp_430                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_431                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL c0_serial_0_22                   : vector_of_signed16(0 TO 3);  -- sfix16 [4]
  SIGNAL rcc_out_40                       : vector_of_signed16(0 TO 3);  -- sfix16 [4]
  SIGNAL ratechange_splitcomp_out0_40     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL ratechange_splitcomp_out1_40     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL ratechange_splitcomp_out2_34     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL ratechange_splitcomp_out3_34     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL tmp_432                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL delayMatch_reg_40                : vector_of_signed14(0 TO 1);  -- sfix14 [2]
  SIGNAL v2bz_9                           : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL v2bz_10                          : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bx_2                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bx_3                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bx_4                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_1_22                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_41                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_41     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_41     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_35     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_35     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bz_11                          : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL multiplier_mul_temp_11           : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL tmp_433                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL alpha0_deserializer_tapout_20    : vector_of_signed30(0 TO 2);  -- sfix30 [3]
  SIGNAL alpha0_deserializer_muxOut_20    : vector_of_signed30(0 TO 3);  -- sfix30 [4]
  SIGNAL c0_serialOut_0_20                : vector_of_signed30(0 TO 3);  -- sfix30 [4]
  SIGNAL tmp_434                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_435                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_436                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_437                          : signed(28 DOWNTO 0);  -- sfix29_En16
  SIGNAL tmp_438                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_439                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_440                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_441                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL delayMatch_reg_41                : vector_of_signed34(0 TO 6);  -- sfix34 [7]
  SIGNAL tmp_442                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_443                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL delayMatch_reg_42                : vector_of_signed34(0 TO 6);  -- sfix34 [7]
  SIGNAL tmp_444                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_445                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL c0_serial_0_23                   : vector_of_signed34(0 TO 1);  -- sfix34_En17 [2]
  SIGNAL rcc_out_42                       : vector_of_signed34(0 TO 1);  -- sfix34_En17 [2]
  SIGNAL ratechange_splitcomp_out0_42     : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL ratechange_splitcomp_out1_42     : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_446                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL alpha0_deserializer_contl_cnt_22 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_22 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_22 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_22 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_22 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_44 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_45 : std_logic;
  SIGNAL tmp_447                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_448                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_449                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_450                          : unsigned(15 DOWNTO 0);  -- ufix16_En3
  SIGNAL tmp_451                          : unsigned(13 DOWNTO 0);  -- ufix14_En2
  SIGNAL delayMatch_reg_43                : vector_of_unsigned15(0 TO 4);  -- ufix15 [5]
  SIGNAL tmp_452                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_453                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL tmp_454                          : signed(14 DOWNTO 0);  -- sfix15_En3
  SIGNAL tmp_455                          : signed(14 DOWNTO 0);  -- sfix15_En3
  SIGNAL p775tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En3
  SIGNAL p775tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En3
  SIGNAL tmp_456                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL tmp_457                          : signed(14 DOWNTO 0);  -- sfix15_En3
  SIGNAL tmp_458                          : signed(14 DOWNTO 0);  -- sfix15_En3
  SIGNAL p838tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En3
  SIGNAL p838tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En3
  SIGNAL tmp_459                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL tmp_460                          : signed(14 DOWNTO 0);  -- sfix15_En2
  SIGNAL tmp_461                          : signed(14 DOWNTO 0);  -- sfix15_En2
  SIGNAL p780tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En2
  SIGNAL p780tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En2
  SIGNAL tmp_462                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL c0_serial_0_24                   : vector_of_signed16(0 TO 3);  -- sfix16 [4]
  SIGNAL rcc_out_43                       : vector_of_signed16(0 TO 3);  -- sfix16 [4]
  SIGNAL ratechange_splitcomp_out0_43     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL ratechange_splitcomp_out1_43     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL ratechange_splitcomp_out2_36     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL ratechange_splitcomp_out3_36     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL tmp_463                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL v2bx_5                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL reduced_reg_2                    : vector_of_unsigned14(0 TO 3);  -- ufix14 [4]
  SIGNAL q0_2                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL reduced_reg_3                    : vector_of_unsigned14(0 TO 1);  -- ufix14 [2]
  SIGNAL q0_3                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q0_4                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL reduced_reg_4                    : vector_of_unsigned14(0 TO 1);  -- ufix14 [2]
  SIGNAL q3_12                            : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q3_13                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q3_14                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_1_23                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_44                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_44     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_44     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_37     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_37     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bx_6                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL multiplier_mul_temp_12           : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL tmp_464                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL alpha0_deserializer_tapout_21    : vector_of_signed30(0 TO 2);  -- sfix30 [3]
  SIGNAL alpha0_deserializer_muxOut_21    : vector_of_signed30(0 TO 3);  -- sfix30 [4]
  SIGNAL c0_serialOut_0_21                : vector_of_signed30(0 TO 3);  -- sfix30 [4]
  SIGNAL tmp_465                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_466                          : signed(28 DOWNTO 0);  -- sfix29_En17
  SIGNAL tmp_467                          : signed(29 DOWNTO 0);  -- sfix30_En17
  SIGNAL tmp_468                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_469                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL tmp_470                          : signed(29 DOWNTO 0);  -- sfix30_En17
  SIGNAL tmp_471                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_472                          : signed(28 DOWNTO 0);  -- sfix29_En17
  SIGNAL tmp_473                          : signed(29 DOWNTO 0);  -- sfix30_En17
  SIGNAL tmp_474                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_475                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL tmp_476                          : signed(29 DOWNTO 0);  -- sfix30_En17
  SIGNAL delayMatch_reg_44                : vector_of_signed30(0 TO 1);  -- sfix30 [2]
  SIGNAL tmp_477                          : signed(29 DOWNTO 0);  -- sfix30_En17
  SIGNAL tmp_478                          : signed(29 DOWNTO 0);  -- sfix30_En17
  SIGNAL delayMatch_reg_45                : vector_of_signed30(0 TO 1);  -- sfix30 [2]
  SIGNAL tmp_479                          : signed(29 DOWNTO 0);  -- sfix30_En17
  SIGNAL tmp_480                          : signed(29 DOWNTO 0);  -- sfix30_En17
  SIGNAL c0_serial_1_24                   : vector_of_signed30(0 TO 1);  -- sfix30_En17 [2]
  SIGNAL rcc_out_45                       : vector_of_signed30(0 TO 1);  -- sfix30_En17 [2]
  SIGNAL ratechange_splitcomp_out0_45     : signed(29 DOWNTO 0);  -- sfix30_En17
  SIGNAL ratechange_splitcomp_out1_45     : signed(29 DOWNTO 0);  -- sfix30_En17
  SIGNAL tmp_481                          : signed(29 DOWNTO 0);  -- sfix30_En17
  SIGNAL tmp_482                          : signed(63 DOWNTO 0);  -- sfix64_En34
  SIGNAL alpha0_deserializer_tapout_22    : signed(63 DOWNTO 0);  -- sfix64_En34
  SIGNAL alpha0_deserializer_muxOut_22    : vector_of_signed64(0 TO 1);  -- sfix64_En34 [2]
  SIGNAL c0_serialOut_0_22                : vector_of_signed64(0 TO 1);  -- sfix64_En34 [2]
  SIGNAL alpha0_deserializer_contl_cnt_23 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL alpha0_deserializer_contl_validOutpu_23 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_23 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_23 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_23 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_46 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_47 : std_logic;
  SIGNAL tmp_483                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_484                          : unsigned(28 DOWNTO 0);  -- ufix29_En17
  SIGNAL tmp_485                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL alpha0_deserializer_contl_cnt_24 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_24 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_24 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_24 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_24 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_48 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_49 : std_logic;
  SIGNAL tmp_486                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_487                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_488                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_489                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_490                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL delayMatch_reg_46                : vector_of_signed19(0 TO 2);  -- sfix19 [3]
  SIGNAL tmp_491                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_492                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_493                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_494                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_495                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_496                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL delayMatch_reg_47                : vector_of_signed19(0 TO 2);  -- sfix19 [3]
  SIGNAL tmp_497                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_498                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_499                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_500                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_501                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_502                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL delayMatch_reg_48                : vector_of_signed19(0 TO 2);  -- sfix19 [3]
  SIGNAL tmp_503                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_504                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_505                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_506                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_507                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_508                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL delayMatch_reg_49                : vector_of_signed19(0 TO 2);  -- sfix19 [3]
  SIGNAL tmp_509                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL c0_serial_0_25                   : vector_of_signed19(0 TO 3);  -- sfix19_En14 [4]
  SIGNAL rcc_out_46                       : vector_of_signed19(0 TO 3);  -- sfix19_En14 [4]
  SIGNAL ratechange_splitcomp_out0_46     : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL ratechange_splitcomp_out1_46     : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL ratechange_splitcomp_out2_38     : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL ratechange_splitcomp_out3_38     : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_510                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL c0_serial_1_25                   : vector_of_signed14(0 TO 3);  -- sfix14_En2 [4]
  SIGNAL rcc_out_47                       : vector_of_signed14(0 TO 3);  -- sfix14_En2 [4]
  SIGNAL ratechange_splitcomp_out0_47     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL ratechange_splitcomp_out1_47     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL ratechange_splitcomp_out2_39     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL ratechange_splitcomp_out3_39     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL v2bz_12                          : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL tmp_511                          : signed(32 DOWNTO 0);  -- sfix33_En16
  SIGNAL alpha0_deserializer_tapout_23    : vector_of_signed33(0 TO 2);  -- sfix33_En16 [3]
  SIGNAL alpha0_deserializer_muxOut_23    : vector_of_signed33(0 TO 3);  -- sfix33_En16 [4]
  SIGNAL c0_serialOut_0_23                : vector_of_signed33(0 TO 3);  -- sfix33_En16 [4]
  SIGNAL tmp_512                          : signed(32 DOWNTO 0);  -- sfix33_En16
  SIGNAL tmp_513                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL delayMatch_reg_50                : vector_of_signed36(0 TO 1);  -- sfix36 [2]
  SIGNAL tmp_514                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_515                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_516                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_517                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_518                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_519                          : unsigned(28 DOWNTO 0);  -- ufix29_En17
  SIGNAL tmp_520                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_521                          : signed(32 DOWNTO 0);  -- sfix33_En16
  SIGNAL tmp_522                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL delayMatch_reg_51                : vector_of_signed36(0 TO 1);  -- sfix36 [2]
  SIGNAL tmp_523                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_524                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_525                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_526                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL delayMatch_reg_52                : vector_of_signed38(0 TO 6);  -- sfix38 [7]
  SIGNAL tmp_527                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_528                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL delayMatch_reg_53                : vector_of_signed38(0 TO 6);  -- sfix38 [7]
  SIGNAL tmp_529                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_530                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL c0_serial_0_26                   : vector_of_signed38(0 TO 1);  -- sfix38_En17 [2]
  SIGNAL rcc_out_48                       : vector_of_signed38(0 TO 1);  -- sfix38_En17 [2]
  SIGNAL ratechange_splitcomp_out0_48     : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL ratechange_splitcomp_out1_48     : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_531                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL alpha0_deserializer_contl_cnt_25 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_25 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_25 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_25 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_25 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_50 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_51 : std_logic;
  SIGNAL delayMatch_reg_54                : vector_of_signed14(0 TO 1);  -- sfix14 [2]
  SIGNAL v4bz_1                           : signed(13 DOWNTO 0);  -- sfix14_En1
  SIGNAL v4bz_2                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bx_7                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bx_8                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v2bx_9                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_0_27                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_49                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_49     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_49     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_40     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_40     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL v4bz_3                           : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL reduced_reg_5                    : vector_of_unsigned14(0 TO 1);  -- ufix14 [2]
  SIGNAL q1_7                             : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q1_8                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q1_9                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q0_5                             : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q1_10                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL c0_serial_1_26                   : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL rcc_out_50                       : vector_of_signed15(0 TO 3);  -- sfix15 [4]
  SIGNAL ratechange_splitcomp_out0_50     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out1_50     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out2_41     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL ratechange_splitcomp_out3_41     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL q1_11                            : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL multiplier_mul_temp_13           : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_532                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL alpha0_deserializer_tapout_24    : vector_of_signed29(0 TO 2);  -- sfix29 [3]
  SIGNAL alpha0_deserializer_muxOut_24    : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL c0_serialOut_0_24                : vector_of_signed29(0 TO 3);  -- sfix29 [4]
  SIGNAL tmp_533                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_534                          : unsigned(27 DOWNTO 0);  -- ufix28_En17
  SIGNAL alpha0_deserializer_contl_cnt_26 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_cntGlobal : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_26 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_26 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_26 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_26 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_52 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_53 : std_logic;
  SIGNAL c0_serial_0_28                   : vector_of_unsigned14(0 TO 2);  -- ufix14_En3 [3]
  SIGNAL rcc_out_51                       : vector_of_unsigned14(0 TO 2);  -- ufix14_En3 [3]
  SIGNAL ratechange_splitcomp_out0_51     : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL ratechange_splitcomp_out1_51     : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL ratechange_splitcomp_out2_42     : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL v2bx_10                          : unsigned(13 DOWNTO 0);  -- ufix14_En3
  SIGNAL reduced_reg_6                    : vector_of_unsigned14(0 TO 1);  -- ufix14 [2]
  SIGNAL q2_19                            : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL c0_serial_1_27                   : vector_of_unsigned14(0 TO 2);  -- ufix14_En14 [3]
  SIGNAL rcc_out_52                       : vector_of_unsigned14(0 TO 2);  -- ufix14_En14 [3]
  SIGNAL ratechange_splitcomp_out0_52     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out1_52     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out2_43     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q3_15                            : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_535                          : unsigned(27 DOWNTO 0);  -- ufix28_En17
  SIGNAL alpha0_deserializer_tapout_25    : vector_of_unsigned28(0 TO 1);  -- ufix28_En17 [2]
  SIGNAL alpha0_deserializer_muxOut_25    : vector_of_unsigned28(0 TO 2);  -- ufix28_En17 [3]
  SIGNAL alpha0_deserializer_deserInnerOut : vector_of_unsigned28(0 TO 2);  -- ufix28_En17 [3]
  SIGNAL c0_serialOut_0_25                : vector_of_unsigned28(0 TO 2);  -- ufix28_En17 [3]
  SIGNAL c0_serial_1_28                   : vector_of_unsigned28(0 TO 1);  -- ufix28_En17 [2]
  SIGNAL rcc_out_53                       : vector_of_unsigned28(0 TO 1);  -- ufix28_En17 [2]
  SIGNAL ratechange_splitcomp_out0_53     : unsigned(27 DOWNTO 0);  -- ufix28_En17
  SIGNAL ratechange_splitcomp_out1_53     : unsigned(27 DOWNTO 0);  -- ufix28_En17
  SIGNAL tmp_536                          : unsigned(27 DOWNTO 0);  -- ufix28_En17
  SIGNAL multiplier_cast_3                : signed(28 DOWNTO 0);  -- sfix29_En17
  SIGNAL multiplier_mul_temp_14           : signed(66 DOWNTO 0);  -- sfix67_En34
  SIGNAL tmp_537                          : signed(65 DOWNTO 0);  -- sfix66_En34
  SIGNAL alpha0_deserializer_tapout_26    : signed(65 DOWNTO 0);  -- sfix66_En34
  SIGNAL alpha0_deserializer_muxOut_26    : vector_of_signed66(0 TO 1);  -- sfix66_En34 [2]
  SIGNAL c0_serialOut_0_26                : vector_of_signed66(0 TO 1);  -- sfix66_En34 [2]
  SIGNAL delayMatch_reg_55                : vector_of_signed65(0 TO 5);  -- sfix65 [6]
  SIGNAL tmp_538                          : signed(64 DOWNTO 0);  -- sfix65_En33
  SIGNAL tmp_539                          : signed(63 DOWNTO 0);  -- sfix64_En33
  SIGNAL tmp_540                          : signed(64 DOWNTO 0);  -- sfix65_En33
  SIGNAL tmp_541                          : signed(64 DOWNTO 0);  -- sfix65_En33
  SIGNAL tmp_542                          : signed(66 DOWNTO 0);  -- sfix67_En34
  SIGNAL tmp_543                          : signed(63 DOWNTO 0);  -- sfix64_En34
  SIGNAL tmp_544                          : signed(66 DOWNTO 0);  -- sfix67_En34
  SIGNAL tmp_545                          : signed(66 DOWNTO 0);  -- sfix67_En34
  SIGNAL tmp_546                          : signed(67 DOWNTO 0);  -- sfix68_En34
  SIGNAL tmp_547                          : signed(65 DOWNTO 0);  -- sfix66_En34
  SIGNAL tmp_548                          : signed(67 DOWNTO 0);  -- sfix68_En34
  SIGNAL tmp_549                          : signed(67 DOWNTO 0);  -- sfix68_En34
  SIGNAL tmp_550                          : signed(13 DOWNTO 0);  -- sfix14_E9
  SIGNAL s0_tmp                           : signed(13 DOWNTO 0);  -- sfix14_E9
  SIGNAL alpha0_deserializer_contl_cnt_27 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL alpha0_deserializer_contl_validOutpu_27 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_27 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_27 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_27 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_54 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_55 : std_logic;
  SIGNAL tmp_551                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_552                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_553                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_554                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_555                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_556                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_557                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_558                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_559                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_560                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_561                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_562                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_563                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_564                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_565                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_566                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_567                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_568                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL c0_serial_0_29                   : vector_of_signed24(0 TO 1);  -- sfix24_En14 [2]
  SIGNAL rcc_out_54                       : vector_of_signed24(0 TO 1);  -- sfix24_En14 [2]
  SIGNAL ratechange_splitcomp_out0_54     : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL ratechange_splitcomp_out1_54     : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_569                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL c0_serial_1_29                   : vector_of_unsigned14(0 TO 1);  -- ufix14_En13 [2]
  SIGNAL rcc_out_55                       : vector_of_unsigned14(0 TO 1);  -- ufix14_En13 [2]
  SIGNAL ratechange_splitcomp_out0_55     : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL ratechange_splitcomp_out1_55     : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL v2q1_3                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL multiplier_cast_4                : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL multiplier_mul_temp_15           : signed(38 DOWNTO 0);  -- sfix39_En27
  SIGNAL tmp_570                          : signed(37 DOWNTO 0);  -- sfix38_En27
  SIGNAL alpha0_deserializer_tapout_27    : signed(37 DOWNTO 0);  -- sfix38_En27
  SIGNAL alpha0_deserializer_muxOut_27    : vector_of_signed38(0 TO 1);  -- sfix38_En27 [2]
  SIGNAL c0_serialOut_0_27                : vector_of_signed38(0 TO 1);  -- sfix38_En27 [2]
  SIGNAL alpha0_deserializer_contl_cnt_28 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL alpha0_deserializer_contl_validOutpu_28 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_28 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_28 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_28 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_56 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_57 : std_logic;
  SIGNAL tmp_571                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_572                          : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_573                          : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_574                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_575                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_576                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_577                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_578                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL az_signed                        : signed(13 DOWNTO 0);  -- sfix14_En5
  SIGNAL tmp_579                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_580                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_581                          : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_582                          : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_583                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_584                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_585                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_586                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_587                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_588                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_589                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_590                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_591                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_592                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL c0_serial_0_30                   : vector_of_signed24(0 TO 1);  -- sfix24_En14 [2]
  SIGNAL rcc_out_56                       : vector_of_signed24(0 TO 1);  -- sfix24_En14 [2]
  SIGNAL ratechange_splitcomp_out0_56     : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL ratechange_splitcomp_out1_56     : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_593                          : signed(23 DOWNTO 0);  -- sfix24_En14
  SIGNAL tmp_594                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_595                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_596                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_597                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL c0_serial_1_30                   : vector_of_unsigned17(0 TO 1);  -- ufix17_En14 [2]
  SIGNAL rcc_out_57                       : vector_of_unsigned17(0 TO 1);  -- ufix17_En14 [2]
  SIGNAL ratechange_splitcomp_out0_57     : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL ratechange_splitcomp_out1_57     : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_598                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL multiplier_cast_5                : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL multiplier_mul_temp_16           : signed(41 DOWNTO 0);  -- sfix42_En28
  SIGNAL tmp_599                          : signed(40 DOWNTO 0);  -- sfix41_En28
  SIGNAL alpha0_deserializer_tapout_28    : signed(40 DOWNTO 0);  -- sfix41_En28
  SIGNAL alpha0_deserializer_muxOut_28    : vector_of_signed41(0 TO 1);  -- sfix41_En28 [2]
  SIGNAL c0_serialOut_0_28                : vector_of_signed41(0 TO 1);  -- sfix41_En28 [2]
  SIGNAL tmp_600                          : signed(37 DOWNTO 0);  -- sfix38_En27
  SIGNAL tmp_601                          : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_602                          : signed(38 DOWNTO 0);  -- sfix39_En27
  SIGNAL tmp_603                          : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_604                          : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_605                          : signed(41 DOWNTO 0);  -- sfix42_En28
  SIGNAL tmp_606                          : signed(40 DOWNTO 0);  -- sfix41_En28
  SIGNAL tmp_607                          : signed(41 DOWNTO 0);  -- sfix42_En28
  SIGNAL tmp_608                          : signed(41 DOWNTO 0);  -- sfix42_En28
  SIGNAL tmp_609                          : signed(64 DOWNTO 0);  -- sfix65_En33
  SIGNAL alpha0_deserializer_contl_cnt_29 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL alpha0_deserializer_contl_validOutpu_29 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_29 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_29 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_29 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_58 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_59 : std_logic;
  SIGNAL tmp_610                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_611                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_612                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_613                          : signed(28 DOWNTO 0);  -- sfix29_En16
  SIGNAL tmp_614                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL delayMatch_reg_56                : vector_of_signed32(0 TO 1);  -- sfix32 [2]
  SIGNAL tmp_615                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_616                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_617                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_618                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_619                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_620                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_621                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_622                          : signed(28 DOWNTO 0);  -- sfix29_En16
  SIGNAL tmp_623                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL delayMatch_reg_57                : vector_of_signed32(0 TO 1);  -- sfix32 [2]
  SIGNAL tmp_624                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_625                          : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL tmp_626                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_627                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL delayMatch_reg_58                : vector_of_signed34(0 TO 6);  -- sfix34 [7]
  SIGNAL tmp_628                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_629                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL delayMatch_reg_59                : vector_of_signed34(0 TO 6);  -- sfix34 [7]
  SIGNAL tmp_630                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_631                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL c0_serial_0_31                   : vector_of_signed34(0 TO 1);  -- sfix34_En17 [2]
  SIGNAL rcc_out_58                       : vector_of_signed34(0 TO 1);  -- sfix34_En17 [2]
  SIGNAL ratechange_splitcomp_out0_58     : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL ratechange_splitcomp_out1_58     : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_632                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_633                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_634                          : unsigned(27 DOWNTO 0);  -- ufix28_En17
  SIGNAL tmp_635                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL alpha0_deserializer_contl_cnt_30 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha0_deserializer_contl_validOutpu_30 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_30 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_30 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_30 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_60 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_61 : std_logic;
  SIGNAL c0_serial_0_32                   : vector_of_signed14(0 TO 3);  -- sfix14_En2 [4]
  SIGNAL rcc_out_59                       : vector_of_signed14(0 TO 3);  -- sfix14_En2 [4]
  SIGNAL ratechange_splitcomp_out0_59     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL ratechange_splitcomp_out1_59     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL ratechange_splitcomp_out2_44     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL ratechange_splitcomp_out3_42     : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL v2bz_13                          : signed(13 DOWNTO 0);  -- sfix14_En2
  SIGNAL c0_serial_1_31                   : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL rcc_out_60                       : vector_of_unsigned14(0 TO 3);  -- ufix14_En14 [4]
  SIGNAL ratechange_splitcomp_out0_60     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out1_60     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out2_45     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL ratechange_splitcomp_out3_43     : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q1_12                            : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL multiplier_cast_6                : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_17           : signed(28 DOWNTO 0);  -- sfix29_En16
  SIGNAL tmp_636                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL alpha0_deserializer_tapout_29    : vector_of_signed28(0 TO 2);  -- sfix28_En16 [3]
  SIGNAL alpha0_deserializer_muxOut_29    : vector_of_signed28(0 TO 3);  -- sfix28_En16 [4]
  SIGNAL c0_serialOut_0_29                : vector_of_signed28(0 TO 3);  -- sfix28_En16 [4]
  SIGNAL tmp_637                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL tmp_638                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_639                          : unsigned(27 DOWNTO 0);  -- ufix28_En17
  SIGNAL tmp_640                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_641                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL tmp_642                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL delayMatch_reg_60                : vector_of_signed31(0 TO 1);  -- sfix31 [2]
  SIGNAL tmp_643                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_644                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL delayMatch_reg_61                : vector_of_signed31(0 TO 1);  -- sfix31 [2]
  SIGNAL tmp_645                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_646                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL c0_serial_1_32                   : vector_of_signed31(0 TO 1);  -- sfix31_En17 [2]
  SIGNAL rcc_out_61                       : vector_of_signed31(0 TO 1);  -- sfix31_En17 [2]
  SIGNAL ratechange_splitcomp_out0_61     : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL ratechange_splitcomp_out1_61     : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_647                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_648                          : signed(64 DOWNTO 0);  -- sfix65_En34
  SIGNAL alpha0_deserializer_tapout_30    : signed(64 DOWNTO 0);  -- sfix65_En34
  SIGNAL alpha0_deserializer_muxOut_30    : vector_of_signed65(0 TO 1);  -- sfix65_En34 [2]
  SIGNAL c0_serialOut_0_30                : vector_of_signed65(0 TO 1);  -- sfix65_En34 [2]
  SIGNAL alpha0_deserializer_contl_cnt_31 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL alpha0_deserializer_contl_validOutpu_31 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_31 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_31 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_31 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_62 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_63 : std_logic;
  SIGNAL tmp_649                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_650                          : unsigned(28 DOWNTO 0);  -- ufix29_En17
  SIGNAL tmp_651                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_652                          : signed(32 DOWNTO 0);  -- sfix33_En16
  SIGNAL tmp_653                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL delayMatch_reg_62                : vector_of_signed36(0 TO 1);  -- sfix36 [2]
  SIGNAL tmp_654                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_655                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_656                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_657                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_658                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_659                          : unsigned(28 DOWNTO 0);  -- ufix29_En17
  SIGNAL tmp_660                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_661                          : signed(32 DOWNTO 0);  -- sfix33_En16
  SIGNAL tmp_662                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL delayMatch_reg_63                : vector_of_signed36(0 TO 1);  -- sfix36 [2]
  SIGNAL tmp_663                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_664                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_665                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_666                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL delayMatch_reg_64                : vector_of_signed38(0 TO 6);  -- sfix38 [7]
  SIGNAL tmp_667                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_668                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL delayMatch_reg_65                : vector_of_signed38(0 TO 6);  -- sfix38 [7]
  SIGNAL tmp_669                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_670                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL c0_serial_0_33                   : vector_of_signed38(0 TO 1);  -- sfix38_En17 [2]
  SIGNAL rcc_out_62                       : vector_of_signed38(0 TO 1);  -- sfix38_En17 [2]
  SIGNAL ratechange_splitcomp_out0_62     : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL ratechange_splitcomp_out1_62     : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_671                          : signed(37 DOWNTO 0);  -- sfix38_En17
  SIGNAL tmp_672                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_673                          : unsigned(27 DOWNTO 0);  -- ufix28_En17
  SIGNAL tmp_674                          : signed(28 DOWNTO 0);  -- sfix29_En17
  SIGNAL tmp_675                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_676                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_677                          : signed(27 DOWNTO 0);  -- sfix28_En15
  SIGNAL tmp_678                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL delayMatch_reg_66                : vector_of_signed31(0 TO 1);  -- sfix31 [2]
  SIGNAL tmp_679                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_680                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_681                          : unsigned(27 DOWNTO 0);  -- ufix28_En17
  SIGNAL tmp_682                          : signed(28 DOWNTO 0);  -- sfix29_En17
  SIGNAL tmp_683                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_684                          : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL tmp_685                          : signed(27 DOWNTO 0);  -- sfix28_En15
  SIGNAL tmp_686                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_687                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL c0_serial_1_33                   : vector_of_signed31(0 TO 1);  -- sfix31_En17 [2]
  SIGNAL rcc_out_63                       : vector_of_signed31(0 TO 1);  -- sfix31_En17 [2]
  SIGNAL ratechange_splitcomp_out0_63     : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL ratechange_splitcomp_out1_63     : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_688                          : signed(30 DOWNTO 0);  -- sfix31_En17
  SIGNAL tmp_689                          : signed(68 DOWNTO 0);  -- sfix69_En34
  SIGNAL alpha0_deserializer_tapout_31    : signed(68 DOWNTO 0);  -- sfix69_En34
  SIGNAL alpha0_deserializer_muxOut_31    : vector_of_signed69(0 TO 1);  -- sfix69_En34 [2]
  SIGNAL c0_serialOut_0_31                : vector_of_signed69(0 TO 1);  -- sfix69_En34 [2]
  SIGNAL delayMatch_reg_67                : vector_of_signed65(0 TO 5);  -- sfix65 [6]
  SIGNAL tmp_690                          : signed(64 DOWNTO 0);  -- sfix65_En33
  SIGNAL tmp_691                          : signed(63 DOWNTO 0);  -- sfix64_En33
  SIGNAL tmp_692                          : signed(64 DOWNTO 0);  -- sfix65_En33
  SIGNAL tmp_693                          : signed(64 DOWNTO 0);  -- sfix65_En33
  SIGNAL tmp_694                          : signed(66 DOWNTO 0);  -- sfix67_En34
  SIGNAL tmp_695                          : signed(64 DOWNTO 0);  -- sfix65_En34
  SIGNAL tmp_696                          : signed(66 DOWNTO 0);  -- sfix67_En34
  SIGNAL tmp_697                          : signed(66 DOWNTO 0);  -- sfix67_En34
  SIGNAL tmp_698                          : signed(69 DOWNTO 0);  -- sfix70_En34
  SIGNAL tmp_699                          : signed(68 DOWNTO 0);  -- sfix69_En34
  SIGNAL tmp_700                          : signed(69 DOWNTO 0);  -- sfix70_En34
  SIGNAL tmp_701                          : signed(69 DOWNTO 0);  -- sfix70_En34
  SIGNAL tmp_702                          : signed(13 DOWNTO 0);  -- sfix14_E9
  SIGNAL s1_tmp                           : signed(13 DOWNTO 0);  -- sfix14_E9
  SIGNAL tmp_703                          : signed(38 DOWNTO 0);  -- sfix39_En27
  SIGNAL tmp_704                          : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_705                          : signed(38 DOWNTO 0);  -- sfix39_En27
  SIGNAL tmp_706                          : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_707                          : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_708                          : signed(41 DOWNTO 0);  -- sfix42_En28
  SIGNAL tmp_709                          : signed(40 DOWNTO 0);  -- sfix41_En28
  SIGNAL tmp_710                          : signed(41 DOWNTO 0);  -- sfix42_En28
  SIGNAL tmp_711                          : signed(41 DOWNTO 0);  -- sfix42_En28
  SIGNAL tmp_712                          : signed(66 DOWNTO 0);  -- sfix67_En33
  SIGNAL alpha0_deserializer_contl_cnt_32 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL alpha0_deserializer_contl_validOutpu_32 : std_logic;
  SIGNAL alpha0_deserializer_innerRegEn_32 : std_logic;
  SIGNAL alpha0_deserializer_innerRegCtrolEn_32 : std_logic;
  SIGNAL alpha0_deserializer_outBypassEn_32 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_64 : std_logic;
  SIGNAL alpha0_deserializer_tapDelayEn_65 : std_logic;
  SIGNAL tmp_713                          : signed(32 DOWNTO 0);  -- sfix33_En17
  SIGNAL tmp_714                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_715                          : signed(30 DOWNTO 0);  -- sfix31_En16
  SIGNAL tmp_716                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL delayMatch_reg_68                : vector_of_signed34(0 TO 1);  -- sfix34 [2]
  SIGNAL tmp_717                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_718                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_719                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_720                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_721                          : signed(32 DOWNTO 0);  -- sfix33_En17
  SIGNAL tmp_722                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_723                          : signed(30 DOWNTO 0);  -- sfix31_En16
  SIGNAL tmp_724                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL delayMatch_reg_69                : vector_of_signed34(0 TO 1);  -- sfix34 [2]
  SIGNAL tmp_725                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_726                          : signed(33 DOWNTO 0);  -- sfix34_En17
  SIGNAL tmp_727                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_728                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL delayMatch_reg_70                : vector_of_signed36(0 TO 6);  -- sfix36 [7]
  SIGNAL tmp_729                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_730                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL delayMatch_reg_71                : vector_of_signed36(0 TO 6);  -- sfix36 [7]
  SIGNAL tmp_731                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_732                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL c0_serial_0_34                   : vector_of_signed36(0 TO 1);  -- sfix36_En17 [2]
  SIGNAL rcc_out_64                       : vector_of_signed36(0 TO 1);  -- sfix36_En17 [2]
  SIGNAL ratechange_splitcomp_out0_64     : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL ratechange_splitcomp_out1_64     : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_733                          : signed(35 DOWNTO 0);  -- sfix36_En17
  SIGNAL tmp_734                          : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL tmp_735                          : signed(28 DOWNTO 0);  -- sfix29_En16
  SIGNAL tmp_736                          : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL tmp_737                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL tmp_738                          : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL delayMatch_reg_72                : vector_of_signed30(0 TO 1);  -- sfix30 [2]
  SIGNAL tmp_739                          : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL tmp_740                          : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL tmp_741                          : signed(14 DOWNTO 0);  -- sfix15_En2
  SIGNAL tmp_742                          : signed(14 DOWNTO 0);  -- sfix15_En2
  SIGNAL p797tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En2
  SIGNAL p797tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En2
  SIGNAL multiplier_cast_7                : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_18           : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL tmp_743                          : signed(28 DOWNTO 0);  -- sfix29_En16
  SIGNAL tmp_744                          : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL tmp_745                          : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL tmp_746                          : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL tmp_747                          : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL tmp_748                          : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL tmp_749                          : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL c0_serial_1_34                   : vector_of_signed30(0 TO 1);  -- sfix30_En16 [2]
  SIGNAL rcc_out_65                       : vector_of_signed30(0 TO 1);  -- sfix30_En16 [2]
  SIGNAL ratechange_splitcomp_out0_65     : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL ratechange_splitcomp_out1_65     : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL tmp_750                          : signed(29 DOWNTO 0);  -- sfix30_En16
  SIGNAL tmp_751                          : signed(65 DOWNTO 0);  -- sfix66_En33
  SIGNAL alpha0_deserializer_tapout_32    : signed(65 DOWNTO 0);  -- sfix66_En33
  SIGNAL alpha0_deserializer_muxOut_32    : vector_of_signed66(0 TO 1);  -- sfix66_En33 [2]
  SIGNAL c0_serialOut_0_32                : vector_of_signed66(0 TO 1);  -- sfix66_En33 [2]
  SIGNAL delayMatch_reg_73                : vector_of_signed67(0 TO 5);  -- sfix67 [6]
  SIGNAL tmp_752                          : signed(66 DOWNTO 0);  -- sfix67_En33
  SIGNAL tmp_753                          : signed(65 DOWNTO 0);  -- sfix66_En33
  SIGNAL tmp_754                          : signed(66 DOWNTO 0);  -- sfix67_En33
  SIGNAL tmp_755                          : signed(66 DOWNTO 0);  -- sfix67_En33
  SIGNAL tmp_756                          : signed(68 DOWNTO 0);  -- sfix69_En34
  SIGNAL tmp_757                          : signed(64 DOWNTO 0);  -- sfix65_En34
  SIGNAL tmp_758                          : signed(68 DOWNTO 0);  -- sfix69_En34
  SIGNAL tmp_759                          : signed(68 DOWNTO 0);  -- sfix69_En34
  SIGNAL tmp_760                          : signed(69 DOWNTO 0);  -- sfix70_En34
  SIGNAL tmp_761                          : signed(68 DOWNTO 0);  -- sfix69_En34
  SIGNAL tmp_762                          : signed(69 DOWNTO 0);  -- sfix70_En34
  SIGNAL tmp_763                          : signed(69 DOWNTO 0);  -- sfix70_En34
  SIGNAL tmp_764                          : signed(13 DOWNTO 0);  -- sfix14_E10
  SIGNAL s2_tmp                           : signed(13 DOWNTO 0);  -- sfix14_E10
  SIGNAL tmp_765                          : signed(37 DOWNTO 0);  -- sfix38_En27
  SIGNAL tmp_766                          : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_767                          : signed(38 DOWNTO 0);  -- sfix39_En27
  SIGNAL tmp_768                          : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_769                          : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL tmp_770                          : signed(66 DOWNTO 0);  -- sfix67_En33
  SIGNAL delayMatch_reg_74                : vector_of_signed67(0 TO 5);  -- sfix67 [6]
  SIGNAL tmp_771                          : signed(66 DOWNTO 0);  -- sfix67_En33
  SIGNAL tmp_772                          : signed(65 DOWNTO 0);  -- sfix66_En33
  SIGNAL tmp_773                          : signed(66 DOWNTO 0);  -- sfix67_En33
  SIGNAL tmp_774                          : signed(66 DOWNTO 0);  -- sfix67_En33
  SIGNAL tmp_775                          : signed(68 DOWNTO 0);  -- sfix69_En34
  SIGNAL tmp_776                          : signed(63 DOWNTO 0);  -- sfix64_En34
  SIGNAL tmp_777                          : signed(68 DOWNTO 0);  -- sfix69_En34
  SIGNAL tmp_778                          : signed(68 DOWNTO 0);  -- sfix69_En34
  SIGNAL tmp_779                          : signed(69 DOWNTO 0);  -- sfix70_En34
  SIGNAL tmp_780                          : signed(65 DOWNTO 0);  -- sfix66_En34
  SIGNAL tmp_781                          : signed(69 DOWNTO 0);  -- sfix70_En34
  SIGNAL tmp_782                          : signed(69 DOWNTO 0);  -- sfix70_En34
  SIGNAL tmp_783                          : signed(13 DOWNTO 0);  -- sfix14_E10
  SIGNAL s3_tmp                           : signed(13 DOWNTO 0);  -- sfix14_E10

BEGIN
  UMadgwick_correction_fixpt_e : Madgwick_correction_fixpt_en
    PORT MAP( clk_1 => clk,
              reset_x_1 => reset_x,
              clk_enable_1 => clk_enable,
              clk_enable_2 => clk_enable_1
              );

  UMadgwick_correction_fixpt_t : Madgwick_correction_fixpt_tc
    PORT MAP( clk => clk,
              reset_x => reset_x,
              clk_enable => clk_enable_1,
              enb => enb,
              enb_1_2_0 => enb_1_2_0,
              enb_1_4_0 => enb_1_4_0,
              enb_1_4_1 => enb_1_4_1
              );

  alpha0_deserializer_contl_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt <= to_unsigned(16#0#, 2);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' THEN
        IF alpha0_deserializer_contl_cnt = to_unsigned(16#1#, 2) THEN 
          alpha0_deserializer_contl_cnt <= to_unsigned(16#0#, 2);
        ELSE 
          alpha0_deserializer_contl_cnt <= alpha0_deserializer_contl_cnt + to_unsigned(16#1#, 2);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_process;

  alpha0_deserializer_tapDelayEn <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt < to_unsigned(16#1#, 
    2));
  
  alpha0_deserializer_contl_validOutpu <= '1' WHEN alpha0_deserializer_contl_cnt = to_unsigned(16#1#, 2) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn <= '1' WHEN alpha0_deserializer_contl_validOutpu = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn <= '1' WHEN alpha0_deserializer_contl_validOutpu = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn <= '1';

  alpha0_deserializer_tapDelayEn_1 <= enb_1_2_0 AND alpha0_deserializer_tapDelayEn;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 1
  ctr_0_1_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      counterSig <= '0';
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' THEN
        counterSig <=  NOT counterSig;
      END IF;
    END IF;
  END PROCESS ctr_0_1_process;


  alpha0_deserializer_contl_1_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_1 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_1 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_1 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_1 <= alpha0_deserializer_contl_cnt_1 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_1_process;

  alpha0_deserializer_tapDelayEn_2 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_1 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_1 <= '1' WHEN alpha0_deserializer_contl_cnt_1 = to_unsigned(16#3#, 3) 
    ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_1 <= '1' WHEN alpha0_deserializer_contl_validOutpu_1 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_1 <= '1' WHEN alpha0_deserializer_contl_validOutpu_1 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_1 <= '1';

  alpha0_deserializer_tapDelayEn_3 <= enb AND alpha0_deserializer_tapDelayEn_2;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 3
  ctr_0_3_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      counterSig_1 <= to_unsigned(16#0#, 2);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        counterSig_1 <= counterSig_1 + to_unsigned(16#1#, 2);
      END IF;
    END IF;
  END PROCESS ctr_0_3_process;


  c0_serial_0(0) <= q1;
  c0_serial_0(1) <= q1;
  c0_serial_0(2) <= q1;
  c0_serial_0(3) <= q2;

  outputgen3: FOR kk IN 0 TO 3 GENERATE
    c0_serial_0_1(kk) <= unsigned(c0_serial_0(kk));
  END GENERATE;

  rcc_out <= c0_serial_0_1;

  ratechange_splitcomp_out0 <= rcc_out(0);

  ratechange_splitcomp_out1 <= rcc_out(1);

  ratechange_splitcomp_out2 <= rcc_out(2);

  ratechange_splitcomp_out3 <= rcc_out(3);

  
  q1_1 <= ratechange_splitcomp_out0 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3;

  c0_serial_1(0) <= q3;
  c0_serial_1(1) <= q2;
  c0_serial_1(2) <= q1;
  c0_serial_1(3) <= q3;

  outputgen2: FOR kk IN 0 TO 3 GENERATE
    c0_serial_1_1(kk) <= unsigned(c0_serial_1(kk));
  END GENERATE;

  rcc_out_1 <= c0_serial_1_1;

  ratechange_splitcomp_out0_1 <= rcc_out_1(0);

  ratechange_splitcomp_out1_1 <= rcc_out_1(1);

  ratechange_splitcomp_out2_1 <= rcc_out_1(2);

  ratechange_splitcomp_out3_1 <= rcc_out_1(3);

  
  q3_1 <= ratechange_splitcomp_out0_1 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_1 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_1 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_1;

  -- 'Madgwick_correction_fixpt:27' q1q3 = fi(q1 * q3, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:26' q1q2 = fi(q1 * q2, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:25' q1q1 = fi(q1 * q1, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:29' q2q3 = fi(q2 * q3, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:26' q1q2 = fi(q1 * q2, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:25' q1q1 = fi(q1 * q1, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:29' q2q3 = fi(q2 * q3, 0, 14, 14, fm);
  tmp <= q1_1 * q3_1;

  alpha0_deserializer_tapDelayComp_pro : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_3 = '1' THEN
        alpha0_deserializer_tapout(2) <= tmp;
        alpha0_deserializer_tapout(0 TO 1) <= alpha0_deserializer_tapout(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_pro;


  alpha0_deserializer_muxOut(0) <= alpha0_deserializer_tapout(0);
  alpha0_deserializer_muxOut(1) <= alpha0_deserializer_tapout(1);
  alpha0_deserializer_muxOut(2) <= alpha0_deserializer_tapout(2);
  alpha0_deserializer_muxOut(3) <= tmp;

  alpha0_deserializer_regComp_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0 <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_1 = '1' THEN
        c0_serialOut_0 <= alpha0_deserializer_muxOut;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_process;


  tmp_1 <= c0_serialOut_0(0);

  tmp_2 <= tmp_1(27 DOWNTO 14);

  tmp_3 <= resize(tmp_2 & '0', 16);

  tmp_4 <= signed(resize(tmp_3, 17));

  tmp_5 <= resize(tmp_4, 19);

  alpha0_deserializer_contl_2_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_2 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_2 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_2 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_2 <= alpha0_deserializer_contl_cnt_2 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_2_process;

  alpha0_deserializer_tapDelayEn_4 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_2 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_2 <= '1' WHEN alpha0_deserializer_contl_cnt_2 = to_unsigned(16#3#, 3) 
    ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_2 <= '1' WHEN alpha0_deserializer_contl_validOutpu_2 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_2 <= '1' WHEN alpha0_deserializer_contl_validOutpu_2 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_2 <= '1';

  alpha0_deserializer_tapDelayEn_5 <= enb AND alpha0_deserializer_tapDelayEn_4;

  q0_unsigned <= unsigned(q0);

  -- 'Madgwick_correction_fixpt:19' v2q0q2 = fi(fi(2.0, 0, 2, 0, fm) * q0 * q2, 0, 14, 13, fm);
  tmp_6 <= resize(q0_unsigned & '0', 16);

  tmp_7 <= signed(resize(tmp_6, 17));

  -- 'Madgwick_correction_fixpt:13' v2q0mz = fi(fi(2.0, 0, 2, 0, fm) * q0 * mz, 0, 14, 4, fm);
  tmp_8 <= resize(q0_unsigned & '0', 16);

  tmp_9 <= signed(resize(tmp_8, 17));

  -- 'Madgwick_correction_fixpt:12' v2q0my = fi(fi(2.0, 0, 2, 0, fm) * q0 * my, 0, 14, 4, fm);
  tmp_10 <= resize(q0_unsigned & '0', 16);

  tmp_11 <= signed(resize(tmp_10, 17));

  -- HDL code generation from MATLAB function: Madgwick_correction_fixpt
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  --                                                                          %
  -- 
  --           Generated by MATLAB 9.3 and Fixed-Point Designer 6.0           %
  -- 
  --                                                                          %
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  -- Auxiliary variables to avoid repeated arithmetic
  -- 
  -- 'Madgwick_correction_fixpt:9' fm = get_fimath();
  -- 
  -- 'Madgwick_correction_fixpt:11' v2q0mx = fi(fi(2.0, 0, 2, 0, fm) * q0 * mx, 0, 14, 4, fm);
  tmp_12 <= resize(q0_unsigned & '0', 16);

  tmp_13 <= signed(resize(tmp_12, 17));

  c0_serial_0_2(0) <= tmp_7;
  c0_serial_0_2(1) <= tmp_9;
  c0_serial_0_2(2) <= tmp_11;
  c0_serial_0_2(3) <= tmp_13;

  rcc_out_2 <= c0_serial_0_2;

  ratechange_splitcomp_out0_2 <= rcc_out_2(0);

  ratechange_splitcomp_out1_2 <= rcc_out_2(1);

  ratechange_splitcomp_out2_2 <= rcc_out_2(2);

  ratechange_splitcomp_out3_2 <= rcc_out_2(3);

  
  tmp_14 <= ratechange_splitcomp_out0_2 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_2 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_2 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_2;

  q2_unsigned <= unsigned(q2);

  q2_1 <= signed(resize(q2_unsigned, 15));

  mz_unsigned <= unsigned(mz);

  mz_1 <= signed(resize(mz_unsigned, 15));

  my_unsigned <= unsigned(my);

  my_1 <= signed(resize(my_unsigned, 15));

  mx_unsigned <= unsigned(mx);

  mx_1 <= signed(resize(mx_unsigned, 15));

  c0_serial_1_2(0) <= q2_1;
  c0_serial_1_2(1) <= mz_1;
  c0_serial_1_2(2) <= my_1;
  c0_serial_1_2(3) <= mx_1;

  rcc_out_3 <= c0_serial_1_2;

  ratechange_splitcomp_out0_3 <= rcc_out_3(0);

  ratechange_splitcomp_out1_3 <= rcc_out_3(1);

  ratechange_splitcomp_out2_3 <= rcc_out_3(2);

  ratechange_splitcomp_out3_3 <= rcc_out_3(3);

  
  q2_2 <= ratechange_splitcomp_out0_3 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_3 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_3 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_3;

  multiplier_mul_temp <= tmp_14 * q2_2;
  tmp_15 <= multiplier_mul_temp(30 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_1_p : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_1 <= (OTHERS => to_signed(16#00000000#, 31));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_5 = '1' THEN
        alpha0_deserializer_tapout_1(2) <= tmp_15;
        alpha0_deserializer_tapout_1(0 TO 1) <= alpha0_deserializer_tapout_1(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_1_p;


  alpha0_deserializer_muxOut_1(0) <= alpha0_deserializer_tapout_1(0);
  alpha0_deserializer_muxOut_1(1) <= alpha0_deserializer_tapout_1(1);
  alpha0_deserializer_muxOut_1(2) <= alpha0_deserializer_tapout_1(2);
  alpha0_deserializer_muxOut_1(3) <= tmp_15;

  alpha0_deserializer_regComp_1_proces : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_1 <= (OTHERS => to_signed(16#00000000#, 31));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_2 = '1' THEN
        c0_serialOut_0_1 <= alpha0_deserializer_muxOut_1;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_1_proces;


  tmp_16 <= c0_serialOut_0_1(0);

  tmp_17 <= unsigned(tmp_16(29 DOWNTO 0));

  tmp_18 <= tmp_17(28 DOWNTO 15);

  tmp_19 <= signed(resize(tmp_18 & '0', 19));

  tmp_20 <= tmp_5 - tmp_19;

  tmp_21 <= resize(tmp_20, 24);

  ax_signed <= signed(ax);

  tmp_22 <= resize(ax_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  tmp_23 <= resize(tmp_2 & '0', 16);

  tmp_24 <= signed(resize(tmp_23, 17));

  tmp_25 <= resize(tmp_24, 19);

  tmp_26 <= signed(resize(tmp_18 & '0', 19));

  tmp_27 <= tmp_25 - tmp_26;

  tmp_28 <= resize(tmp_27, 24);

  tmp_29 <= resize(ax_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  delayMatch_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_30 <= to_signed(16#000000#, 24);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_30 <= tmp_22;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  tmp_31 <= tmp_21 - tmp_30;

  delayMatch_1_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_32 <= to_signed(16#000000#, 24);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_32 <= tmp_29;
      END IF;
    END IF;
  END PROCESS delayMatch_1_process;


  tmp_33 <= tmp_28 - tmp_32;

  c0_serial_0_3(0) <= tmp_31;
  c0_serial_0_3(1) <= tmp_33;

  rcc_out_4 <= c0_serial_0_3;

  ratechange_splitcomp_out0_4 <= rcc_out_4(0);

  ratechange_splitcomp_out1_4 <= rcc_out_4(1);

  
  tmp_34 <= ratechange_splitcomp_out0_4 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_4;

  -- 'Madgwick_correction_fixpt:15' v2q0 = fi(fi(2.0, 0, 2, 0, fm) * q0, 0, 14, 13, fm);
  tmp_35 <= resize(q0_unsigned & '0', 16);

  tmp_36 <= tmp_35(14 DOWNTO 1);

  
-- 'Madgwick_correction_fixpt:43' s2 = fi(fi_signed(fi_uminus(v2q0) * (fi_signed(fi(2.0, 0, 2, 0, fm) * q1q3) - v2q0q2 
  
-- - ax) + v2q3 * (fi(2.0, 0, 2, 0, fm) * q0q1 + v2q2q3 - ay)) - fi(4.0, 0, 3, 0, fm) * q2 * (fi_signed(fi_signed(fi(1, 
  
-- 0, 1, 0, fm)) - fi(2.0, 0, 2, 0, fm) * q1q1) - fi(2.0, 0, 2, 0, fm) * q2q2 - az) + (fi_signed(fi_uminus(v4bx) * 
  
-- q2) - v2bz * q0) * (fi_signed(v2bx * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q2q2) - q3q3) + v2bz * (fi_signed(q1q3) 
  
-- - q0q2)) - mx) + (v2bx * q1 + v2bz * q3) * (fi_signed(v2bx * (fi_signed(q1q2) - q0q3) + v2bz * (q0q1 + q2q3)) - 
  
-- my) + (fi_signed(v2bx * q0) - v4bz * q2) * (fi_signed(v2bx * (q0q2 + q1q3) + v2bz * (fi_signed(fi_signed(fi(0.5, 
  -- 0, 14, 14, fm)) - q1q1) - q2q2)) - mz), 1, 14, -10, fm)
  -- 
  -- 'Madgwick_correction_fixpt:63' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:64' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:65' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:66' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:67' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:63' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:64' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:65' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:66' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:67' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  tmp_37 <= signed(resize(tmp_36, 15));

  p810tmp_cast <= resize(tmp_37, 16);
  p810tmp_cast_1 <=  - (p810tmp_cast);
  tmp_38 <= p810tmp_cast_1(14 DOWNTO 0);

  delayMatch_2_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_39 <= to_signed(16#0000#, 15);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_39 <= tmp_38;
      END IF;
    END IF;
  END PROCESS delayMatch_2_process;


  -- 'Madgwick_correction_fixpt:17' v2q2 = fi(fi(2.0, 0, 2, 0, fm) * q2, 0, 14, 13, fm);
  tmp_40 <= resize(q2_unsigned & '0', 16);

  tmp_41 <= tmp_40(14 DOWNTO 1);

  -- Gradient decent algorithm corrective step
  -- 
  
-- 'Madgwick_correction_fixpt:41' s0 = fi(fi_signed(fi_uminus(v2q2) * (fi_signed(fi(2.0, 0, 2, 0, fm) * q1q3) - v2q0q2 
  
-- - ax) + v2q1 * (fi(2.0, 0, 2, 0, fm) * q0q1 + v2q2q3 - ay)) - v2bz * q2 * (fi_signed(v2bx * (fi_signed(fi_signed(fi(0.5, 
  
-- 0, 14, 14, fm)) - q2q2) - q3q3) + v2bz * (fi_signed(q1q3) - q0q2)) - mx) + (fi_uminus(v2bx) * q3 + v2bz * q1) * 
  
-- (fi_signed(v2bx * (fi_signed(q1q2) - q0q3) + v2bz * (q0q1 + q2q3)) - my) + v2bx * q2 * (fi_signed(v2bx * (q0q2 
  -- + q1q3) + v2bz * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q1q1) - q2q2)) - mz), 1, 14, -9, fm)
  -- 
  -- 'Madgwick_correction_fixpt:63' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:64' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:65' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:66' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:67' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:63' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:64' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:65' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:66' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:67' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  tmp_42 <= signed(resize(tmp_41, 15));

  p849tmp_cast <= resize(tmp_42, 16);
  p849tmp_cast_1 <=  - (p849tmp_cast);
  tmp_43 <= p849tmp_cast_1(14 DOWNTO 0);

  delayMatch_3_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_44 <= to_signed(16#0000#, 15);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_44 <= tmp_43;
      END IF;
    END IF;
  END PROCESS delayMatch_3_process;


  c0_serial_1_3(0) <= tmp_39;
  c0_serial_1_3(1) <= tmp_44;

  rcc_out_5 <= c0_serial_1_3;

  ratechange_splitcomp_out0_5 <= rcc_out_5(0);

  ratechange_splitcomp_out1_5 <= rcc_out_5(1);

  
  tmp_45 <= ratechange_splitcomp_out0_5 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_5;

  tmp_46 <= tmp_34 * tmp_45;

  alpha0_deserializer_tapDelayComp_2_p : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_2 <= to_signed(0, 39);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_tapDelayEn_1 = '1' THEN
        alpha0_deserializer_tapout_2 <= tmp_46;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_2_p;


  alpha0_deserializer_muxOut_2(0) <= alpha0_deserializer_tapout_2;
  alpha0_deserializer_muxOut_2(1) <= tmp_46;

  alpha0_deserializer_regComp_2_proces : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_2 <= (OTHERS => to_signed(0, 39));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_innerRegEn = '1' THEN
        c0_serialOut_0_2 <= alpha0_deserializer_muxOut_2;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_2_proces;


  alpha0_deserializer_contl_3_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_3 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_3 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_3 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_3 <= alpha0_deserializer_contl_cnt_3 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_3_process;

  alpha0_deserializer_tapDelayEn_6 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_3 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_3 <= '1' WHEN alpha0_deserializer_contl_cnt_3 = to_unsigned(16#3#, 3) 
    ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_3 <= '1' WHEN alpha0_deserializer_contl_validOutpu_3 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_3 <= '1' WHEN alpha0_deserializer_contl_validOutpu_3 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_3 <= '1';

  alpha0_deserializer_tapDelayEn_7 <= enb AND alpha0_deserializer_tapDelayEn_6;

  alpha0_deserializer_contl_4_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_4 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_4 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_4 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_4 <= alpha0_deserializer_contl_cnt_4 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_4_process;

  alpha0_deserializer_tapDelayEn_8 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_4 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_4 <= '1' WHEN alpha0_deserializer_contl_cnt_4 = to_unsigned(16#3#, 3) 
    ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_4 <= '1' WHEN alpha0_deserializer_contl_validOutpu_4 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_4 <= '1' WHEN alpha0_deserializer_contl_validOutpu_4 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_4 <= '1';

  alpha0_deserializer_tapDelayEn_9 <= enb AND alpha0_deserializer_tapDelayEn_8;

  c0_serial_0_4(0) <= q0;
  c0_serial_0_4(1) <= q0;
  c0_serial_0_4(2) <= q0;
  c0_serial_0_4(3) <= q0;

  outputgen1: FOR kk IN 0 TO 3 GENERATE
    c0_serial_0_5(kk) <= unsigned(c0_serial_0_4(kk));
  END GENERATE;

  rcc_out_6 <= c0_serial_0_5;

  ratechange_splitcomp_out0_6 <= rcc_out_6(0);

  ratechange_splitcomp_out1_6 <= rcc_out_6(1);

  ratechange_splitcomp_out2_4 <= rcc_out_6(2);

  ratechange_splitcomp_out3_4 <= rcc_out_6(3);

  
  q0_1 <= ratechange_splitcomp_out0_6 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_6 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_4 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_4;

  c0_serial_1_4(0) <= q3;
  c0_serial_1_4(1) <= q2;
  c0_serial_1_4(2) <= q1;
  c0_serial_1_4(3) <= q0;

  outputgen: FOR kk IN 0 TO 3 GENERATE
    c0_serial_1_5(kk) <= unsigned(c0_serial_1_4(kk));
  END GENERATE;

  rcc_out_7 <= c0_serial_1_5;

  ratechange_splitcomp_out0_7 <= rcc_out_7(0);

  ratechange_splitcomp_out1_7 <= rcc_out_7(1);

  ratechange_splitcomp_out2_5 <= rcc_out_7(2);

  ratechange_splitcomp_out3_5 <= rcc_out_7(3);

  
  q3_2 <= ratechange_splitcomp_out0_7 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_7 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_5 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_5;

  -- 'Madgwick_correction_fixpt:24' q0q3 = fi(q0 * q3, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:23' q0q2 = fi(q0 * q2, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:22' q0q1 = fi(q0 * q1, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:21' q0q0 = fi(q0 * q0, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:23' q0q2 = fi(q0 * q2, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:22' q0q1 = fi(q0 * q1, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:21' q0q0 = fi(q0 * q0, 0, 14, 14, fm);
  tmp_47 <= q0_1 * q3_2;

  alpha0_deserializer_tapDelayComp_3_p : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_3 <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_9 = '1' THEN
        alpha0_deserializer_tapout_3(2) <= tmp_47;
        alpha0_deserializer_tapout_3(0 TO 1) <= alpha0_deserializer_tapout_3(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_3_p;


  alpha0_deserializer_muxOut_3(0) <= alpha0_deserializer_tapout_3(0);
  alpha0_deserializer_muxOut_3(1) <= alpha0_deserializer_tapout_3(1);
  alpha0_deserializer_muxOut_3(2) <= alpha0_deserializer_tapout_3(2);
  alpha0_deserializer_muxOut_3(3) <= tmp_47;

  alpha0_deserializer_regComp_3_proces : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_3 <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_4 = '1' THEN
        c0_serialOut_0_3 <= alpha0_deserializer_muxOut_3;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_3_proces;


  tmp_48 <= c0_serialOut_0_3(2);

  tmp_49 <= tmp_48(27 DOWNTO 14);

  tmp_50 <= resize(tmp_49 & '0', 16);

  tmp_51 <= resize(tmp_50, 17);

  alpha0_deserializer_contl_5_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_5 <= to_unsigned(16#0#, 2);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' THEN
        IF alpha0_deserializer_contl_cnt_5 = to_unsigned(16#1#, 2) THEN 
          alpha0_deserializer_contl_cnt_5 <= to_unsigned(16#0#, 2);
        ELSE 
          alpha0_deserializer_contl_cnt_5 <= alpha0_deserializer_contl_cnt_5 + to_unsigned(16#1#, 2);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_5_process;

  alpha0_deserializer_tapDelayEn_10 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_5 < 
    to_unsigned(16#1#, 2));
  
  alpha0_deserializer_contl_validOutpu_5 <= '1' WHEN alpha0_deserializer_contl_cnt_5 = to_unsigned(16#1#, 2) 
    ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_5 <= '1' WHEN alpha0_deserializer_contl_validOutpu_5 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_5 <= '1' WHEN alpha0_deserializer_contl_validOutpu_5 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_5 <= '1';

  alpha0_deserializer_tapDelayEn_11 <= enb_1_2_0 AND alpha0_deserializer_tapDelayEn_10;

  q1_unsigned <= unsigned(q1);

  -- 'Madgwick_correction_fixpt:14' v2q1mx = fi(fi(2.0, 0, 2, 0, fm) * q1 * mx, 0, 14, 4, fm);
  tmp_52 <= resize(q1_unsigned & '0', 16);

  tmp_53 <= signed(resize(tmp_52, 17));

  -- 'Madgwick_correction_fixpt:20' v2q2q3 = fi(fi(2.0, 0, 2, 0, fm) * q2 * q3, 0, 14, 13, fm);
  tmp_54 <= resize(q2_unsigned & '0', 16);

  tmp_55 <= signed(resize(tmp_54, 17));

  c0_serial_0_6(0) <= tmp_53;
  c0_serial_0_6(1) <= tmp_55;

  rcc_out_8 <= c0_serial_0_6;

  ratechange_splitcomp_out0_8 <= rcc_out_8(0);

  ratechange_splitcomp_out1_8 <= rcc_out_8(1);

  
  tmp_56 <= ratechange_splitcomp_out0_8 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_8;

  mx_2 <= signed(resize(mx_unsigned, 15));

  q3_unsigned <= unsigned(q3);

  q3_3 <= signed(resize(q3_unsigned, 15));

  c0_serial_1_6(0) <= mx_2;
  c0_serial_1_6(1) <= q3_3;

  rcc_out_9 <= c0_serial_1_6;

  ratechange_splitcomp_out0_9 <= rcc_out_9(0);

  ratechange_splitcomp_out1_9 <= rcc_out_9(1);

  
  mx_3 <= ratechange_splitcomp_out0_9 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_9;

  multiplier_mul_temp_1 <= tmp_56 * mx_3;
  tmp_57 <= multiplier_mul_temp_1(30 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_4_p : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_4 <= to_signed(16#00000000#, 31);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_tapDelayEn_11 = '1' THEN
        alpha0_deserializer_tapout_4 <= tmp_57;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_4_p;


  alpha0_deserializer_muxOut_4(0) <= alpha0_deserializer_tapout_4;
  alpha0_deserializer_muxOut_4(1) <= tmp_57;

  alpha0_deserializer_regComp_4_proces : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_4 <= (OTHERS => to_signed(16#00000000#, 31));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_innerRegEn_5 = '1' THEN
        c0_serialOut_0_4 <= alpha0_deserializer_muxOut_4;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_4_proces;


  tmp_58 <= c0_serialOut_0_4(1);

  tmp_59 <= unsigned(tmp_58(29 DOWNTO 0));

  tmp_60 <= tmp_59(28 DOWNTO 15);

  tmp_61 <= resize(tmp_60 & '0', 17);

  tmp_62 <= tmp_51 + tmp_61;

  tmp_63 <= signed(resize(tmp_62, 25));

  ay_signed <= signed(ay);

  tmp_64 <= resize(ay_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 25);

  tmp_65 <= resize(tmp_49 & '0', 16);

  tmp_66 <= resize(tmp_65, 17);

  tmp_67 <= resize(tmp_60 & '0', 17);

  tmp_68 <= tmp_66 + tmp_67;

  tmp_69 <= signed(resize(tmp_68, 25));

  tmp_70 <= resize(ay_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 25);

  tmp_71 <= resize(tmp_49 & '0', 16);

  tmp_72 <= resize(tmp_71, 17);

  tmp_73 <= resize(tmp_60 & '0', 17);

  tmp_74 <= tmp_72 + tmp_73;

  tmp_75 <= signed(resize(tmp_74, 25));

  tmp_76 <= resize(ay_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 25);

  tmp_77 <= resize(tmp_49 & '0', 16);

  tmp_78 <= resize(tmp_77, 17);

  tmp_79 <= resize(tmp_60 & '0', 17);

  tmp_80 <= tmp_78 + tmp_79;

  tmp_81 <= signed(resize(tmp_80, 25));

  tmp_82 <= resize(ay_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 25);

  delayMatch_4_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_83 <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_83 <= tmp_64;
      END IF;
    END IF;
  END PROCESS delayMatch_4_process;


  tmp_84 <= tmp_63 - tmp_83;

  delayMatch_5_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_85 <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_85 <= tmp_70;
      END IF;
    END IF;
  END PROCESS delayMatch_5_process;


  tmp_86 <= tmp_69 - tmp_85;

  delayMatch_6_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_87 <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_87 <= tmp_76;
      END IF;
    END IF;
  END PROCESS delayMatch_6_process;


  tmp_88 <= tmp_75 - tmp_87;

  delayMatch_7_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_89 <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_89 <= tmp_82;
      END IF;
    END IF;
  END PROCESS delayMatch_7_process;


  tmp_90 <= tmp_81 - tmp_89;

  c0_serial_0_7(0) <= tmp_84;
  c0_serial_0_7(1) <= tmp_86;
  c0_serial_0_7(2) <= tmp_88;
  c0_serial_0_7(3) <= tmp_90;

  rcc_out_10 <= c0_serial_0_7;

  ratechange_splitcomp_out0_10 <= rcc_out_10(0);

  ratechange_splitcomp_out1_10 <= rcc_out_10(1);

  ratechange_splitcomp_out2_6 <= rcc_out_10(2);

  ratechange_splitcomp_out3_6 <= rcc_out_10(3);

  
  tmp_91 <= ratechange_splitcomp_out0_10 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_10 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_6 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_6;

  reduced_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      v2q2 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        v2q2 <= tmp_41;
      END IF;
    END IF;
  END PROCESS reduced_process;


  -- 'Madgwick_correction_fixpt:18' v2q3 = fi(fi(2.0, 0, 2, 0, fm) * q3, 0, 14, 13, fm);
  tmp_92 <= resize(q3_unsigned & '0', 16);

  tmp_93 <= tmp_92(14 DOWNTO 1);

  reduced_1_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      v2q3 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        v2q3 <= tmp_93;
      END IF;
    END IF;
  END PROCESS reduced_1_process;


  delayMatch_8_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      v2q0 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        v2q0 <= tmp_36;
      END IF;
    END IF;
  END PROCESS delayMatch_8_process;


  -- 'Madgwick_correction_fixpt:16' v2q1 = fi(fi(2.0, 0, 2, 0, fm) * q1, 0, 14, 13, fm);
  tmp_94 <= resize(q1_unsigned & '0', 16);

  tmp_95 <= tmp_94(14 DOWNTO 1);

  reduced_2_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      v2q1 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        v2q1 <= tmp_95;
      END IF;
    END IF;
  END PROCESS reduced_2_process;


  c0_serial_1_7(0) <= v2q2;
  c0_serial_1_7(1) <= v2q3;
  c0_serial_1_7(2) <= v2q0;
  c0_serial_1_7(3) <= v2q1;

  rcc_out_11 <= c0_serial_1_7;

  ratechange_splitcomp_out0_11 <= rcc_out_11(0);

  ratechange_splitcomp_out1_11 <= rcc_out_11(1);

  ratechange_splitcomp_out2_7 <= rcc_out_11(2);

  ratechange_splitcomp_out3_7 <= rcc_out_11(3);

  
  v2q2_1 <= ratechange_splitcomp_out0_11 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_11 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_7 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_7;

  multiplier_cast <= signed(resize(v2q2_1, 15));
  multiplier_mul_temp_2 <= tmp_91 * multiplier_cast;
  tmp_96 <= multiplier_mul_temp_2(38 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_5_p : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_5 <= (OTHERS => to_signed(0, 39));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_7 = '1' THEN
        alpha0_deserializer_tapout_5(2) <= tmp_96;
        alpha0_deserializer_tapout_5(0 TO 1) <= alpha0_deserializer_tapout_5(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_5_p;


  alpha0_deserializer_muxOut_5(0) <= alpha0_deserializer_tapout_5(0);
  alpha0_deserializer_muxOut_5(1) <= alpha0_deserializer_tapout_5(1);
  alpha0_deserializer_muxOut_5(2) <= alpha0_deserializer_tapout_5(2);
  alpha0_deserializer_muxOut_5(3) <= tmp_96;

  alpha0_deserializer_regComp_5_proces : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_5 <= (OTHERS => to_signed(0, 39));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_3 = '1' THEN
        c0_serialOut_0_5 <= alpha0_deserializer_muxOut_5;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_5_proces;


  tmp_97 <= c0_serialOut_0_2(1);

  tmp_98 <= resize(tmp_97, 40);

  tmp_99 <= c0_serialOut_0_5(3);

  tmp_100 <= resize(tmp_99, 40);

  tmp_101 <= tmp_98 + tmp_100;

  tmp_102 <= resize(tmp_101 & '0' & '0' & '0' & '0' & '0' & '0', 65);

  alpha0_deserializer_contl_6_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_6 <= to_unsigned(16#0#, 2);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' THEN
        IF alpha0_deserializer_contl_cnt_6 = to_unsigned(16#1#, 2) THEN 
          alpha0_deserializer_contl_cnt_6 <= to_unsigned(16#0#, 2);
        ELSE 
          alpha0_deserializer_contl_cnt_6 <= alpha0_deserializer_contl_cnt_6 + to_unsigned(16#1#, 2);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_6_process;

  alpha0_deserializer_tapDelayEn_12 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_6 < 
    to_unsigned(16#1#, 2));
  
  alpha0_deserializer_contl_validOutpu_6 <= '1' WHEN alpha0_deserializer_contl_cnt_6 = to_unsigned(16#1#, 2) 
    ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_6 <= '1' WHEN alpha0_deserializer_contl_validOutpu_6 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_6 <= '1' WHEN alpha0_deserializer_contl_validOutpu_6 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_6 <= '1';

  alpha0_deserializer_tapDelayEn_13 <= enb_1_2_0 AND alpha0_deserializer_tapDelayEn_12;

  alpha0_deserializer_contl_7_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_7 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_7 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_7 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_7 <= alpha0_deserializer_contl_cnt_7 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_7_process;

  alpha0_deserializer_tapDelayEn_14 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_7 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_7 <= '1' WHEN alpha0_deserializer_contl_cnt_7 = to_unsigned(16#3#, 3) 
    ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_7 <= '1' WHEN alpha0_deserializer_contl_validOutpu_7 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_7 <= '1' WHEN alpha0_deserializer_contl_validOutpu_7 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_7 <= '1';

  alpha0_deserializer_tapDelayEn_15 <= enb AND alpha0_deserializer_tapDelayEn_14;

  alpha0_deserializer_contl_8_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_8 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_8 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_8 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_8 <= alpha0_deserializer_contl_cnt_8 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_8_process;

  alpha0_deserializer_tapDelayEn_16 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_8 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_8 <= '1' WHEN alpha0_deserializer_contl_cnt_8 = to_unsigned(16#3#, 3) 
    ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_8 <= '1' WHEN alpha0_deserializer_contl_validOutpu_8 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_8 <= '1' WHEN alpha0_deserializer_contl_validOutpu_8 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_8 <= '1';

  alpha0_deserializer_tapDelayEn_17 <= enb AND alpha0_deserializer_tapDelayEn_16;

  q2_3 <= signed(resize(q2_unsigned, 15));

  q3_4 <= signed(resize(q3_unsigned, 15));

  v2q1_1 <= signed(resize(tmp_95, 15));

  v2q1_2 <= signed(resize(tmp_95, 15));

  c0_serial_0_8(0) <= q2_3;
  c0_serial_0_8(1) <= q3_4;
  c0_serial_0_8(2) <= v2q1_1;
  c0_serial_0_8(3) <= v2q1_2;

  rcc_out_12 <= c0_serial_0_8;

  ratechange_splitcomp_out0_12 <= rcc_out_12(0);

  ratechange_splitcomp_out1_12 <= rcc_out_12(1);

  ratechange_splitcomp_out2_8 <= rcc_out_12(2);

  ratechange_splitcomp_out3_8 <= rcc_out_12(3);

  
  q2_4 <= ratechange_splitcomp_out0_12 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_12 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_8 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_8;

  q2_5 <= signed(resize(q2_unsigned, 15));

  q3_5 <= signed(resize(q3_unsigned, 15));

  mz_2 <= signed(resize(mz_unsigned, 15));

  my_2 <= signed(resize(my_unsigned, 15));

  c0_serial_1_8(0) <= q2_5;
  c0_serial_1_8(1) <= q3_5;
  c0_serial_1_8(2) <= mz_2;
  c0_serial_1_8(3) <= my_2;

  rcc_out_13 <= c0_serial_1_8;

  ratechange_splitcomp_out0_13 <= rcc_out_13(0);

  ratechange_splitcomp_out1_13 <= rcc_out_13(1);

  ratechange_splitcomp_out2_9 <= rcc_out_13(2);

  ratechange_splitcomp_out3_9 <= rcc_out_13(3);

  
  q2_6 <= ratechange_splitcomp_out0_13 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_13 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_9 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_9;

  -- 'Madgwick_correction_fixpt:28' q2q2 = fi(q2 * q2, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:30' q3q3 = fi(q3 * q3, 0, 14, 14, fm);
  -- 
  -- 'Madgwick_correction_fixpt:30' q3q3 = fi(q3 * q3, 0, 14, 14, fm);
  multiplier_mul_temp_3 <= q2_4 * q2_6;
  tmp_103 <= multiplier_mul_temp_3(28 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_6_p : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_6 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_17 = '1' THEN
        alpha0_deserializer_tapout_6(2) <= tmp_103;
        alpha0_deserializer_tapout_6(0 TO 1) <= alpha0_deserializer_tapout_6(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_6_p;


  alpha0_deserializer_muxOut_6(0) <= alpha0_deserializer_tapout_6(0);
  alpha0_deserializer_muxOut_6(1) <= alpha0_deserializer_tapout_6(1);
  alpha0_deserializer_muxOut_6(2) <= alpha0_deserializer_tapout_6(2);
  alpha0_deserializer_muxOut_6(3) <= tmp_103;

  alpha0_deserializer_regComp_6_proces : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_6 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_8 = '1' THEN
        c0_serialOut_0_6 <= alpha0_deserializer_muxOut_6;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_6_proces;


  tmp_104 <= c0_serialOut_0_6(0);

  tmp_105 <= unsigned(tmp_104(27 DOWNTO 0));

  tmp_106 <= tmp_105(27 DOWNTO 14);

  tmp_107 <= signed(resize(tmp_106, 17));

  tmp_108 <= to_signed(16#02000#, 17) - tmp_107;

  tmp_109 <= resize(tmp_108, 19);

  tmp_110 <= c0_serialOut_0_6(1);

  tmp_111 <= unsigned(tmp_110(27 DOWNTO 0));

  tmp_112 <= tmp_111(27 DOWNTO 14);

  tmp_113 <= signed(resize(tmp_112, 19));

  tmp_114 <= tmp_109 - tmp_113;

  delayMatch_9_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg <= (OTHERS => to_signed(16#00000#, 19));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg(0) <= tmp_114;
        delayMatch_reg(1 TO 4) <= delayMatch_reg(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_9_process;

  tmp_115 <= delayMatch_reg(4);

  tmp_116 <= signed(resize(tmp_106, 17));

  tmp_117 <= to_signed(16#02000#, 17) - tmp_116;

  tmp_118 <= resize(tmp_117, 19);

  tmp_119 <= signed(resize(tmp_112, 19));

  tmp_120 <= tmp_118 - tmp_119;

  delayMatch_10_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_1 <= (OTHERS => to_signed(16#00000#, 19));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_1(0) <= tmp_120;
        delayMatch_reg_1(1 TO 4) <= delayMatch_reg_1(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_10_process;

  tmp_121 <= delayMatch_reg_1(4);

  tmp_122 <= signed(resize(tmp_106, 17));

  tmp_123 <= to_signed(16#02000#, 17) - tmp_122;

  tmp_124 <= resize(tmp_123, 19);

  tmp_125 <= signed(resize(tmp_112, 19));

  tmp_126 <= tmp_124 - tmp_125;

  delayMatch_11_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_2 <= (OTHERS => to_signed(16#00000#, 19));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_2(0) <= tmp_126;
        delayMatch_reg_2(1 TO 4) <= delayMatch_reg_2(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_11_process;

  tmp_127 <= delayMatch_reg_2(4);

  tmp_128 <= signed(resize(tmp_106, 17));

  tmp_129 <= to_signed(16#02000#, 17) - tmp_128;

  tmp_130 <= resize(tmp_129, 19);

  tmp_131 <= signed(resize(tmp_112, 19));

  tmp_132 <= tmp_130 - tmp_131;

  delayMatch_12_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_3 <= (OTHERS => to_signed(16#00000#, 19));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_3(0) <= tmp_132;
        delayMatch_reg_3(1 TO 4) <= delayMatch_reg_3(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_12_process;

  tmp_133 <= delayMatch_reg_3(4);

  c0_serial_0_9(0) <= tmp_115;
  c0_serial_0_9(1) <= tmp_121;
  c0_serial_0_9(2) <= tmp_127;
  c0_serial_0_9(3) <= tmp_133;

  rcc_out_14 <= c0_serial_0_9;

  ratechange_splitcomp_out0_14 <= rcc_out_14(0);

  ratechange_splitcomp_out1_14 <= rcc_out_14(1);

  ratechange_splitcomp_out2_10 <= rcc_out_14(2);

  ratechange_splitcomp_out3_10 <= rcc_out_14(3);

  
  tmp_134 <= ratechange_splitcomp_out0_14 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_14 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_10 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_10;

  alpha0_deserializer_contl_9_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_9 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_9 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_9 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_9 <= alpha0_deserializer_contl_cnt_9 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_9_process;

  alpha0_deserializer_tapDelayEn_18 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_9 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_9 <= '1' WHEN alpha0_deserializer_contl_cnt_9 = to_unsigned(16#3#, 3) 
    ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_9 <= '1' WHEN alpha0_deserializer_contl_validOutpu_9 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_9 <= '1' WHEN alpha0_deserializer_contl_validOutpu_9 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_9 <= '1';

  alpha0_deserializer_tapDelayEn_19 <= enb AND alpha0_deserializer_tapDelayEn_18;

  tmp_135 <= c0_serialOut_0_4(0);

  tmp_136 <= unsigned(tmp_135(29 DOWNTO 0));

  tmp_137 <= tmp_136(28 DOWNTO 15);

  delayMatch_13_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_4 <= (OTHERS => to_unsigned(16#0000#, 14));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_4(0) <= tmp_137;
        delayMatch_reg_4(1 TO 2) <= delayMatch_reg_4(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_13_process;

  v2q1mx <= delayMatch_reg_4(2);

  v2q1mx_1 <= signed(resize(v2q1mx, 15));

  alpha0_deserializer_contl_10_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_10 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_10 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_10 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_10 <= alpha0_deserializer_contl_cnt_10 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_10_process;

  alpha0_deserializer_tapDelayEn_20 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_10 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_10 <= '1' WHEN alpha0_deserializer_contl_cnt_10 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_10 <= '1' WHEN alpha0_deserializer_contl_validOutpu_10 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_10 <= '1' WHEN alpha0_deserializer_contl_validOutpu_10 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_10 <= '1';

  alpha0_deserializer_tapDelayEn_21 <= enb AND alpha0_deserializer_tapDelayEn_20;

  reduced_3_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      mx_4 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        mx_4 <= mx_unsigned;
      END IF;
    END IF;
  END PROCESS reduced_3_process;


  reduced_4_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      mz_3 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        mz_3 <= mz_unsigned;
      END IF;
    END IF;
  END PROCESS reduced_4_process;


  reduced_5_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      my_3 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        my_3 <= my_unsigned;
      END IF;
    END IF;
  END PROCESS reduced_5_process;


  c0_serial_0_10(0) <= mx_4;
  c0_serial_0_10(1) <= mz_3;
  c0_serial_0_10(2) <= my_3;
  c0_serial_0_10(3) <= mx_4;

  rcc_out_15 <= c0_serial_0_10;

  ratechange_splitcomp_out0_15 <= rcc_out_15(0);

  ratechange_splitcomp_out1_15 <= rcc_out_15(1);

  ratechange_splitcomp_out2_11 <= rcc_out_15(2);

  ratechange_splitcomp_out3_11 <= rcc_out_15(3);

  
  mx_5 <= ratechange_splitcomp_out0_15 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_15 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_11 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_11;

  tmp_138 <= c0_serialOut_0_3(3);

  tmp_139 <= tmp_138(27 DOWNTO 14);

  tmp_140 <= c0_serialOut_0(2);

  tmp_141 <= tmp_140(27 DOWNTO 14);

  c0_serial_1_9(0) <= tmp_139;
  c0_serial_1_9(1) <= tmp_141;
  c0_serial_1_9(2) <= tmp_141;
  c0_serial_1_9(3) <= tmp_141;

  rcc_out_16 <= c0_serial_1_9;

  ratechange_splitcomp_out0_16 <= rcc_out_16(0);

  ratechange_splitcomp_out1_16 <= rcc_out_16(1);

  ratechange_splitcomp_out2_12 <= rcc_out_16(2);

  ratechange_splitcomp_out3_12 <= rcc_out_16(3);

  
  q0q0 <= ratechange_splitcomp_out0_16 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_16 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_12 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_12;

  -- Reference direction of Earth's magnetic field
  -- 
  
-- 'Madgwick_correction_fixpt:33' hx = fi(fi_signed(fi_signed(fi_signed(mx * q0q0) - v2q0my * q3 + v2q0mz * q2 + mx 
  -- * q1q1 + v2q1 * my * q2 + v2q1 * mz * q3) - mx * q2q2) - mx * q3q3, 1, 14, 2, fm)
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  tmp_142 <= mx_5 * q0q0;

  alpha0_deserializer_tapDelayComp_7_p : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_7 <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_21 = '1' THEN
        alpha0_deserializer_tapout_7(2) <= tmp_142;
        alpha0_deserializer_tapout_7(0 TO 1) <= alpha0_deserializer_tapout_7(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_7_p;


  alpha0_deserializer_muxOut_7(0) <= alpha0_deserializer_tapout_7(0);
  alpha0_deserializer_muxOut_7(1) <= alpha0_deserializer_tapout_7(1);
  alpha0_deserializer_muxOut_7(2) <= alpha0_deserializer_tapout_7(2);
  alpha0_deserializer_muxOut_7(3) <= tmp_142;

  alpha0_deserializer_regComp_7_proces : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_7 <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_10 = '1' THEN
        c0_serialOut_0_7 <= alpha0_deserializer_muxOut_7;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_7_proces;


  alpha0_deserializer_contl_11_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_11 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_11 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_11 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_11 <= alpha0_deserializer_contl_cnt_11 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_11_process;

  alpha0_deserializer_tapDelayEn_22 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_11 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_11 <= '1' WHEN alpha0_deserializer_contl_cnt_11 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_11 <= '1' WHEN alpha0_deserializer_contl_validOutpu_11 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_11 <= '1' WHEN alpha0_deserializer_contl_validOutpu_11 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_11 <= '1';

  alpha0_deserializer_tapDelayEn_23 <= enb AND alpha0_deserializer_tapDelayEn_22;

  tmp_143 <= c0_serialOut_0_1(2);

  tmp_144 <= unsigned(tmp_143(29 DOWNTO 0));

  tmp_145 <= tmp_144(28 DOWNTO 15);

  tmp_146 <= c0_serialOut_0_1(3);

  tmp_147 <= unsigned(tmp_146(29 DOWNTO 0));

  tmp_148 <= tmp_147(28 DOWNTO 15);

  c0_serial_0_11(0) <= tmp_145;
  c0_serial_0_11(1) <= tmp_145;
  c0_serial_0_11(2) <= tmp_148;
  c0_serial_0_11(3) <= tmp_137;

  rcc_out_17 <= c0_serial_0_11;

  ratechange_splitcomp_out0_17 <= rcc_out_17(0);

  ratechange_splitcomp_out1_17 <= rcc_out_17(1);

  ratechange_splitcomp_out2_13 <= rcc_out_17(2);

  ratechange_splitcomp_out3_13 <= rcc_out_17(3);

  
  v2q0my <= ratechange_splitcomp_out0_17 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_17 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_13 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_13;

  reduced_6_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      q1_2 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        q1_2 <= q1_unsigned;
      END IF;
    END IF;
  END PROCESS reduced_6_process;


  reduced_7_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      q3_6 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        q3_6 <= q3_unsigned;
      END IF;
    END IF;
  END PROCESS reduced_7_process;


  c0_serial_1_10(0) <= q1_2;
  c0_serial_1_10(1) <= q3_6;
  c0_serial_1_10(2) <= q3_6;
  c0_serial_1_10(3) <= q3_6;

  rcc_out_18 <= c0_serial_1_10;

  ratechange_splitcomp_out0_18 <= rcc_out_18(0);

  ratechange_splitcomp_out1_18 <= rcc_out_18(1);

  ratechange_splitcomp_out2_14 <= rcc_out_18(2);

  ratechange_splitcomp_out3_14 <= rcc_out_18(3);

  
  q1_3 <= ratechange_splitcomp_out0_18 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_18 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_14 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_14;

  
-- 'Madgwick_correction_fixpt:34' hy = fi(fi_signed(fi_signed(fi_signed(v2q0mx * q3 + my * q0q0) - v2q0mz * q1 + v2q1mx 
  -- * q2) - my * q1q1 + my * q2q2 + v2q2 * mz * q3) - my * q3q3, 1, 14, 2, fm)
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  
-- 'Madgwick_correction_fixpt:34' hy = fi(fi_signed(fi_signed(fi_signed(v2q0mx * q3 + my * q0q0) - v2q0mz * q1 + v2q1mx 
  -- * q2) - my * q1q1 + my * q2q2 + v2q2 * mz * q3) - my * q3q3, 1, 14, 2, fm)
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  tmp_149 <= v2q0my * q1_3;

  alpha0_deserializer_tapDelayComp_8_p : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_8 <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_23 = '1' THEN
        alpha0_deserializer_tapout_8(2) <= tmp_149;
        alpha0_deserializer_tapout_8(0 TO 1) <= alpha0_deserializer_tapout_8(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_8_p;


  alpha0_deserializer_muxOut_8(0) <= alpha0_deserializer_tapout_8(0);
  alpha0_deserializer_muxOut_8(1) <= alpha0_deserializer_tapout_8(1);
  alpha0_deserializer_muxOut_8(2) <= alpha0_deserializer_tapout_8(2);
  alpha0_deserializer_muxOut_8(3) <= tmp_149;

  alpha0_deserializer_regComp_8_proces : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_8 <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_11 = '1' THEN
        c0_serialOut_0_8 <= alpha0_deserializer_muxOut_8;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_8_proces;


  alpha0_deserializer_contl_12_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_12 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_12 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_12 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_12 <= alpha0_deserializer_contl_cnt_12 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_12_process;

  alpha0_deserializer_tapDelayEn_24 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_12 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_12 <= '1' WHEN alpha0_deserializer_contl_cnt_12 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_12 <= '1' WHEN alpha0_deserializer_contl_validOutpu_12 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_12 <= '1' WHEN alpha0_deserializer_contl_validOutpu_12 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_12 <= '1';

  alpha0_deserializer_tapDelayEn_25 <= enb AND alpha0_deserializer_tapDelayEn_24;

  my_4 <= signed(resize(my_3, 15));

  mx_6 <= signed(resize(mx_4, 15));

  tmp_150 <= c0_serialOut_0_1(1);

  tmp_151 <= unsigned(tmp_150(29 DOWNTO 0));

  tmp_152 <= tmp_151(28 DOWNTO 15);

  v2q0mz <= signed(resize(tmp_152, 15));

  v2q0mz_1 <= signed(resize(tmp_152, 15));

  c0_serial_0_12(0) <= my_4;
  c0_serial_0_12(1) <= mx_6;
  c0_serial_0_12(2) <= v2q0mz;
  c0_serial_0_12(3) <= v2q0mz_1;

  rcc_out_19 <= c0_serial_0_12;

  ratechange_splitcomp_out0_19 <= rcc_out_19(0);

  ratechange_splitcomp_out1_19 <= rcc_out_19(1);

  ratechange_splitcomp_out2_15 <= rcc_out_19(2);

  ratechange_splitcomp_out3_15 <= rcc_out_19(3);

  
  my_5 <= ratechange_splitcomp_out0_19 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_19 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_15 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_15;

  q3q3 <= signed(resize(tmp_112, 15));

  q3q3_1 <= signed(resize(tmp_112, 15));

  q1_4 <= signed(resize(q1_2, 15));

  reduced_8_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      q2_7 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        q2_7 <= q2_unsigned;
      END IF;
    END IF;
  END PROCESS reduced_8_process;


  q2_8 <= signed(resize(q2_7, 15));

  c0_serial_1_11(0) <= q3q3;
  c0_serial_1_11(1) <= q3q3_1;
  c0_serial_1_11(2) <= q1_4;
  c0_serial_1_11(3) <= q2_8;

  rcc_out_20 <= c0_serial_1_11;

  ratechange_splitcomp_out0_20 <= rcc_out_20(0);

  ratechange_splitcomp_out1_20 <= rcc_out_20(1);

  ratechange_splitcomp_out2_16 <= rcc_out_20(2);

  ratechange_splitcomp_out3_16 <= rcc_out_20(3);

  
  q3q3_2 <= ratechange_splitcomp_out0_20 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_20 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_16 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_16;

  multiplier_mul_temp_4 <= my_5 * q3q3_2;
  tmp_153 <= multiplier_mul_temp_4(28 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_9_p : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_9 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_25 = '1' THEN
        alpha0_deserializer_tapout_9(2) <= tmp_153;
        alpha0_deserializer_tapout_9(0 TO 1) <= alpha0_deserializer_tapout_9(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_9_p;


  alpha0_deserializer_muxOut_9(0) <= alpha0_deserializer_tapout_9(0);
  alpha0_deserializer_muxOut_9(1) <= alpha0_deserializer_tapout_9(1);
  alpha0_deserializer_muxOut_9(2) <= alpha0_deserializer_tapout_9(2);
  alpha0_deserializer_muxOut_9(3) <= tmp_153;

  alpha0_deserializer_regComp_9_proces : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_9 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_12 = '1' THEN
        c0_serialOut_0_9 <= alpha0_deserializer_muxOut_9;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_9_proces;


  tmp_154 <= c0_serialOut_0_7(0);

  tmp_155 <= signed(resize(tmp_154, 29));

  tmp_156 <= resize(tmp_155, 31);

  tmp_157 <= c0_serialOut_0_8(1);

  tmp_158 <= signed(resize(tmp_157 & '0', 31));

  tmp_159 <= tmp_156 - tmp_158;

  tmp_160 <= resize(tmp_159, 33);

  tmp_161 <= c0_serialOut_0_9(3);

  tmp_162 <= unsigned(tmp_161(27 DOWNTO 0));

  tmp_163 <= signed(resize(tmp_162 & '0', 33));

  tmp_164 <= tmp_160 + tmp_163;

  tmp_165 <= resize(tmp_164, 35);

  tmp_166 <= c0_serialOut_0_7(3);

  tmp_167 <= signed(resize(tmp_166, 35));

  tmp_168 <= tmp_165 + tmp_167;

  tmp_169 <= resize(tmp_168 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 
    50);

  alpha0_deserializer_contl_13_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_13 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_13 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_13 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_13 <= alpha0_deserializer_contl_cnt_13 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_13_process;

  alpha0_deserializer_tapDelayEn_26 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_13 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_13 <= '1' WHEN alpha0_deserializer_contl_cnt_13 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_13 <= '1' WHEN alpha0_deserializer_contl_validOutpu_13 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_13 <= '1' WHEN alpha0_deserializer_contl_validOutpu_13 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_13 <= '1';

  alpha0_deserializer_tapDelayEn_27 <= enb AND alpha0_deserializer_tapDelayEn_26;

  tmp_170 <= c0_serialOut_0_6(2);

  tmp_171 <= unsigned(tmp_170(27 DOWNTO 0));

  delayMatch_14_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_172 <= to_unsigned(16#0000000#, 28);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_172 <= tmp_171;
      END IF;
    END IF;
  END PROCESS delayMatch_14_process;


  tmp_173 <= c0_serialOut_0_6(3);

  tmp_174 <= unsigned(tmp_173(27 DOWNTO 0));

  alpha0_deserializer_contl_14_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_14 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_14 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_14 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_14 <= alpha0_deserializer_contl_cnt_14 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_14_process;

  alpha0_deserializer_tapDelayEn_28 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_14 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_14 <= '1' WHEN alpha0_deserializer_contl_cnt_14 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_14 <= '1' WHEN alpha0_deserializer_contl_validOutpu_14 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_14 <= '1' WHEN alpha0_deserializer_contl_validOutpu_14 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_14 <= '1';

  alpha0_deserializer_tapDelayEn_29 <= enb AND alpha0_deserializer_tapDelayEn_28;

  v2q2_2 <= signed(resize(v2q2, 15));

  v2q2_3 <= signed(resize(v2q2, 15));

  mz_4 <= signed(resize(mz_3, 15));

  my_6 <= signed(resize(my_3, 15));

  c0_serial_0_13(0) <= v2q2_2;
  c0_serial_0_13(1) <= v2q2_3;
  c0_serial_0_13(2) <= mz_4;
  c0_serial_0_13(3) <= my_6;

  rcc_out_21 <= c0_serial_0_13;

  ratechange_splitcomp_out0_21 <= rcc_out_21(0);

  ratechange_splitcomp_out1_21 <= rcc_out_21(1);

  ratechange_splitcomp_out2_17 <= rcc_out_21(2);

  ratechange_splitcomp_out3_17 <= rcc_out_21(3);

  
  v2q2_4 <= ratechange_splitcomp_out0_21 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_21 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_17 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_17;

  my_7 <= signed(resize(my_3, 15));

  mz_5 <= signed(resize(mz_3, 15));

  q0q0_1 <= signed(resize(tmp_139, 15));

  q0q0_2 <= signed(resize(tmp_139, 15));

  c0_serial_1_12(0) <= my_7;
  c0_serial_1_12(1) <= mz_5;
  c0_serial_1_12(2) <= q0q0_1;
  c0_serial_1_12(3) <= q0q0_2;

  rcc_out_22 <= c0_serial_1_12;

  ratechange_splitcomp_out0_22 <= rcc_out_22(0);

  ratechange_splitcomp_out1_22 <= rcc_out_22(1);

  ratechange_splitcomp_out2_18 <= rcc_out_22(2);

  ratechange_splitcomp_out3_18 <= rcc_out_22(3);

  
  my_8 <= ratechange_splitcomp_out0_22 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_22 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_18 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_18;

  multiplier_mul_temp_5 <= v2q2_4 * my_8;
  tmp_175 <= multiplier_mul_temp_5(28 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_101 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_10 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_29 = '1' THEN
        alpha0_deserializer_tapout_10(2) <= tmp_175;
        alpha0_deserializer_tapout_10(0 TO 1) <= alpha0_deserializer_tapout_10(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_101;


  alpha0_deserializer_muxOut_10(0) <= alpha0_deserializer_tapout_10(0);
  alpha0_deserializer_muxOut_10(1) <= alpha0_deserializer_tapout_10(1);
  alpha0_deserializer_muxOut_10(2) <= alpha0_deserializer_tapout_10(2);
  alpha0_deserializer_muxOut_10(3) <= tmp_175;

  alpha0_deserializer_regComp_10_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_10 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_14 = '1' THEN
        c0_serialOut_0_10 <= alpha0_deserializer_muxOut_10;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_10_proce;


  delayMatch_15_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_176 <= to_unsigned(16#0000000#, 28);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_176 <= tmp_174;
      END IF;
    END IF;
  END PROCESS delayMatch_15_process;


  tmp_177 <= c0_serialOut_0_10(0);

  tmp_178 <= unsigned(tmp_177(27 DOWNTO 0));

  tmp_179 <= c0_serialOut_0_10(1);

  tmp_180 <= unsigned(tmp_179(27 DOWNTO 0));

  c0_serial_0_14(0) <= tmp_172;
  c0_serial_0_14(1) <= tmp_176;
  c0_serial_0_14(2) <= tmp_178;
  c0_serial_0_14(3) <= tmp_180;

  rcc_out_23 <= c0_serial_0_14;

  ratechange_splitcomp_out0_23 <= rcc_out_23(0);

  ratechange_splitcomp_out1_23 <= rcc_out_23(1);

  ratechange_splitcomp_out2_19 <= rcc_out_23(2);

  ratechange_splitcomp_out3_19 <= rcc_out_23(3);

  
  tmp_181 <= ratechange_splitcomp_out0_23 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_23 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_19 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_19;

  reduced_9_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      q3_7 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        q3_7 <= q3_6;
      END IF;
    END IF;
  END PROCESS reduced_9_process;


  reduced_10_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      q2_9 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        q2_9 <= q2_7;
      END IF;
    END IF;
  END PROCESS reduced_10_process;


  c0_serial_1_13(0) <= q3_7;
  c0_serial_1_13(1) <= q2_9;
  c0_serial_1_13(2) <= q3_7;
  c0_serial_1_13(3) <= q3_7;

  rcc_out_24 <= c0_serial_1_13;

  ratechange_splitcomp_out0_24 <= rcc_out_24(0);

  ratechange_splitcomp_out1_24 <= rcc_out_24(1);

  ratechange_splitcomp_out2_20 <= rcc_out_24(2);

  ratechange_splitcomp_out3_20 <= rcc_out_24(3);

  
  q3_8 <= ratechange_splitcomp_out0_24 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_24 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_20 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_20;

  tmp_182 <= tmp_181 * q3_8;

  alpha0_deserializer_tapDelayComp_111 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_11 <= (OTHERS => to_unsigned(0, 42));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_27 = '1' THEN
        alpha0_deserializer_tapout_11(2) <= tmp_182;
        alpha0_deserializer_tapout_11(0 TO 1) <= alpha0_deserializer_tapout_11(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_111;


  alpha0_deserializer_muxOut_11(0) <= alpha0_deserializer_tapout_11(0);
  alpha0_deserializer_muxOut_11(1) <= alpha0_deserializer_tapout_11(1);
  alpha0_deserializer_muxOut_11(2) <= alpha0_deserializer_tapout_11(2);
  alpha0_deserializer_muxOut_11(3) <= tmp_182;

  alpha0_deserializer_regComp_11_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_11 <= (OTHERS => to_unsigned(0, 42));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_13 = '1' THEN
        c0_serialOut_0_11 <= alpha0_deserializer_muxOut_11;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_11_proce;


  delayMatch_16_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_183 <= to_signed(0, 50);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_183 <= tmp_169;
      END IF;
    END IF;
  END PROCESS delayMatch_16_process;


  tmp_184 <= c0_serialOut_0_11(1);

  tmp_185 <= signed(resize(tmp_184, 50));

  tmp_186 <= tmp_183 + tmp_185;

  tmp_187 <= resize(tmp_186, 52);

  tmp_188 <= c0_serialOut_0_11(0);

  tmp_189 <= signed(resize(tmp_188, 52));

  tmp_190 <= tmp_187 + tmp_189;

  tmp_191 <= resize(tmp_190, 54);

  alpha0_deserializer_contl_15_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_15 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_15 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_15 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_15 <= alpha0_deserializer_contl_cnt_15 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_15_process;

  alpha0_deserializer_tapDelayEn_30 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_15 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_15 <= '1' WHEN alpha0_deserializer_contl_cnt_15 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_15 <= '1' WHEN alpha0_deserializer_contl_validOutpu_15 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_15 <= '1' WHEN alpha0_deserializer_contl_validOutpu_15 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_15 <= '1';

  alpha0_deserializer_tapDelayEn_31 <= enb AND alpha0_deserializer_tapDelayEn_30;

  c0_serial_0_15(0) <= mz_3;
  c0_serial_0_15(1) <= my_3;
  c0_serial_0_15(2) <= mx_4;
  c0_serial_0_15(3) <= mz_3;

  rcc_out_25 <= c0_serial_0_15;

  ratechange_splitcomp_out0_25 <= rcc_out_25(0);

  ratechange_splitcomp_out1_25 <= rcc_out_25(1);

  ratechange_splitcomp_out2_21 <= rcc_out_25(2);

  ratechange_splitcomp_out3_21 <= rcc_out_25(3);

  
  mz_6 <= ratechange_splitcomp_out0_25 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_25 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_21 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_21;

  c0_serial_1_14(0) <= tmp_106;
  c0_serial_1_14(1) <= tmp_106;
  c0_serial_1_14(2) <= tmp_106;
  c0_serial_1_14(3) <= tmp_112;

  rcc_out_26 <= c0_serial_1_14;

  ratechange_splitcomp_out0_26 <= rcc_out_26(0);

  ratechange_splitcomp_out1_26 <= rcc_out_26(1);

  ratechange_splitcomp_out2_22 <= rcc_out_26(2);

  ratechange_splitcomp_out3_22 <= rcc_out_26(3);

  
  q2q2 <= ratechange_splitcomp_out0_26 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_26 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_22 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_22;

  tmp_192 <= mz_6 * q2q2;

  alpha0_deserializer_tapDelayComp_121 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_12 <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_31 = '1' THEN
        alpha0_deserializer_tapout_12(2) <= tmp_192;
        alpha0_deserializer_tapout_12(0 TO 1) <= alpha0_deserializer_tapout_12(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_121;


  alpha0_deserializer_muxOut_12(0) <= alpha0_deserializer_tapout_12(0);
  alpha0_deserializer_muxOut_12(1) <= alpha0_deserializer_tapout_12(1);
  alpha0_deserializer_muxOut_12(2) <= alpha0_deserializer_tapout_12(2);
  alpha0_deserializer_muxOut_12(3) <= tmp_192;

  alpha0_deserializer_regComp_12_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_12 <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_15 = '1' THEN
        c0_serialOut_0_12 <= alpha0_deserializer_muxOut_12;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_12_proce;


  tmp_193 <= c0_serialOut_0_12(2);

  tmp_194 <= signed(resize(tmp_193 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 54));

  delayMatch_17_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_195 <= to_signed(0, 54);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_195 <= tmp_194;
      END IF;
    END IF;
  END PROCESS delayMatch_17_process;


  tmp_196 <= tmp_191 - tmp_195;

  tmp_197 <= resize(tmp_196, 56);

  tmp_198 <= c0_serialOut_0_9(1);

  tmp_199 <= unsigned(tmp_198(27 DOWNTO 0));

  tmp_200 <= signed(resize(tmp_199 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 56));

  delayMatch_18_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_201 <= to_signed(0, 56);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_201 <= tmp_200;
      END IF;
    END IF;
  END PROCESS delayMatch_18_process;


  tmp_202 <= tmp_197 - tmp_201;

  tmp_203 <= tmp_202(43 DOWNTO 30);

  delayMatch_19_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_204 <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_204 <= tmp_203;
      END IF;
    END IF;
  END PROCESS delayMatch_19_process;


  hx <= resize(tmp_204, 15);

  tmp_205 <= c0_serialOut_0_8(2);

  tmp_206 <= resize(tmp_205 & '0', 30);

  tmp_207 <= c0_serialOut_0_10(3);

  tmp_208 <= unsigned(tmp_207(27 DOWNTO 0));

  tmp_209 <= resize(tmp_208, 30);

  tmp_210 <= tmp_206 + tmp_209;

  tmp_211 <= signed(resize(tmp_210, 31));

  tmp_212 <= resize(tmp_211, 33);

  tmp_213 <= c0_serialOut_0_9(2);

  tmp_214 <= unsigned(tmp_213(27 DOWNTO 0));

  tmp_215 <= signed(resize(tmp_214 & '0', 33));

  tmp_216 <= tmp_212 - tmp_215;

  tmp_217 <= resize(tmp_216, 35);

  delayMatch_20_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_5 <= (OTHERS => to_signed(0, 35));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_5(0) <= tmp_217;
        delayMatch_reg_5(1 TO 2) <= delayMatch_reg_5(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_20_process;

  tmp_218 <= delayMatch_reg_5(2);

  tmp_219 <= c0_serialOut_0_7(2);

  tmp_220 <= signed(resize(tmp_219, 37));

  delayMatch_21_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_6 <= (OTHERS => to_signed(0, 37));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_6(0) <= tmp_220;
        delayMatch_reg_6(1 TO 2) <= delayMatch_reg_6(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_21_process;

  tmp_221 <= delayMatch_reg_6(2);

  tmp_222 <= c0_serialOut_0_12(1);

  tmp_223 <= signed(resize(tmp_222, 39));

  delayMatch_22_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_7 <= (OTHERS => to_signed(0, 39));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_7(0) <= tmp_223;
        delayMatch_reg_7(1 TO 2) <= delayMatch_reg_7(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_22_process;

  tmp_224 <= delayMatch_reg_7(2);

  tmp_225 <= c0_serialOut_0_11(3);

  tmp_226 <= signed(resize(tmp_225, 54));

  delayMatch_23_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_8 <= (OTHERS => to_signed(0, 54));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_8(0) <= tmp_226;
        delayMatch_reg_8(1) <= delayMatch_reg_8(0);
      END IF;
    END IF;
  END PROCESS delayMatch_23_process;

  tmp_227 <= delayMatch_reg_8(1);

  tmp_228 <= c0_serialOut_0_9(0);

  tmp_229 <= unsigned(tmp_228(27 DOWNTO 0));

  tmp_230 <= signed(resize(tmp_229 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 56));

  delayMatch_24_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_9 <= (OTHERS => to_signed(0, 56));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_9(0) <= tmp_230;
        delayMatch_reg_9(1 TO 2) <= delayMatch_reg_9(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_24_process;

  tmp_231 <= delayMatch_reg_9(2);

  alpha0_deserializer_contl_16_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_16 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_16 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_16 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_16 <= alpha0_deserializer_contl_cnt_16 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_16_process;

  alpha0_deserializer_tapDelayEn_32 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_16 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_16 <= '1' WHEN alpha0_deserializer_contl_cnt_16 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_16 <= '1' WHEN alpha0_deserializer_contl_validOutpu_16 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_16 <= '1' WHEN alpha0_deserializer_contl_validOutpu_16 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_16 <= '1';

  alpha0_deserializer_tapDelayEn_33 <= enb AND alpha0_deserializer_tapDelayEn_32;

  
-- 'Madgwick_correction_fixpt:36' v2bz = fi(fi_signed(fi_signed(fi_uminus(v2q0mx) * q2 + v2q0my * q1 + mz * q0q0 + 
  -- v2q1mx * q3) - mz * q1q1 + v2q2 * my * q3) - mz * q2q2 + mz * q3q3, 1, 14, 2, fm)
  -- 
  -- 'Madgwick_correction_fixpt:63' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:64' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:65' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:66' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:67' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  tmp_232 <= signed(resize(tmp_148, 15));

  p854tmp_cast <= resize(tmp_232, 16);
  p854tmp_cast_1 <=  - (p854tmp_cast);
  tmp_233 <= p854tmp_cast_1(14 DOWNTO 0);

  tmp_234 <= resize(tmp_49, 15);

  tmp_235 <= c0_serialOut_0(3);

  tmp_236 <= tmp_235(27 DOWNTO 14);

  tmp_237 <= resize(tmp_236, 15);

  tmp_238 <= tmp_234 + tmp_237;

  tmp_239 <= resize(tmp_49, 15);

  tmp_240 <= resize(tmp_236, 15);

  tmp_241 <= tmp_239 + tmp_240;

  tmp_242 <= resize(tmp_49, 15);

  tmp_243 <= resize(tmp_236, 15);

  tmp_244 <= tmp_242 + tmp_243;

  delayMatch_25_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_10 <= (OTHERS => to_signed(16#0000#, 15));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_10(0) <= tmp_233;
        delayMatch_reg_10(1) <= delayMatch_reg_10(0);
      END IF;
    END IF;
  END PROCESS delayMatch_25_process;

  tmp_245 <= delayMatch_reg_10(1);

  tmp_246 <= resize(tmp_245, 16);

  delayMatch_26_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_11 <= (OTHERS => to_unsigned(16#0000#, 15));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_11(0) <= tmp_238;
        delayMatch_reg_11(1 TO 2) <= delayMatch_reg_11(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_26_process;

  tmp_247 <= delayMatch_reg_11(2);

  tmp_248 <= signed(resize(tmp_247, 16));

  delayMatch_27_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_12 <= (OTHERS => to_unsigned(16#0000#, 15));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_12(0) <= tmp_241;
        delayMatch_reg_12(1 TO 2) <= delayMatch_reg_12(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_27_process;

  tmp_249 <= delayMatch_reg_12(2);

  tmp_250 <= signed(resize(tmp_249, 16));

  delayMatch_28_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_13 <= (OTHERS => to_unsigned(16#0000#, 15));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_13(0) <= tmp_244;
        delayMatch_reg_13(1 TO 2) <= delayMatch_reg_13(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_28_process;

  tmp_251 <= delayMatch_reg_13(2);

  tmp_252 <= signed(resize(tmp_251, 16));

  c0_serial_0_16(0) <= tmp_246;
  c0_serial_0_16(1) <= tmp_248;
  c0_serial_0_16(2) <= tmp_250;
  c0_serial_0_16(3) <= tmp_252;

  rcc_out_27 <= c0_serial_0_16;

  ratechange_splitcomp_out0_27 <= rcc_out_27(0);

  ratechange_splitcomp_out1_27 <= rcc_out_27(1);

  ratechange_splitcomp_out2_23 <= rcc_out_27(2);

  ratechange_splitcomp_out3_23 <= rcc_out_27(3);

  
  tmp_253 <= ratechange_splitcomp_out0_27 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_27 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_23 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_23;

  reduced_11_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      q2_10 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        q2_10 <= q2_9;
      END IF;
    END IF;
  END PROCESS reduced_11_process;


  q2_11 <= signed(resize(q2_10, 15));

  tmp_254 <= c0_serialOut_0_8(0);

  tmp_255 <= signed(resize(tmp_254, 31));

  delayMatch_29_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_14 <= (OTHERS => to_signed(16#00000000#, 31));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_14(0) <= tmp_255;
        delayMatch_reg_14(1) <= delayMatch_reg_14(0);
      END IF;
    END IF;
  END PROCESS delayMatch_29_process;

  tmp_256 <= delayMatch_reg_14(1);

  tmp_257 <= c0_serialOut_0_10(2);

  tmp_258 <= unsigned(tmp_257(27 DOWNTO 0));

  tmp_259 <= signed(resize(tmp_258, 34));

  delayMatch_30_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_15 <= (OTHERS => to_signed(0, 34));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_15(0) <= tmp_259;
        delayMatch_reg_15(1) <= delayMatch_reg_15(0);
      END IF;
    END IF;
  END PROCESS delayMatch_30_process;

  tmp_260 <= delayMatch_reg_15(1);

  tmp_261 <= c0_serialOut_0_8(3);

  tmp_262 <= signed(resize(tmp_261 & '0', 36));

  delayMatch_31_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_16 <= (OTHERS => to_signed(0, 36));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_16(0) <= tmp_262;
        delayMatch_reg_16(1) <= delayMatch_reg_16(0);
      END IF;
    END IF;
  END PROCESS delayMatch_31_process;

  tmp_263 <= delayMatch_reg_16(1);

  tmp_264 <= c0_serialOut_0_7(1);

  tmp_265 <= signed(resize(tmp_264, 38));

  delayMatch_32_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_17 <= (OTHERS => to_signed(0, 38));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_17(0) <= tmp_265;
        delayMatch_reg_17(1) <= delayMatch_reg_17(0);
      END IF;
    END IF;
  END PROCESS delayMatch_32_process;

  tmp_266 <= delayMatch_reg_17(1);

  tmp_267 <= c0_serialOut_0_11(2);

  tmp_268 <= signed(resize(tmp_267, 53));

  delayMatch_33_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_269 <= to_signed(0, 53);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_269 <= tmp_268;
      END IF;
    END IF;
  END PROCESS delayMatch_33_process;


  tmp_270 <= c0_serialOut_0_12(0);

  tmp_271 <= signed(resize(tmp_270 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 55));

  delayMatch_34_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_18 <= (OTHERS => to_signed(0, 55));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_18(0) <= tmp_271;
        delayMatch_reg_18(1) <= delayMatch_reg_18(0);
      END IF;
    END IF;
  END PROCESS delayMatch_34_process;

  tmp_272 <= delayMatch_reg_18(1);

  tmp_273 <= c0_serialOut_0_12(3);

  tmp_274 <= signed(resize(tmp_273 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 57));

  delayMatch_35_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_19 <= (OTHERS => to_signed(0, 57));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_19(0) <= tmp_274;
        delayMatch_reg_19(1) <= delayMatch_reg_19(0);
      END IF;
    END IF;
  END PROCESS delayMatch_35_process;

  tmp_275 <= delayMatch_reg_19(1);

  ratechange_splitcomp_out3_24 <= rcc_out_28(3);

  ratechange_splitcomp_out2_24 <= rcc_out_28(2);

  ratechange_splitcomp_out1_28 <= rcc_out_28(1);

  v2bz <= resize(tmp_276, 15);

  v2bz_1 <= resize(tmp_276, 15);

  v2bz_2 <= resize(tmp_276, 15);

  c0_serial_1_15(0) <= q2_11;
  c0_serial_1_15(1) <= v2bz_2;
  c0_serial_1_15(2) <= v2bz_1;
  c0_serial_1_15(3) <= v2bz;

  rcc_out_28 <= c0_serial_1_15;

  ratechange_splitcomp_out0_28 <= rcc_out_28(0);

  
  q2_12 <= ratechange_splitcomp_out0_28 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_28 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_24 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_24;

  multiplier_mul_temp_6 <= tmp_253 * q2_12;
  tmp_277 <= multiplier_mul_temp_6(29 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_131 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_13 <= (OTHERS => to_signed(16#00000000#, 30));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_33 = '1' THEN
        alpha0_deserializer_tapout_13(2) <= tmp_277;
        alpha0_deserializer_tapout_13(0 TO 1) <= alpha0_deserializer_tapout_13(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_131;


  alpha0_deserializer_muxOut_13(0) <= alpha0_deserializer_tapout_13(0);
  alpha0_deserializer_muxOut_13(1) <= alpha0_deserializer_tapout_13(1);
  alpha0_deserializer_muxOut_13(2) <= alpha0_deserializer_tapout_13(2);
  alpha0_deserializer_muxOut_13(3) <= tmp_277;

  alpha0_deserializer_regComp_13_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_13 <= (OTHERS => to_signed(16#00000000#, 30));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_16 = '1' THEN
        c0_serialOut_0_13 <= alpha0_deserializer_muxOut_13;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_13_proce;


  tmp_278 <= c0_serialOut_0_13(0);

  tmp_279 <= tmp_278(28 DOWNTO 0);

  tmp_280 <= resize(tmp_279, 31);

  tmp_281 <= tmp_280 + tmp_256;

  tmp_282 <= resize(tmp_281 & '0', 34);

  tmp_283 <= tmp_282 + tmp_260;

  tmp_284 <= resize(tmp_283, 36);

  tmp_285 <= tmp_284 + tmp_263;

  tmp_286 <= resize(tmp_285, 38);

  tmp_287 <= tmp_286 - tmp_266;

  tmp_288 <= resize(tmp_287 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 
    53);

  tmp_289 <= tmp_288 + tmp_269;

  tmp_290 <= resize(tmp_289, 55);

  tmp_291 <= tmp_290 - tmp_272;

  tmp_292 <= resize(tmp_291, 57);

  tmp_293 <= tmp_292 + tmp_275;

  tmp_276 <= tmp_293(43 DOWNTO 30);

  v2bz_3 <= resize(tmp_276, 15);

  reduced_12_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      q2_13 <= to_unsigned(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        q2_13 <= q2_10;
      END IF;
    END IF;
  END PROCESS reduced_12_process;


  q2_14 <= signed(resize(q2_13, 15));

  hx_1 <= resize(tmp_204, 15);

  q2_15 <= signed(resize(q2_13, 15));

  ratechange_splitcomp_out3_25 <= rcc_out_29(3);

  ratechange_splitcomp_out2_25 <= rcc_out_29(2);

  ratechange_splitcomp_out1_29 <= rcc_out_29(1);

  hy <= resize(tmp_294, 15);

  c0_serial_1_16(0) <= q2_14;
  c0_serial_1_16(1) <= hx_1;
  c0_serial_1_16(2) <= hy;
  c0_serial_1_16(3) <= q2_15;

  rcc_out_29 <= c0_serial_1_16;

  ratechange_splitcomp_out0_29 <= rcc_out_29(0);

  
  q2_16 <= ratechange_splitcomp_out0_29 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_29 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_25 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_25;

  ratechange_splitcomp_out3_26 <= rcc_out_30(3);

  ratechange_splitcomp_out2_26 <= rcc_out_30(2);

  ratechange_splitcomp_out1_30 <= rcc_out_30(1);

  tmp_295 <= c0_serialOut_0_14(0);

  tmp_296 <= unsigned(tmp_295(27 DOWNTO 0));

  tmp_297 <= signed(resize(tmp_296 & '0', 35));

  tmp_298 <= tmp_218 + tmp_297;

  tmp_299 <= resize(tmp_298, 37);

  tmp_300 <= tmp_299 - tmp_221;

  tmp_301 <= resize(tmp_300, 39);

  tmp_302 <= tmp_301 + tmp_224;

  tmp_303 <= resize(tmp_302 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 
    54);

  tmp_304 <= tmp_303 + tmp_227;

  tmp_305 <= resize(tmp_304, 56);

  tmp_306 <= tmp_305 - tmp_231;

  tmp_294 <= tmp_306(43 DOWNTO 30);

  hy_1 <= resize(tmp_294, 15);

  c0_serial_0_17(0) <= v2q1mx_1;
  c0_serial_0_17(1) <= hx;
  c0_serial_0_17(2) <= hy_1;
  c0_serial_0_17(3) <= v2bz_3;

  rcc_out_30 <= c0_serial_0_17;

  ratechange_splitcomp_out0_30 <= rcc_out_30(0);

  
  v2q1mx_2 <= ratechange_splitcomp_out0_30 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_30 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_26 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_26;

  -- 'Madgwick_correction_fixpt:35' v2bx = fi(sqrt(hx * hx + hy * hy), 0, 14, 3, fm);
  -- 
  -- 'Madgwick_correction_fixpt:35' v2bx = fi(sqrt(hx * hx + hy * hy), 0, 14, 3, fm);
  multiplier_mul_temp_7 <= v2q1mx_2 * q2_16;
  tmp_307 <= multiplier_mul_temp_7(28 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_141 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_14 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_19 = '1' THEN
        alpha0_deserializer_tapout_14(2) <= tmp_307;
        alpha0_deserializer_tapout_14(0 TO 1) <= alpha0_deserializer_tapout_14(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_141;


  alpha0_deserializer_muxOut_14(0) <= alpha0_deserializer_tapout_14(0);
  alpha0_deserializer_muxOut_14(1) <= alpha0_deserializer_tapout_14(1);
  alpha0_deserializer_muxOut_14(2) <= alpha0_deserializer_tapout_14(2);
  alpha0_deserializer_muxOut_14(3) <= tmp_307;

  alpha0_deserializer_regComp_14_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_14 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_9 = '1' THEN
        c0_serialOut_0_14 <= alpha0_deserializer_muxOut_14;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_14_proce;


  tmp_308 <= c0_serialOut_0_14(1);

  tmp_309 <= tmp_308(27 DOWNTO 0);

  tmp_310 <= resize(tmp_309, 29);

  delayMatch_36_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_311 <= to_signed(16#00000000#, 29);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_311 <= tmp_310;
      END IF;
    END IF;
  END PROCESS delayMatch_36_process;


  tmp_312 <= c0_serialOut_0_14(2);

  tmp_313 <= tmp_312(27 DOWNTO 0);

  tmp_314 <= resize(tmp_313, 29);

  tmp_315 <= tmp_311 + tmp_314;

  
  tmp_316 <= '1' WHEN tmp_315 <= to_signed(16#00000000#, 29) ELSE
      '0';

  -- HDL code generation from MATLAB function: Madgwick_correction_fixpt_falseregionp855
  p1_output : PROCESS (tmp_315)
    VARIABLE yy : signed(14 DOWNTO 0);
    VARIABLE tmp317 : signed(14 DOWNTO 0);
    VARIABLE y_0 : signed(14 DOWNTO 0);
    VARIABLE cast : vector_of_unsigned8(0 TO 13);
    VARIABLE sll_temp : vector_of_signed15(0 TO 13);
    VARIABLE mul_temp : vector_of_signed30(0 TO 13);
    VARIABLE cast_0 : vector_of_signed30(0 TO 13);
    VARIABLE cast_1 : vector_of_unsigned8(0 TO 13);
    VARIABLE sll_temp_0 : vector_of_signed15(0 TO 13);
  BEGIN
    yy := to_signed(16#0000#, 15);

    FOR ii IN 13 DOWNTO 0 LOOP
      cast(ii) := unsigned(to_signed(ii, 32)(7 DOWNTO 0));
      sll_temp(ii) := to_signed(16#0001#, 15) sll to_integer(cast(ii));
      tmp317 := yy OR sll_temp(ii);
      mul_temp(ii) := tmp317 * tmp317;
      cast_0(ii) := resize(tmp_315, 30);
      IF mul_temp(ii) <= cast_0(ii) THEN 
        cast_1(ii) := unsigned(to_signed(ii, 32)(7 DOWNTO 0));
        sll_temp_0(ii) := to_signed(16#0001#, 15) sll to_integer(cast_1(ii));
        y_0 := yy OR sll_temp_0(ii);
      ELSE 
        y_0 := yy;
      END IF;
      yy := y_0;
    END LOOP;

    y_y <= yy;
  END PROCESS p1_output;


  -- HDL code generation from MATLAB function: Madgwick_correction_fixpt_trueregionp855
  y_y_1 <= to_signed(16#0000#, 15);

  delayMatch_37_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_20 <= (OTHERS => to_signed(16#0000#, 15));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_20(0) <= y_y_1;
        delayMatch_reg_20(1 TO 5) <= delayMatch_reg_20(0 TO 4);
      END IF;
    END IF;
  END PROCESS delayMatch_37_process;

  y_y_2 <= delayMatch_reg_20(5);

  
  tmp_318 <= y_y WHEN tmp_316 = '0' ELSE
      y_y_2;

  tmp_319 <= unsigned(tmp_318(12 DOWNTO 0) & '0');

  c0_serial_1_17(0) <= tmp_319;
  c0_serial_1_17(1) <= tmp_319;
  c0_serial_1_17(2) <= tmp_319;
  c0_serial_1_17(3) <= tmp_319;

  rcc_out_31 <= c0_serial_1_17;

  ratechange_splitcomp_out0_31 <= rcc_out_31(0);

  ratechange_splitcomp_out1_31 <= rcc_out_31(1);

  ratechange_splitcomp_out2_27 <= rcc_out_31(2);

  ratechange_splitcomp_out3_27 <= rcc_out_31(3);

  
  v2bx <= ratechange_splitcomp_out0_31 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_31 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_27 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_27;

  multiplier_cast_1 <= signed(resize(v2bx, 15));
  multiplier_mul_temp_8 <= tmp_134 * multiplier_cast_1;
  tmp_320 <= multiplier_mul_temp_8(32 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_151 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_15 <= (OTHERS => to_signed(0, 33));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_15 = '1' THEN
        alpha0_deserializer_tapout_15(2) <= tmp_320;
        alpha0_deserializer_tapout_15(0 TO 1) <= alpha0_deserializer_tapout_15(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_151;


  alpha0_deserializer_muxOut_15(0) <= alpha0_deserializer_tapout_15(0);
  alpha0_deserializer_muxOut_15(1) <= alpha0_deserializer_tapout_15(1);
  alpha0_deserializer_muxOut_15(2) <= alpha0_deserializer_tapout_15(2);
  alpha0_deserializer_muxOut_15(3) <= tmp_320;

  alpha0_deserializer_regComp_15_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_15 <= (OTHERS => to_signed(0, 33));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_7 = '1' THEN
        c0_serialOut_0_15 <= alpha0_deserializer_muxOut_15;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_15_proce;


  tmp_321 <= c0_serialOut_0_15(2);

  tmp_322 <= resize(tmp_321, 34);

  alpha0_deserializer_contl_17_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_17 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_17 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_17 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_17 <= alpha0_deserializer_contl_cnt_17 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_17_process;

  alpha0_deserializer_tapDelayEn_34 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_17 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_17 <= '1' WHEN alpha0_deserializer_contl_cnt_17 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_17 <= '1' WHEN alpha0_deserializer_contl_validOutpu_17 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_17 <= '1' WHEN alpha0_deserializer_contl_validOutpu_17 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_17 <= '1';

  alpha0_deserializer_tapDelayEn_35 <= enb AND alpha0_deserializer_tapDelayEn_34;

  tmp_323 <= signed(resize(tmp_2, 15));

  tmp_324 <= resize(tmp_323, 17);

  tmp_325 <= c0_serialOut_0_3(1);

  tmp_326 <= tmp_325(27 DOWNTO 14);

  tmp_327 <= signed(resize(tmp_326, 17));

  tmp_328 <= tmp_324 - tmp_327;

  delayMatch_38_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_21 <= (OTHERS => to_signed(16#00000#, 17));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_21(0) <= tmp_328;
        delayMatch_reg_21(1 TO 2) <= delayMatch_reg_21(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_38_process;

  tmp_329 <= delayMatch_reg_21(2);

  tmp_330 <= signed(resize(tmp_2, 15));

  tmp_331 <= resize(tmp_330, 17);

  tmp_332 <= signed(resize(tmp_326, 17));

  tmp_333 <= tmp_331 - tmp_332;

  delayMatch_39_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_22 <= (OTHERS => to_signed(16#00000#, 17));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_22(0) <= tmp_333;
        delayMatch_reg_22(1 TO 2) <= delayMatch_reg_22(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_39_process;

  tmp_334 <= delayMatch_reg_22(2);

  tmp_335 <= signed(resize(tmp_2, 15));

  tmp_336 <= resize(tmp_335, 17);

  tmp_337 <= signed(resize(tmp_326, 17));

  tmp_338 <= tmp_336 - tmp_337;

  delayMatch_40_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_23 <= (OTHERS => to_signed(16#00000#, 17));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_23(0) <= tmp_338;
        delayMatch_reg_23(1 TO 2) <= delayMatch_reg_23(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_40_process;

  tmp_339 <= delayMatch_reg_23(2);

  tmp_340 <= signed(resize(tmp_2, 15));

  tmp_341 <= resize(tmp_340, 17);

  tmp_342 <= signed(resize(tmp_326, 17));

  tmp_343 <= tmp_341 - tmp_342;

  delayMatch_41_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_24 <= (OTHERS => to_signed(16#00000#, 17));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_24(0) <= tmp_343;
        delayMatch_reg_24(1 TO 2) <= delayMatch_reg_24(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_41_process;

  tmp_344 <= delayMatch_reg_24(2);

  c0_serial_0_18(0) <= tmp_329;
  c0_serial_0_18(1) <= tmp_334;
  c0_serial_0_18(2) <= tmp_339;
  c0_serial_0_18(3) <= tmp_344;

  rcc_out_32 <= c0_serial_0_18;

  ratechange_splitcomp_out0_32 <= rcc_out_32(0);

  ratechange_splitcomp_out1_32 <= rcc_out_32(1);

  ratechange_splitcomp_out2_28 <= rcc_out_32(2);

  ratechange_splitcomp_out3_28 <= rcc_out_32(3);

  
  tmp_345 <= ratechange_splitcomp_out0_32 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_32 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_28 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_28;

  c0_serial_1_18(0) <= tmp_276;
  c0_serial_1_18(1) <= tmp_276;
  c0_serial_1_18(2) <= tmp_276;
  c0_serial_1_18(3) <= tmp_276;

  rcc_out_33 <= c0_serial_1_18;

  ratechange_splitcomp_out0_33 <= rcc_out_33(0);

  ratechange_splitcomp_out1_33 <= rcc_out_33(1);

  ratechange_splitcomp_out2_29 <= rcc_out_33(2);

  ratechange_splitcomp_out3_29 <= rcc_out_33(3);

  
  v2bz_4 <= ratechange_splitcomp_out0_33 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_33 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_29 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_29;

  tmp_346 <= tmp_345 * v2bz_4;

  alpha0_deserializer_tapDelayComp_161 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_16 <= (OTHERS => to_signed(16#00000000#, 31));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_35 = '1' THEN
        alpha0_deserializer_tapout_16(2) <= tmp_346;
        alpha0_deserializer_tapout_16(0 TO 1) <= alpha0_deserializer_tapout_16(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_161;


  alpha0_deserializer_muxOut_16(0) <= alpha0_deserializer_tapout_16(0);
  alpha0_deserializer_muxOut_16(1) <= alpha0_deserializer_tapout_16(1);
  alpha0_deserializer_muxOut_16(2) <= alpha0_deserializer_tapout_16(2);
  alpha0_deserializer_muxOut_16(3) <= tmp_346;

  alpha0_deserializer_regComp_16_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_16 <= (OTHERS => to_signed(16#00000000#, 31));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_17 = '1' THEN
        c0_serialOut_0_16 <= alpha0_deserializer_muxOut_16;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_16_proce;


  tmp_347 <= c0_serialOut_0_16(2);

  tmp_348 <= resize(tmp_347 & '0', 34);

  delayMatch_42_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_25 <= (OTHERS => to_signed(0, 34));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_25(0) <= tmp_348;
        delayMatch_reg_25(1) <= delayMatch_reg_25(0);
      END IF;
    END IF;
  END PROCESS delayMatch_42_process;

  tmp_349 <= delayMatch_reg_25(1);

  tmp_350 <= tmp_322 + tmp_349;

  tmp_351 <= resize(tmp_350, 36);

  tmp_352 <= signed(resize(mx_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 36));

  tmp_353 <= c0_serialOut_0_15(3);

  tmp_354 <= resize(tmp_353, 34);

  tmp_355 <= c0_serialOut_0_16(3);

  tmp_356 <= resize(tmp_355 & '0', 34);

  delayMatch_43_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_26 <= (OTHERS => to_signed(0, 34));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_26(0) <= tmp_356;
        delayMatch_reg_26(1) <= delayMatch_reg_26(0);
      END IF;
    END IF;
  END PROCESS delayMatch_43_process;

  tmp_357 <= delayMatch_reg_26(1);

  tmp_358 <= tmp_354 + tmp_357;

  tmp_359 <= resize(tmp_358, 36);

  tmp_360 <= signed(resize(mx_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 36));

  delayMatch_44_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_27 <= (OTHERS => to_signed(0, 36));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_27(0) <= tmp_352;
        delayMatch_reg_27(1 TO 6) <= delayMatch_reg_27(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_44_process;

  tmp_361 <= delayMatch_reg_27(6);

  tmp_362 <= tmp_351 - tmp_361;

  delayMatch_45_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_28 <= (OTHERS => to_signed(0, 36));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_28(0) <= tmp_360;
        delayMatch_reg_28(1 TO 6) <= delayMatch_reg_28(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_45_process;

  tmp_363 <= delayMatch_reg_28(6);

  tmp_364 <= tmp_359 - tmp_363;

  c0_serial_0_19(0) <= tmp_362;
  c0_serial_0_19(1) <= tmp_364;

  rcc_out_34 <= c0_serial_0_19;

  ratechange_splitcomp_out0_34 <= rcc_out_34(0);

  ratechange_splitcomp_out1_34 <= rcc_out_34(1);

  
  tmp_365 <= ratechange_splitcomp_out0_34 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_34;

  alpha0_deserializer_contl_18_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_18 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_18 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_18 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_18 <= alpha0_deserializer_contl_cnt_18 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_18_process;

  alpha0_deserializer_tapDelayEn_36 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_18 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_18 <= '1' WHEN alpha0_deserializer_contl_cnt_18 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_18 <= '1' WHEN alpha0_deserializer_contl_validOutpu_18 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_18 <= '1' WHEN alpha0_deserializer_contl_validOutpu_18 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_18 <= '1';

  alpha0_deserializer_tapDelayEn_37 <= enb AND alpha0_deserializer_tapDelayEn_36;

  v2bz_5 <= resize(tmp_276, 15);

  v2bz_6 <= resize(tmp_276, 15);

  v2bz_7 <= resize(tmp_276, 15);

  -- 'Madgwick_correction_fixpt:38' v4bz = fi(fi(2.0, 0, 2, 0, fm) * v2bz, 1, 14, 1, fm);
  p850tmp_cast <= resize(tmp_276 & '0', 17);
  tmp_366 <= p850tmp_cast(15 DOWNTO 0);

  tmp_367 <= tmp_366(14 DOWNTO 1);

  v4bz <= resize(tmp_367, 15);

  c0_serial_0_20(0) <= v2bz_5;
  c0_serial_0_20(1) <= v2bz_6;
  c0_serial_0_20(2) <= v2bz_7;
  c0_serial_0_20(3) <= v4bz;

  rcc_out_35 <= c0_serial_0_20;

  ratechange_splitcomp_out0_35 <= rcc_out_35(0);

  ratechange_splitcomp_out1_35 <= rcc_out_35(1);

  ratechange_splitcomp_out2_30 <= rcc_out_35(2);

  ratechange_splitcomp_out3_30 <= rcc_out_35(3);

  
  v2bz_8 <= ratechange_splitcomp_out0_35 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_35 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_30 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_30;

  reduced_13_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      reduced_reg <= (OTHERS => to_unsigned(16#0000#, 14));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        reduced_reg(0) <= q3_7;
        reduced_reg(1) <= reduced_reg(0);
      END IF;
    END IF;
  END PROCESS reduced_13_process;

  q3_9 <= reduced_reg(1);

  q3_10 <= signed(resize(q3_9, 15));

  reduced_14_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      reduced_reg_1 <= (OTHERS => to_unsigned(16#0000#, 14));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        reduced_reg_1(0) <= q1_2;
        reduced_reg_1(1 TO 2) <= reduced_reg_1(0 TO 1);
      END IF;
    END IF;
  END PROCESS reduced_14_process;

  q1_5 <= reduced_reg_1(2);

  q1_6 <= signed(resize(q1_5, 15));

  q2_17 <= signed(resize(q2_13, 15));

  q2_18 <= signed(resize(q2_13, 15));

  c0_serial_1_19(0) <= q3_10;
  c0_serial_1_19(1) <= q1_6;
  c0_serial_1_19(2) <= q2_17;
  c0_serial_1_19(3) <= q2_18;

  rcc_out_36 <= c0_serial_1_19;

  ratechange_splitcomp_out0_36 <= rcc_out_36(0);

  ratechange_splitcomp_out1_36 <= rcc_out_36(1);

  ratechange_splitcomp_out2_31 <= rcc_out_36(2);

  ratechange_splitcomp_out3_31 <= rcc_out_36(3);

  
  q3_11 <= ratechange_splitcomp_out0_36 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_36 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_31 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_31;

  multiplier_mul_temp_9 <= v2bz_8 * q3_11;
  tmp_368 <= multiplier_mul_temp_9(28 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_171 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_17 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_37 = '1' THEN
        alpha0_deserializer_tapout_17(2) <= tmp_368;
        alpha0_deserializer_tapout_17(0 TO 1) <= alpha0_deserializer_tapout_17(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_171;


  alpha0_deserializer_muxOut_17(0) <= alpha0_deserializer_tapout_17(0);
  alpha0_deserializer_muxOut_17(1) <= alpha0_deserializer_tapout_17(1);
  alpha0_deserializer_muxOut_17(2) <= alpha0_deserializer_tapout_17(2);
  alpha0_deserializer_muxOut_17(3) <= tmp_368;

  alpha0_deserializer_regComp_17_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_17 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_18 = '1' THEN
        c0_serialOut_0_17 <= alpha0_deserializer_muxOut_17;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_17_proce;


  tmp_369 <= c0_serialOut_0_17(0);

  tmp_370 <= tmp_369(27 DOWNTO 0);

  delayMatch_46_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_29 <= (OTHERS => to_signed(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_29(0) <= tmp_370;
        delayMatch_reg_29(1) <= delayMatch_reg_29(0);
      END IF;
    END IF;
  END PROCESS delayMatch_46_process;

  tmp_371 <= delayMatch_reg_29(1);

  tmp_372 <= c0_serialOut_0_17(2);

  tmp_373 <= tmp_372(27 DOWNTO 0);

  delayMatch_47_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_30 <= (OTHERS => to_signed(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_30(0) <= tmp_373;
        delayMatch_reg_30(1) <= delayMatch_reg_30(0);
      END IF;
    END IF;
  END PROCESS delayMatch_47_process;

  tmp_374 <= delayMatch_reg_30(1);

  c0_serial_1_20(0) <= tmp_371;
  c0_serial_1_20(1) <= tmp_374;

  rcc_out_37 <= c0_serial_1_20;

  ratechange_splitcomp_out0_37 <= rcc_out_37(0);

  ratechange_splitcomp_out1_37 <= rcc_out_37(1);

  
  tmp_375 <= ratechange_splitcomp_out0_37 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_37;

  tmp_376 <= tmp_365 * tmp_375;

  alpha0_deserializer_tapDelayComp_181 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_18 <= to_signed(0, 64);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_tapDelayEn_13 = '1' THEN
        alpha0_deserializer_tapout_18 <= tmp_376;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_181;


  alpha0_deserializer_muxOut_18(0) <= alpha0_deserializer_tapout_18;
  alpha0_deserializer_muxOut_18(1) <= tmp_376;

  alpha0_deserializer_regComp_18_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_18 <= (OTHERS => to_signed(0, 64));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_innerRegEn_6 = '1' THEN
        c0_serialOut_0_18 <= alpha0_deserializer_muxOut_18;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_18_proce;


  alpha0_deserializer_contl_19_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_19 <= to_unsigned(16#0#, 2);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' THEN
        IF alpha0_deserializer_contl_cnt_19 = to_unsigned(16#1#, 2) THEN 
          alpha0_deserializer_contl_cnt_19 <= to_unsigned(16#0#, 2);
        ELSE 
          alpha0_deserializer_contl_cnt_19 <= alpha0_deserializer_contl_cnt_19 + to_unsigned(16#1#, 2);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_19_process;

  alpha0_deserializer_tapDelayEn_38 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_19 < 
    to_unsigned(16#1#, 2));
  
  alpha0_deserializer_contl_validOutpu_19 <= '1' WHEN alpha0_deserializer_contl_cnt_19 = to_unsigned(16#1#, 
    2) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_19 <= '1' WHEN alpha0_deserializer_contl_validOutpu_19 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_19 <= '1' WHEN alpha0_deserializer_contl_validOutpu_19 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_19 <= '1';

  alpha0_deserializer_tapDelayEn_39 <= enb_1_2_0 AND alpha0_deserializer_tapDelayEn_38;

  alpha0_deserializer_contl_20_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_20 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_20 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_20 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_20 <= alpha0_deserializer_contl_cnt_20 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_20_process;

  alpha0_deserializer_tapDelayEn_40 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_20 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_20 <= '1' WHEN alpha0_deserializer_contl_cnt_20 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_20 <= '1' WHEN alpha0_deserializer_contl_validOutpu_20 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_20 <= '1' WHEN alpha0_deserializer_contl_validOutpu_20 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_20 <= '1';

  alpha0_deserializer_tapDelayEn_41 <= enb AND alpha0_deserializer_tapDelayEn_40;

  tmp_377 <= c0_serialOut_0(1);

  tmp_378 <= tmp_377(27 DOWNTO 14);

  tmp_379 <= signed(resize(tmp_378, 15));

  tmp_380 <= resize(tmp_379, 17);

  tmp_381 <= c0_serialOut_0_3(0);

  tmp_382 <= tmp_381(27 DOWNTO 14);

  tmp_383 <= signed(resize(tmp_382, 17));

  tmp_384 <= tmp_380 - tmp_383;

  delayMatch_48_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_31 <= (OTHERS => to_signed(16#00000#, 17));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_31(0) <= tmp_384;
        delayMatch_reg_31(1 TO 4) <= delayMatch_reg_31(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_48_process;

  tmp_385 <= delayMatch_reg_31(4);

  tmp_386 <= signed(resize(tmp_378, 15));

  tmp_387 <= resize(tmp_386, 17);

  tmp_388 <= signed(resize(tmp_382, 17));

  tmp_389 <= tmp_387 - tmp_388;

  delayMatch_49_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_32 <= (OTHERS => to_signed(16#00000#, 17));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_32(0) <= tmp_389;
        delayMatch_reg_32(1 TO 4) <= delayMatch_reg_32(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_49_process;

  tmp_390 <= delayMatch_reg_32(4);

  tmp_391 <= signed(resize(tmp_378, 15));

  tmp_392 <= resize(tmp_391, 17);

  tmp_393 <= signed(resize(tmp_382, 17));

  tmp_394 <= tmp_392 - tmp_393;

  delayMatch_50_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_33 <= (OTHERS => to_signed(16#00000#, 17));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_33(0) <= tmp_394;
        delayMatch_reg_33(1 TO 4) <= delayMatch_reg_33(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_50_process;

  tmp_395 <= delayMatch_reg_33(4);

  tmp_396 <= signed(resize(tmp_378, 15));

  tmp_397 <= resize(tmp_396, 17);

  tmp_398 <= signed(resize(tmp_382, 17));

  tmp_399 <= tmp_397 - tmp_398;

  delayMatch_51_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_34 <= (OTHERS => to_signed(16#00000#, 17));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_34(0) <= tmp_399;
        delayMatch_reg_34(1 TO 4) <= delayMatch_reg_34(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_51_process;

  tmp_400 <= delayMatch_reg_34(4);

  c0_serial_0_21(0) <= tmp_385;
  c0_serial_0_21(1) <= tmp_390;
  c0_serial_0_21(2) <= tmp_395;
  c0_serial_0_21(3) <= tmp_400;

  rcc_out_38 <= c0_serial_0_21;

  ratechange_splitcomp_out0_38 <= rcc_out_38(0);

  ratechange_splitcomp_out1_38 <= rcc_out_38(1);

  ratechange_splitcomp_out2_32 <= rcc_out_38(2);

  ratechange_splitcomp_out3_32 <= rcc_out_38(3);

  
  tmp_401 <= ratechange_splitcomp_out0_38 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_38 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_32 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_32;

  c0_serial_1_21(0) <= tmp_319;
  c0_serial_1_21(1) <= tmp_319;
  c0_serial_1_21(2) <= tmp_319;
  c0_serial_1_21(3) <= tmp_319;

  rcc_out_39 <= c0_serial_1_21;

  ratechange_splitcomp_out0_39 <= rcc_out_39(0);

  ratechange_splitcomp_out1_39 <= rcc_out_39(1);

  ratechange_splitcomp_out2_33 <= rcc_out_39(2);

  ratechange_splitcomp_out3_33 <= rcc_out_39(3);

  
  v2bx_1 <= ratechange_splitcomp_out0_39 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_39 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_33 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_33;

  multiplier_cast_2 <= signed(resize(v2bx_1, 15));
  multiplier_mul_temp_10 <= tmp_401 * multiplier_cast_2;
  tmp_402 <= multiplier_mul_temp_10(30 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_191 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_19 <= (OTHERS => to_signed(16#00000000#, 31));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_41 = '1' THEN
        alpha0_deserializer_tapout_19(2) <= tmp_402;
        alpha0_deserializer_tapout_19(0 TO 1) <= alpha0_deserializer_tapout_19(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_191;


  alpha0_deserializer_muxOut_19(0) <= alpha0_deserializer_tapout_19(0);
  alpha0_deserializer_muxOut_19(1) <= alpha0_deserializer_tapout_19(1);
  alpha0_deserializer_muxOut_19(2) <= alpha0_deserializer_tapout_19(2);
  alpha0_deserializer_muxOut_19(3) <= tmp_402;

  alpha0_deserializer_regComp_19_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_19 <= (OTHERS => to_signed(16#00000000#, 31));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_20 = '1' THEN
        c0_serialOut_0_19 <= alpha0_deserializer_muxOut_19;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_19_proce;


  tmp_403 <= c0_serialOut_0_19(0);

  tmp_404 <= resize(tmp_403, 32);

  tmp_405 <= c0_serialOut_0_13(1);

  tmp_406 <= tmp_405(28 DOWNTO 0);

  tmp_407 <= resize(tmp_406 & '0', 32);

  delayMatch_52_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_35 <= (OTHERS => to_signed(0, 32));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_35(0) <= tmp_407;
        delayMatch_reg_35(1) <= delayMatch_reg_35(0);
      END IF;
    END IF;
  END PROCESS delayMatch_52_process;

  tmp_408 <= delayMatch_reg_35(1);

  tmp_409 <= tmp_404 + tmp_408;

  tmp_410 <= resize(tmp_409, 34);

  tmp_411 <= signed(resize(my_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 34));

  alpha0_deserializer_contl_21_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_21 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_21 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_21 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_21 <= alpha0_deserializer_contl_cnt_21 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_21_process;

  alpha0_deserializer_tapDelayEn_42 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_21 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_21 <= '1' WHEN alpha0_deserializer_contl_cnt_21 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_21 <= '1' WHEN alpha0_deserializer_contl_validOutpu_21 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_21 <= '1' WHEN alpha0_deserializer_contl_validOutpu_21 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_21 <= '1';

  alpha0_deserializer_tapDelayEn_43 <= enb AND alpha0_deserializer_tapDelayEn_42;

  tmp_412 <= resize(tmp_49, 15);

  tmp_413 <= resize(tmp_236, 15);

  tmp_414 <= tmp_412 + tmp_413;

  tmp_415 <= resize(tmp_326, 15);

  tmp_416 <= resize(tmp_2, 15);

  tmp_417 <= tmp_415 + tmp_416;

  tmp_418 <= resize(tmp_326, 15);

  tmp_419 <= resize(tmp_2, 15);

  tmp_420 <= tmp_418 + tmp_419;

  tmp_421 <= resize(tmp_326, 15);

  tmp_422 <= resize(tmp_2, 15);

  tmp_423 <= tmp_421 + tmp_422;

  delayMatch_53_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_36 <= (OTHERS => to_unsigned(16#0000#, 15));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_36(0) <= tmp_414;
        delayMatch_reg_36(1 TO 4) <= delayMatch_reg_36(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_53_process;

  tmp_424 <= delayMatch_reg_36(4);

  tmp_425 <= signed(resize(tmp_424, 16));

  delayMatch_54_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_37 <= (OTHERS => to_unsigned(16#0000#, 15));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_37(0) <= tmp_417;
        delayMatch_reg_37(1 TO 4) <= delayMatch_reg_37(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_54_process;

  tmp_426 <= delayMatch_reg_37(4);

  tmp_427 <= signed(resize(tmp_426, 16));

  delayMatch_55_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_38 <= (OTHERS => to_unsigned(16#0000#, 15));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_38(0) <= tmp_420;
        delayMatch_reg_38(1 TO 4) <= delayMatch_reg_38(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_55_process;

  tmp_428 <= delayMatch_reg_38(4);

  tmp_429 <= signed(resize(tmp_428, 16));

  delayMatch_56_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_39 <= (OTHERS => to_unsigned(16#0000#, 15));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_39(0) <= tmp_423;
        delayMatch_reg_39(1 TO 4) <= delayMatch_reg_39(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_56_process;

  tmp_430 <= delayMatch_reg_39(4);

  tmp_431 <= signed(resize(tmp_430, 16));

  c0_serial_0_22(0) <= tmp_425;
  c0_serial_0_22(1) <= tmp_427;
  c0_serial_0_22(2) <= tmp_429;
  c0_serial_0_22(3) <= tmp_431;

  rcc_out_40 <= c0_serial_0_22;

  ratechange_splitcomp_out0_40 <= rcc_out_40(0);

  ratechange_splitcomp_out1_40 <= rcc_out_40(1);

  ratechange_splitcomp_out2_34 <= rcc_out_40(2);

  ratechange_splitcomp_out3_34 <= rcc_out_40(3);

  
  tmp_432 <= ratechange_splitcomp_out0_40 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_40 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_34 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_34;

  delayMatch_57_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_40 <= (OTHERS => to_signed(16#0000#, 14));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_40(0) <= tmp_276;
        delayMatch_reg_40(1) <= delayMatch_reg_40(0);
      END IF;
    END IF;
  END PROCESS delayMatch_57_process;

  v2bz_9 <= delayMatch_reg_40(1);

  v2bz_10 <= resize(v2bz_9, 15);

  v2bx_2 <= signed(resize(tmp_319, 15));

  v2bx_3 <= signed(resize(tmp_319, 15));

  v2bx_4 <= signed(resize(tmp_319, 15));

  c0_serial_1_22(0) <= v2bz_10;
  c0_serial_1_22(1) <= v2bx_2;
  c0_serial_1_22(2) <= v2bx_3;
  c0_serial_1_22(3) <= v2bx_4;

  rcc_out_41 <= c0_serial_1_22;

  ratechange_splitcomp_out0_41 <= rcc_out_41(0);

  ratechange_splitcomp_out1_41 <= rcc_out_41(1);

  ratechange_splitcomp_out2_35 <= rcc_out_41(2);

  ratechange_splitcomp_out3_35 <= rcc_out_41(3);

  
  v2bz_11 <= ratechange_splitcomp_out0_41 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_41 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_35 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_35;

  multiplier_mul_temp_11 <= tmp_432 * v2bz_11;
  tmp_433 <= multiplier_mul_temp_11(29 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_201 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_20 <= (OTHERS => to_signed(16#00000000#, 30));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_43 = '1' THEN
        alpha0_deserializer_tapout_20(2) <= tmp_433;
        alpha0_deserializer_tapout_20(0 TO 1) <= alpha0_deserializer_tapout_20(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_201;


  alpha0_deserializer_muxOut_20(0) <= alpha0_deserializer_tapout_20(0);
  alpha0_deserializer_muxOut_20(1) <= alpha0_deserializer_tapout_20(1);
  alpha0_deserializer_muxOut_20(2) <= alpha0_deserializer_tapout_20(2);
  alpha0_deserializer_muxOut_20(3) <= tmp_433;

  alpha0_deserializer_regComp_20_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_20 <= (OTHERS => to_signed(16#00000000#, 30));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_21 = '1' THEN
        c0_serialOut_0_20 <= alpha0_deserializer_muxOut_20;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_20_proce;


  tmp_434 <= c0_serialOut_0_19(3);

  tmp_435 <= resize(tmp_434, 32);

  tmp_436 <= c0_serialOut_0_20(0);

  tmp_437 <= tmp_436(28 DOWNTO 0);

  tmp_438 <= resize(tmp_437 & '0', 32);

  tmp_439 <= tmp_435 + tmp_438;

  tmp_440 <= resize(tmp_439, 34);

  tmp_441 <= signed(resize(my_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 34));

  delayMatch_58_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_41 <= (OTHERS => to_signed(0, 34));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_41(0) <= tmp_411;
        delayMatch_reg_41(1 TO 6) <= delayMatch_reg_41(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_58_process;

  tmp_442 <= delayMatch_reg_41(6);

  tmp_443 <= tmp_410 - tmp_442;

  delayMatch_59_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_42 <= (OTHERS => to_signed(0, 34));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_42(0) <= tmp_441;
        delayMatch_reg_42(1 TO 6) <= delayMatch_reg_42(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_59_process;

  tmp_444 <= delayMatch_reg_42(6);

  tmp_445 <= tmp_440 - tmp_444;

  c0_serial_0_23(0) <= tmp_443;
  c0_serial_0_23(1) <= tmp_445;

  rcc_out_42 <= c0_serial_0_23;

  ratechange_splitcomp_out0_42 <= rcc_out_42(0);

  ratechange_splitcomp_out1_42 <= rcc_out_42(1);

  
  tmp_446 <= ratechange_splitcomp_out0_42 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_42;

  alpha0_deserializer_contl_22_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_22 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_22 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_22 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_22 <= alpha0_deserializer_contl_cnt_22 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_22_process;

  alpha0_deserializer_tapDelayEn_44 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_22 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_22 <= '1' WHEN alpha0_deserializer_contl_cnt_22 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_22 <= '1' WHEN alpha0_deserializer_contl_validOutpu_22 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_22 <= '1' WHEN alpha0_deserializer_contl_validOutpu_22 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_22 <= '1';

  alpha0_deserializer_tapDelayEn_45 <= enb AND alpha0_deserializer_tapDelayEn_44;

  tmp_447 <= resize(tmp_326, 15);

  tmp_448 <= resize(tmp_2, 15);

  tmp_449 <= tmp_447 + tmp_448;

  -- 'Madgwick_correction_fixpt:37' v4bx = fi(fi(2.0, 0, 2, 0, fm) * v2bx, 0, 14, 2, fm);
  tmp_450 <= resize(tmp_319 & '0', 16);

  tmp_451 <= tmp_450(14 DOWNTO 1);

  delayMatch_60_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_43 <= (OTHERS => to_unsigned(16#0000#, 15));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_43(0) <= tmp_449;
        delayMatch_reg_43(1 TO 4) <= delayMatch_reg_43(0 TO 3);
      END IF;
    END IF;
  END PROCESS delayMatch_60_process;

  tmp_452 <= delayMatch_reg_43(4);

  tmp_453 <= signed(resize(tmp_452, 16));

  tmp_454 <= signed(resize(tmp_319, 15));

  p775tmp_cast <= resize(tmp_454, 16);
  p775tmp_cast_1 <=  - (p775tmp_cast);
  tmp_455 <= p775tmp_cast_1(14 DOWNTO 0);

  tmp_456 <= resize(tmp_455, 16);

  tmp_457 <= signed(resize(tmp_319, 15));

  p838tmp_cast <= resize(tmp_457, 16);
  p838tmp_cast_1 <=  - (p838tmp_cast);
  tmp_458 <= p838tmp_cast_1(14 DOWNTO 0);

  tmp_459 <= resize(tmp_458, 16);

  tmp_460 <= signed(resize(tmp_451, 15));

  p780tmp_cast <= resize(tmp_460, 16);
  p780tmp_cast_1 <=  - (p780tmp_cast);
  tmp_461 <= p780tmp_cast_1(14 DOWNTO 0);

  tmp_462 <= resize(tmp_461, 16);

  c0_serial_0_24(0) <= tmp_453;
  c0_serial_0_24(1) <= tmp_456;
  c0_serial_0_24(2) <= tmp_459;
  c0_serial_0_24(3) <= tmp_462;

  rcc_out_43 <= c0_serial_0_24;

  ratechange_splitcomp_out0_43 <= rcc_out_43(0);

  ratechange_splitcomp_out1_43 <= rcc_out_43(1);

  ratechange_splitcomp_out2_36 <= rcc_out_43(2);

  ratechange_splitcomp_out3_36 <= rcc_out_43(3);

  
  tmp_463 <= ratechange_splitcomp_out0_43 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_43 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_36 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_36;

  v2bx_5 <= signed(resize(tmp_319, 15));

  reduced_15_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      reduced_reg_2 <= (OTHERS => to_unsigned(16#0000#, 14));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        reduced_reg_2(0) <= q0_unsigned;
        reduced_reg_2(1 TO 3) <= reduced_reg_2(0 TO 2);
      END IF;
    END IF;
  END PROCESS reduced_15_process;

  q0_2 <= reduced_reg_2(3);

  reduced_16_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      reduced_reg_3 <= (OTHERS => to_unsigned(16#0000#, 14));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        reduced_reg_3(0) <= q0_2;
        reduced_reg_3(1) <= reduced_reg_3(0);
      END IF;
    END IF;
  END PROCESS reduced_16_process;

  q0_3 <= reduced_reg_3(1);

  q0_4 <= signed(resize(q0_3, 15));

  reduced_17_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      reduced_reg_4 <= (OTHERS => to_unsigned(16#0000#, 14));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        reduced_reg_4(0) <= q3_9;
        reduced_reg_4(1) <= reduced_reg_4(0);
      END IF;
    END IF;
  END PROCESS reduced_17_process;

  q3_12 <= reduced_reg_4(1);

  q3_13 <= signed(resize(q3_12, 15));

  q3_14 <= signed(resize(q3_12, 15));

  c0_serial_1_23(0) <= v2bx_5;
  c0_serial_1_23(1) <= q0_4;
  c0_serial_1_23(2) <= q3_13;
  c0_serial_1_23(3) <= q3_14;

  rcc_out_44 <= c0_serial_1_23;

  ratechange_splitcomp_out0_44 <= rcc_out_44(0);

  ratechange_splitcomp_out1_44 <= rcc_out_44(1);

  ratechange_splitcomp_out2_37 <= rcc_out_44(2);

  ratechange_splitcomp_out3_37 <= rcc_out_44(3);

  
  v2bx_6 <= ratechange_splitcomp_out0_44 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_44 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_37 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_37;

  multiplier_mul_temp_12 <= tmp_463 * v2bx_6;
  tmp_464 <= multiplier_mul_temp_12(29 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_211 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_21 <= (OTHERS => to_signed(16#00000000#, 30));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_45 = '1' THEN
        alpha0_deserializer_tapout_21(2) <= tmp_464;
        alpha0_deserializer_tapout_21(0 TO 1) <= alpha0_deserializer_tapout_21(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_211;


  alpha0_deserializer_muxOut_21(0) <= alpha0_deserializer_tapout_21(0);
  alpha0_deserializer_muxOut_21(1) <= alpha0_deserializer_tapout_21(1);
  alpha0_deserializer_muxOut_21(2) <= alpha0_deserializer_tapout_21(2);
  alpha0_deserializer_muxOut_21(3) <= tmp_464;

  alpha0_deserializer_regComp_21_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_21 <= (OTHERS => to_signed(16#00000000#, 30));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_22 = '1' THEN
        c0_serialOut_0_21 <= alpha0_deserializer_muxOut_21;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_21_proce;


  tmp_465 <= c0_serialOut_0_21(1);

  tmp_466 <= tmp_465(28 DOWNTO 0);

  tmp_467 <= resize(tmp_466, 30);

  tmp_468 <= c0_serialOut_0_14(3);

  tmp_469 <= tmp_468(27 DOWNTO 0);

  tmp_470 <= resize(tmp_469 & '0', 30);

  tmp_471 <= c0_serialOut_0_21(2);

  tmp_472 <= tmp_471(28 DOWNTO 0);

  tmp_473 <= resize(tmp_472, 30);

  tmp_474 <= c0_serialOut_0_17(1);

  tmp_475 <= tmp_474(27 DOWNTO 0);

  tmp_476 <= resize(tmp_475 & '0', 30);

  delayMatch_61_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_44 <= (OTHERS => to_signed(16#00000000#, 30));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_44(0) <= tmp_470;
        delayMatch_reg_44(1) <= delayMatch_reg_44(0);
      END IF;
    END IF;
  END PROCESS delayMatch_61_process;

  tmp_477 <= delayMatch_reg_44(1);

  tmp_478 <= tmp_467 + tmp_477;

  delayMatch_62_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_45 <= (OTHERS => to_signed(16#00000000#, 30));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_45(0) <= tmp_476;
        delayMatch_reg_45(1) <= delayMatch_reg_45(0);
      END IF;
    END IF;
  END PROCESS delayMatch_62_process;

  tmp_479 <= delayMatch_reg_45(1);

  tmp_480 <= tmp_473 + tmp_479;

  c0_serial_1_24(0) <= tmp_478;
  c0_serial_1_24(1) <= tmp_480;

  rcc_out_45 <= c0_serial_1_24;

  ratechange_splitcomp_out0_45 <= rcc_out_45(0);

  ratechange_splitcomp_out1_45 <= rcc_out_45(1);

  
  tmp_481 <= ratechange_splitcomp_out0_45 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_45;

  tmp_482 <= tmp_446 * tmp_481;

  alpha0_deserializer_tapDelayComp_221 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_22 <= to_signed(0, 64);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_tapDelayEn_39 = '1' THEN
        alpha0_deserializer_tapout_22 <= tmp_482;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_221;


  alpha0_deserializer_muxOut_22(0) <= alpha0_deserializer_tapout_22;
  alpha0_deserializer_muxOut_22(1) <= tmp_482;

  alpha0_deserializer_regComp_22_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_22 <= (OTHERS => to_signed(0, 64));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_innerRegEn_19 = '1' THEN
        c0_serialOut_0_22 <= alpha0_deserializer_muxOut_22;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_22_proce;


  alpha0_deserializer_contl_23_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_23 <= to_unsigned(16#0#, 2);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' THEN
        IF alpha0_deserializer_contl_cnt_23 = to_unsigned(16#1#, 2) THEN 
          alpha0_deserializer_contl_cnt_23 <= to_unsigned(16#0#, 2);
        ELSE 
          alpha0_deserializer_contl_cnt_23 <= alpha0_deserializer_contl_cnt_23 + to_unsigned(16#1#, 2);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_23_process;

  alpha0_deserializer_tapDelayEn_46 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_23 < 
    to_unsigned(16#1#, 2));
  
  alpha0_deserializer_contl_validOutpu_23 <= '1' WHEN alpha0_deserializer_contl_cnt_23 = to_unsigned(16#1#, 
    2) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_23 <= '1' WHEN alpha0_deserializer_contl_validOutpu_23 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_23 <= '1' WHEN alpha0_deserializer_contl_validOutpu_23 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_23 <= '1';

  alpha0_deserializer_tapDelayEn_47 <= enb_1_2_0 AND alpha0_deserializer_tapDelayEn_46;

  tmp_483 <= c0_serialOut_0_20(1);

  tmp_484 <= unsigned(tmp_483(28 DOWNTO 0));

  tmp_485 <= signed(resize(tmp_484, 36));

  alpha0_deserializer_contl_24_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_24 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_24 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_24 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_24 <= alpha0_deserializer_contl_cnt_24 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_24_process;

  alpha0_deserializer_tapDelayEn_48 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_24 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_24 <= '1' WHEN alpha0_deserializer_contl_cnt_24 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_24 <= '1' WHEN alpha0_deserializer_contl_validOutpu_24 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_24 <= '1' WHEN alpha0_deserializer_contl_validOutpu_24 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_24 <= '1';

  alpha0_deserializer_tapDelayEn_49 <= enb AND alpha0_deserializer_tapDelayEn_48;

  tmp_486 <= signed(resize(tmp_141, 17));

  tmp_487 <= to_signed(16#02000#, 17) - tmp_486;

  tmp_488 <= resize(tmp_487, 19);

  tmp_489 <= signed(resize(tmp_106, 19));

  tmp_490 <= tmp_488 - tmp_489;

  delayMatch_63_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_46 <= (OTHERS => to_signed(16#00000#, 19));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_46(0) <= tmp_490;
        delayMatch_reg_46(1 TO 2) <= delayMatch_reg_46(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_63_process;

  tmp_491 <= delayMatch_reg_46(2);

  tmp_492 <= signed(resize(tmp_141, 17));

  tmp_493 <= to_signed(16#02000#, 17) - tmp_492;

  tmp_494 <= resize(tmp_493, 19);

  tmp_495 <= signed(resize(tmp_106, 19));

  tmp_496 <= tmp_494 - tmp_495;

  delayMatch_64_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_47 <= (OTHERS => to_signed(16#00000#, 19));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_47(0) <= tmp_496;
        delayMatch_reg_47(1 TO 2) <= delayMatch_reg_47(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_64_process;

  tmp_497 <= delayMatch_reg_47(2);

  tmp_498 <= signed(resize(tmp_141, 17));

  tmp_499 <= to_signed(16#02000#, 17) - tmp_498;

  tmp_500 <= resize(tmp_499, 19);

  tmp_501 <= signed(resize(tmp_106, 19));

  tmp_502 <= tmp_500 - tmp_501;

  delayMatch_65_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_48 <= (OTHERS => to_signed(16#00000#, 19));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_48(0) <= tmp_502;
        delayMatch_reg_48(1 TO 2) <= delayMatch_reg_48(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_65_process;

  tmp_503 <= delayMatch_reg_48(2);

  tmp_504 <= signed(resize(tmp_141, 17));

  tmp_505 <= to_signed(16#02000#, 17) - tmp_504;

  tmp_506 <= resize(tmp_505, 19);

  tmp_507 <= signed(resize(tmp_106, 19));

  tmp_508 <= tmp_506 - tmp_507;

  delayMatch_66_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_49 <= (OTHERS => to_signed(16#00000#, 19));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_49(0) <= tmp_508;
        delayMatch_reg_49(1 TO 2) <= delayMatch_reg_49(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_66_process;

  tmp_509 <= delayMatch_reg_49(2);

  c0_serial_0_25(0) <= tmp_491;
  c0_serial_0_25(1) <= tmp_497;
  c0_serial_0_25(2) <= tmp_503;
  c0_serial_0_25(3) <= tmp_509;

  rcc_out_46 <= c0_serial_0_25;

  ratechange_splitcomp_out0_46 <= rcc_out_46(0);

  ratechange_splitcomp_out1_46 <= rcc_out_46(1);

  ratechange_splitcomp_out2_38 <= rcc_out_46(2);

  ratechange_splitcomp_out3_38 <= rcc_out_46(3);

  
  tmp_510 <= ratechange_splitcomp_out0_46 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_46 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_38 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_38;

  c0_serial_1_25(0) <= tmp_276;
  c0_serial_1_25(1) <= tmp_276;
  c0_serial_1_25(2) <= tmp_276;
  c0_serial_1_25(3) <= tmp_276;

  rcc_out_47 <= c0_serial_1_25;

  ratechange_splitcomp_out0_47 <= rcc_out_47(0);

  ratechange_splitcomp_out1_47 <= rcc_out_47(1);

  ratechange_splitcomp_out2_39 <= rcc_out_47(2);

  ratechange_splitcomp_out3_39 <= rcc_out_47(3);

  
  v2bz_12 <= ratechange_splitcomp_out0_47 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_47 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_39 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_39;

  tmp_511 <= tmp_510 * v2bz_12;

  alpha0_deserializer_tapDelayComp_231 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_23 <= (OTHERS => to_signed(0, 33));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_49 = '1' THEN
        alpha0_deserializer_tapout_23(2) <= tmp_511;
        alpha0_deserializer_tapout_23(0 TO 1) <= alpha0_deserializer_tapout_23(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_231;


  alpha0_deserializer_muxOut_23(0) <= alpha0_deserializer_tapout_23(0);
  alpha0_deserializer_muxOut_23(1) <= alpha0_deserializer_tapout_23(1);
  alpha0_deserializer_muxOut_23(2) <= alpha0_deserializer_tapout_23(2);
  alpha0_deserializer_muxOut_23(3) <= tmp_511;

  alpha0_deserializer_regComp_23_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_23 <= (OTHERS => to_signed(0, 33));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_24 = '1' THEN
        c0_serialOut_0_23 <= alpha0_deserializer_muxOut_23;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_23_proce;


  tmp_512 <= c0_serialOut_0_23(0);

  tmp_513 <= resize(tmp_512 & '0', 36);

  delayMatch_67_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_50 <= (OTHERS => to_signed(0, 36));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_50(0) <= tmp_513;
        delayMatch_reg_50(1) <= delayMatch_reg_50(0);
      END IF;
    END IF;
  END PROCESS delayMatch_67_process;

  tmp_514 <= delayMatch_reg_50(1);

  tmp_515 <= tmp_485 + tmp_514;

  tmp_516 <= resize(tmp_515, 38);

  tmp_517 <= signed(resize(mz_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 38));

  tmp_518 <= c0_serialOut_0_21(0);

  tmp_519 <= unsigned(tmp_518(28 DOWNTO 0));

  tmp_520 <= signed(resize(tmp_519, 36));

  tmp_521 <= c0_serialOut_0_23(3);

  tmp_522 <= resize(tmp_521 & '0', 36);

  delayMatch_68_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_51 <= (OTHERS => to_signed(0, 36));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_51(0) <= tmp_522;
        delayMatch_reg_51(1) <= delayMatch_reg_51(0);
      END IF;
    END IF;
  END PROCESS delayMatch_68_process;

  tmp_523 <= delayMatch_reg_51(1);

  tmp_524 <= tmp_520 + tmp_523;

  tmp_525 <= resize(tmp_524, 38);

  tmp_526 <= signed(resize(mz_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 38));

  delayMatch_69_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_52 <= (OTHERS => to_signed(0, 38));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_52(0) <= tmp_517;
        delayMatch_reg_52(1 TO 6) <= delayMatch_reg_52(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_69_process;

  tmp_527 <= delayMatch_reg_52(6);

  tmp_528 <= tmp_516 - tmp_527;

  delayMatch_70_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_53 <= (OTHERS => to_signed(0, 38));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_53(0) <= tmp_526;
        delayMatch_reg_53(1 TO 6) <= delayMatch_reg_53(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_70_process;

  tmp_529 <= delayMatch_reg_53(6);

  tmp_530 <= tmp_525 - tmp_529;

  c0_serial_0_26(0) <= tmp_528;
  c0_serial_0_26(1) <= tmp_530;

  rcc_out_48 <= c0_serial_0_26;

  ratechange_splitcomp_out0_48 <= rcc_out_48(0);

  ratechange_splitcomp_out1_48 <= rcc_out_48(1);

  
  tmp_531 <= ratechange_splitcomp_out0_48 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_48;

  alpha0_deserializer_contl_25_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_25 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_25 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_25 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_25 <= alpha0_deserializer_contl_cnt_25 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_25_process;

  alpha0_deserializer_tapDelayEn_50 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_25 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_25 <= '1' WHEN alpha0_deserializer_contl_cnt_25 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_25 <= '1' WHEN alpha0_deserializer_contl_validOutpu_25 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_25 <= '1' WHEN alpha0_deserializer_contl_validOutpu_25 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_25 <= '1';

  alpha0_deserializer_tapDelayEn_51 <= enb AND alpha0_deserializer_tapDelayEn_50;

  delayMatch_71_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_54 <= (OTHERS => to_signed(16#0000#, 14));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_54(0) <= tmp_367;
        delayMatch_reg_54(1) <= delayMatch_reg_54(0);
      END IF;
    END IF;
  END PROCESS delayMatch_71_process;

  v4bz_1 <= delayMatch_reg_54(1);

  v4bz_2 <= resize(v4bz_1, 15);

  v2bx_7 <= signed(resize(tmp_319, 15));

  v2bx_8 <= signed(resize(tmp_319, 15));

  v2bx_9 <= signed(resize(tmp_319, 15));

  c0_serial_0_27(0) <= v4bz_2;
  c0_serial_0_27(1) <= v2bx_7;
  c0_serial_0_27(2) <= v2bx_8;
  c0_serial_0_27(3) <= v2bx_9;

  rcc_out_49 <= c0_serial_0_27;

  ratechange_splitcomp_out0_49 <= rcc_out_49(0);

  ratechange_splitcomp_out1_49 <= rcc_out_49(1);

  ratechange_splitcomp_out2_40 <= rcc_out_49(2);

  ratechange_splitcomp_out3_40 <= rcc_out_49(3);

  
  v4bz_3 <= ratechange_splitcomp_out0_49 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_49 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_40 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_40;

  reduced_18_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      reduced_reg_5 <= (OTHERS => to_unsigned(16#0000#, 14));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        reduced_reg_5(0) <= q1_5;
        reduced_reg_5(1) <= reduced_reg_5(0);
      END IF;
    END IF;
  END PROCESS reduced_18_process;

  q1_7 <= reduced_reg_5(1);

  q1_8 <= signed(resize(q1_7, 15));

  q1_9 <= signed(resize(q1_7, 15));

  q0_5 <= signed(resize(q0_3, 15));

  q1_10 <= signed(resize(q1_7, 15));

  c0_serial_1_26(0) <= q1_8;
  c0_serial_1_26(1) <= q1_9;
  c0_serial_1_26(2) <= q0_5;
  c0_serial_1_26(3) <= q1_10;

  rcc_out_50 <= c0_serial_1_26;

  ratechange_splitcomp_out0_50 <= rcc_out_50(0);

  ratechange_splitcomp_out1_50 <= rcc_out_50(1);

  ratechange_splitcomp_out2_41 <= rcc_out_50(2);

  ratechange_splitcomp_out3_41 <= rcc_out_50(3);

  
  q1_11 <= ratechange_splitcomp_out0_50 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_50 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_41 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_41;

  multiplier_mul_temp_13 <= v4bz_3 * q1_11;
  tmp_532 <= multiplier_mul_temp_13(28 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_241 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_24 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_51 = '1' THEN
        alpha0_deserializer_tapout_24(2) <= tmp_532;
        alpha0_deserializer_tapout_24(0 TO 1) <= alpha0_deserializer_tapout_24(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_241;


  alpha0_deserializer_muxOut_24(0) <= alpha0_deserializer_tapout_24(0);
  alpha0_deserializer_muxOut_24(1) <= alpha0_deserializer_tapout_24(1);
  alpha0_deserializer_muxOut_24(2) <= alpha0_deserializer_tapout_24(2);
  alpha0_deserializer_muxOut_24(3) <= tmp_532;

  alpha0_deserializer_regComp_24_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_24 <= (OTHERS => to_signed(16#00000000#, 29));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_25 = '1' THEN
        c0_serialOut_0_24 <= alpha0_deserializer_muxOut_24;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_24_proce;


  tmp_533 <= c0_serialOut_0_24(1);

  tmp_534 <= unsigned(tmp_533(27 DOWNTO 0));

  alpha0_deserializer_contl_26_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_26 <= to_unsigned(16#0#, 3);
      alpha0_deserializer_contl_cntGlobal <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_26 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_26 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_26 <= alpha0_deserializer_contl_cnt_26 + to_unsigned(16#1#, 3);
        END IF;
        IF alpha0_deserializer_contl_cntGlobal = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cntGlobal <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cntGlobal <= alpha0_deserializer_contl_cntGlobal + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_26_process;

  alpha0_deserializer_tapDelayEn_52 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_26 < 
    to_unsigned(16#2#, 3));
  
  alpha0_deserializer_contl_validOutpu_26 <= '1' WHEN alpha0_deserializer_contl_cnt_26 = to_unsigned(16#2#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_26 <= '1' WHEN alpha0_deserializer_contl_validOutpu_26 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_26 <= '1' WHEN alpha0_deserializer_contl_validOutpu_26 = '1' ELSE
      '0';
  
  alpha0_deserializer_outBypassEn_26 <= '1' WHEN alpha0_deserializer_contl_cntGlobal = to_unsigned(16#3#, 3) 
    ELSE
      '0';

  alpha0_deserializer_tapDelayEn_53 <= enb AND alpha0_deserializer_tapDelayEn_52;

  c0_serial_0_28(0) <= tmp_319;
  c0_serial_0_28(1) <= tmp_319;
  c0_serial_0_28(2) <= tmp_319;

  rcc_out_51 <= c0_serial_0_28;

  ratechange_splitcomp_out0_51 <= rcc_out_51(0);

  ratechange_splitcomp_out1_51 <= rcc_out_51(1);

  ratechange_splitcomp_out2_42 <= rcc_out_51(2);

  
  v2bx_10 <= ratechange_splitcomp_out0_51 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_51 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_42 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out2_42;

  reduced_19_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      reduced_reg_6 <= (OTHERS => to_unsigned(16#0000#, 14));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        reduced_reg_6(0) <= q2_13;
        reduced_reg_6(1) <= reduced_reg_6(0);
      END IF;
    END IF;
  END PROCESS reduced_19_process;

  q2_19 <= reduced_reg_6(1);

  c0_serial_1_27(0) <= q3_12;
  c0_serial_1_27(1) <= q2_19;
  c0_serial_1_27(2) <= q2_19;

  rcc_out_52 <= c0_serial_1_27;

  ratechange_splitcomp_out0_52 <= rcc_out_52(0);

  ratechange_splitcomp_out1_52 <= rcc_out_52(1);

  ratechange_splitcomp_out2_43 <= rcc_out_52(2);

  
  q3_15 <= ratechange_splitcomp_out0_52 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_52 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_43 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out2_43;

  tmp_535 <= v2bx_10 * q3_15;

  alpha0_deserializer_tapDelayComp_251 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_25 <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_53 = '1' THEN
        alpha0_deserializer_tapout_25(0) <= alpha0_deserializer_tapout_25(1);
        alpha0_deserializer_tapout_25(1) <= tmp_535;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_251;


  alpha0_deserializer_muxOut_25(0) <= alpha0_deserializer_tapout_25(0);
  alpha0_deserializer_muxOut_25(1) <= alpha0_deserializer_tapout_25(1);
  alpha0_deserializer_muxOut_25(2) <= tmp_535;

  alpha0_deserializer_innerRegComp_pro : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_deserInnerOut <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_26 = '1' THEN
        alpha0_deserializer_deserInnerOut <= alpha0_deserializer_muxOut_25;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_innerRegComp_pro;


  alpha0_deserializer_OutRegComp_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_25 <= (OTHERS => to_unsigned(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_outBypassEn_26 = '1' THEN
        c0_serialOut_0_25 <= alpha0_deserializer_deserInnerOut;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_OutRegComp_proce;


  c0_serial_1_28(0) <= tmp_534;
  c0_serial_1_28(1) <= c0_serialOut_0_25(2);

  rcc_out_53 <= c0_serial_1_28;

  ratechange_splitcomp_out0_53 <= rcc_out_53(0);

  ratechange_splitcomp_out1_53 <= rcc_out_53(1);

  
  tmp_536 <= ratechange_splitcomp_out0_53 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_53;

  multiplier_cast_3 <= signed(resize(tmp_536, 29));
  multiplier_mul_temp_14 <= tmp_531 * multiplier_cast_3;
  tmp_537 <= multiplier_mul_temp_14(65 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_261 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_26 <= to_signed(0, 66);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_tapDelayEn_47 = '1' THEN
        alpha0_deserializer_tapout_26 <= tmp_537;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_261;


  alpha0_deserializer_muxOut_26(0) <= alpha0_deserializer_tapout_26;
  alpha0_deserializer_muxOut_26(1) <= tmp_537;

  alpha0_deserializer_regComp_25_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_26 <= (OTHERS => to_signed(0, 66));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_innerRegEn_23 = '1' THEN
        c0_serialOut_0_26 <= alpha0_deserializer_muxOut_26;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_25_proce;


  delayMatch_72_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_55 <= (OTHERS => to_signed(0, 65));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_55(0) <= tmp_102;
        delayMatch_reg_55(1 TO 5) <= delayMatch_reg_55(0 TO 4);
      END IF;
    END IF;
  END PROCESS delayMatch_72_process;

  tmp_538 <= delayMatch_reg_55(5);

  tmp_539 <= c0_serialOut_0_18(1);

  tmp_540 <= resize(tmp_539, 65);

  tmp_541 <= tmp_538 - tmp_540;

  tmp_542 <= resize(tmp_541 & '0', 67);

  tmp_543 <= c0_serialOut_0_22(1);

  tmp_544 <= resize(tmp_543, 67);

  tmp_545 <= tmp_542 + tmp_544;

  tmp_546 <= resize(tmp_545, 68);

  tmp_547 <= c0_serialOut_0_26(1);

  tmp_548 <= resize(tmp_547, 68);

  tmp_549 <= tmp_546 + tmp_548;

  tmp_550 <= tmp_549(56 DOWNTO 43);

  s0_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      s0_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        s0_tmp <= tmp_550;
      END IF;
    END IF;
  END PROCESS s0_reg_process;


  s0 <= std_logic_vector(s0_tmp);

  alpha0_deserializer_contl_27_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_27 <= to_unsigned(16#0#, 2);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' THEN
        IF alpha0_deserializer_contl_cnt_27 = to_unsigned(16#1#, 2) THEN 
          alpha0_deserializer_contl_cnt_27 <= to_unsigned(16#0#, 2);
        ELSE 
          alpha0_deserializer_contl_cnt_27 <= alpha0_deserializer_contl_cnt_27 + to_unsigned(16#1#, 2);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_27_process;

  alpha0_deserializer_tapDelayEn_54 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_27 < 
    to_unsigned(16#1#, 2));
  
  alpha0_deserializer_contl_validOutpu_27 <= '1' WHEN alpha0_deserializer_contl_cnt_27 = to_unsigned(16#1#, 
    2) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_27 <= '1' WHEN alpha0_deserializer_contl_validOutpu_27 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_27 <= '1' WHEN alpha0_deserializer_contl_validOutpu_27 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_27 <= '1';

  alpha0_deserializer_tapDelayEn_55 <= enb_1_2_0 AND alpha0_deserializer_tapDelayEn_54;

  -- 
  --                                                    ___
  -- 
  
-- 'Madgwick_correction_fixpt:45' s3 = fi(v2q1 * (fi_signed(fi(2.0, 0, 2, 0, fm) * q1q3) - v2q0q2 - ax) + v2q2 * 
  
-- (fi(2.0, 0, 2, 0, fm) * q0q1 + v2q2q3 - ay) + (fi_uminus(v4bx) * q3 + v2bz * q1) * (fi_signed(v2bx * (fi_signed(fi_signed(fi(0.5, 
  
-- 0, 14, 14, fm)) - q2q2) - q3q3) + v2bz * (fi_signed(q1q3) - q0q2)) - mx) + (fi_uminus(v2bx) * q0 + v2bz * q2) * 
  
-- (fi_signed(v2bx * (fi_signed(q1q2) - q0q3) + v2bz * (q0q1 + q2q3)) - my) + v2bx * q1 * (fi_signed(v2bx * (q0q2 
  -- + q1q3) + v2bz * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q1q1) - q2q2)) - mz), 1, 14, -10, fm)
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:63' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:64' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:65' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:66' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:67' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:63' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:64' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:65' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:66' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:67' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  tmp_551 <= resize(tmp_2 & '0', 16);

  tmp_552 <= signed(resize(tmp_551, 17));

  tmp_553 <= resize(tmp_552, 19);

  tmp_554 <= signed(resize(tmp_18 & '0', 19));

  tmp_555 <= tmp_553 - tmp_554;

  tmp_556 <= resize(tmp_555, 24);

  tmp_557 <= resize(ax_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  
-- 'Madgwick_correction_fixpt:42' s1 = fi(fi_signed(v2q3 * (fi_signed(fi(2.0, 0, 2, 0, fm) * q1q3) - v2q0q2 - ax) 
  
-- + v2q0 * (fi(2.0, 0, 2, 0, fm) * q0q1 + v2q2q3 - ay)) - fi(4.0, 0, 3, 0, fm) * q1 * (fi_signed(fi_signed(fi(1, 
  
-- 0, 1, 0, fm)) - fi(2.0, 0, 2, 0, fm) * q1q1) - fi(2.0, 0, 2, 0, fm) * q2q2 - az) + v2bz * q3 * (fi_signed(v2bx 
  
-- * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q2q2) - q3q3) + v2bz * (fi_signed(q1q3) - q0q2)) - mx) + (v2bx 
  
-- * q2 + v2bz * q0) * (fi_signed(v2bx * (fi_signed(q1q2) - q0q3) + v2bz * (q0q1 + q2q3)) - my) + (fi_signed(v2bx 
  
-- * q3) - v4bz * q1) * (fi_signed(v2bx * (q0q2 + q1q3) + v2bz * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q1q1) 
  -- - q2q2)) - mz), 1, 14, -9, fm)
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:53' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:54' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:55' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:51' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:52' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:56' else
  -- 
  -- 'Madgwick_correction_fixpt:57' y = a;
  tmp_558 <= resize(tmp_2 & '0', 16);

  tmp_559 <= signed(resize(tmp_558, 17));

  tmp_560 <= resize(tmp_559, 19);

  tmp_561 <= signed(resize(tmp_18 & '0', 19));

  tmp_562 <= tmp_560 - tmp_561;

  tmp_563 <= resize(tmp_562, 24);

  tmp_564 <= resize(ax_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  delayMatch_73_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_565 <= to_signed(16#000000#, 24);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_565 <= tmp_557;
      END IF;
    END IF;
  END PROCESS delayMatch_73_process;


  tmp_566 <= tmp_556 - tmp_565;

  delayMatch_74_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_567 <= to_signed(16#000000#, 24);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_567 <= tmp_564;
      END IF;
    END IF;
  END PROCESS delayMatch_74_process;


  tmp_568 <= tmp_563 - tmp_567;

  c0_serial_0_29(0) <= tmp_566;
  c0_serial_0_29(1) <= tmp_568;

  rcc_out_54 <= c0_serial_0_29;

  ratechange_splitcomp_out0_54 <= rcc_out_54(0);

  ratechange_splitcomp_out1_54 <= rcc_out_54(1);

  
  tmp_569 <= ratechange_splitcomp_out0_54 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_54;

  c0_serial_1_29(0) <= v2q1;
  c0_serial_1_29(1) <= v2q3;

  rcc_out_55 <= c0_serial_1_29;

  ratechange_splitcomp_out0_55 <= rcc_out_55(0);

  ratechange_splitcomp_out1_55 <= rcc_out_55(1);

  
  v2q1_3 <= ratechange_splitcomp_out0_55 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_55;

  multiplier_cast_4 <= signed(resize(v2q1_3, 15));
  multiplier_mul_temp_15 <= tmp_569 * multiplier_cast_4;
  tmp_570 <= multiplier_mul_temp_15(37 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_271 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_27 <= to_signed(0, 38);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_tapDelayEn_55 = '1' THEN
        alpha0_deserializer_tapout_27 <= tmp_570;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_271;


  alpha0_deserializer_muxOut_27(0) <= alpha0_deserializer_tapout_27;
  alpha0_deserializer_muxOut_27(1) <= tmp_570;

  alpha0_deserializer_regComp_26_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_27 <= (OTHERS => to_signed(0, 38));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_innerRegEn_27 = '1' THEN
        c0_serialOut_0_27 <= alpha0_deserializer_muxOut_27;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_26_proce;


  alpha0_deserializer_contl_28_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_28 <= to_unsigned(16#0#, 2);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' THEN
        IF alpha0_deserializer_contl_cnt_28 = to_unsigned(16#1#, 2) THEN 
          alpha0_deserializer_contl_cnt_28 <= to_unsigned(16#0#, 2);
        ELSE 
          alpha0_deserializer_contl_cnt_28 <= alpha0_deserializer_contl_cnt_28 + to_unsigned(16#1#, 2);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_28_process;

  alpha0_deserializer_tapDelayEn_56 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_28 < 
    to_unsigned(16#1#, 2));
  
  alpha0_deserializer_contl_validOutpu_28 <= '1' WHEN alpha0_deserializer_contl_cnt_28 = to_unsigned(16#1#, 
    2) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_28 <= '1' WHEN alpha0_deserializer_contl_validOutpu_28 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_28 <= '1' WHEN alpha0_deserializer_contl_validOutpu_28 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_28 <= '1';

  alpha0_deserializer_tapDelayEn_57 <= enb_1_2_0 AND alpha0_deserializer_tapDelayEn_56;

  tmp_571 <= resize(tmp_141 & '0', 16);

  tmp_572 <= signed(resize(tmp_571, 18));

  tmp_573 <= to_signed(16#04000#, 18) - tmp_572;

  tmp_574 <= resize(tmp_573, 20);

  tmp_575 <= resize(tmp_106 & '0', 16);

  tmp_576 <= signed(resize(tmp_575, 20));

  tmp_577 <= tmp_574 - tmp_576;

  tmp_578 <= resize(tmp_577, 24);

  az_signed <= signed(az);

  tmp_579 <= resize(az_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  tmp_580 <= resize(tmp_141 & '0', 16);

  tmp_581 <= signed(resize(tmp_580, 18));

  tmp_582 <= to_signed(16#04000#, 18) - tmp_581;

  tmp_583 <= resize(tmp_582, 20);

  tmp_584 <= resize(tmp_106 & '0', 16);

  tmp_585 <= signed(resize(tmp_584, 20));

  tmp_586 <= tmp_583 - tmp_585;

  tmp_587 <= resize(tmp_586, 24);

  tmp_588 <= resize(az_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  delayMatch_75_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_589 <= to_signed(16#000000#, 24);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_589 <= tmp_579;
      END IF;
    END IF;
  END PROCESS delayMatch_75_process;


  tmp_590 <= tmp_578 - tmp_589;

  delayMatch_76_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_591 <= to_signed(16#000000#, 24);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_591 <= tmp_588;
      END IF;
    END IF;
  END PROCESS delayMatch_76_process;


  tmp_592 <= tmp_587 - tmp_591;

  c0_serial_0_30(0) <= tmp_590;
  c0_serial_0_30(1) <= tmp_592;

  rcc_out_56 <= c0_serial_0_30;

  ratechange_splitcomp_out0_56 <= rcc_out_56(0);

  ratechange_splitcomp_out1_56 <= rcc_out_56(1);

  
  tmp_593 <= ratechange_splitcomp_out0_56 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_56;

  tmp_594 <= resize(q2_unsigned & '0' & '0', 17);

  delayMatch_77_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_595 <= to_unsigned(16#00000#, 17);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_595 <= tmp_594;
      END IF;
    END IF;
  END PROCESS delayMatch_77_process;


  tmp_596 <= resize(q1_unsigned & '0' & '0', 17);

  delayMatch_78_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_597 <= to_unsigned(16#00000#, 17);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_597 <= tmp_596;
      END IF;
    END IF;
  END PROCESS delayMatch_78_process;


  c0_serial_1_30(0) <= tmp_595;
  c0_serial_1_30(1) <= tmp_597;

  rcc_out_57 <= c0_serial_1_30;

  ratechange_splitcomp_out0_57 <= rcc_out_57(0);

  ratechange_splitcomp_out1_57 <= rcc_out_57(1);

  
  tmp_598 <= ratechange_splitcomp_out0_57 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_57;

  multiplier_cast_5 <= signed(resize(tmp_598, 18));
  multiplier_mul_temp_16 <= tmp_593 * multiplier_cast_5;
  tmp_599 <= multiplier_mul_temp_16(40 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_281 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_28 <= to_signed(0, 41);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_tapDelayEn_57 = '1' THEN
        alpha0_deserializer_tapout_28 <= tmp_599;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_281;


  alpha0_deserializer_muxOut_28(0) <= alpha0_deserializer_tapout_28;
  alpha0_deserializer_muxOut_28(1) <= tmp_599;

  alpha0_deserializer_regComp_27_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_28 <= (OTHERS => to_signed(0, 41));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_innerRegEn_28 = '1' THEN
        c0_serialOut_0_28 <= alpha0_deserializer_muxOut_28;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_27_proce;


  tmp_600 <= c0_serialOut_0_27(1);

  tmp_601 <= resize(tmp_600, 40);

  tmp_602 <= c0_serialOut_0_5(2);

  tmp_603 <= resize(tmp_602, 40);

  tmp_604 <= tmp_601 + tmp_603;

  tmp_605 <= resize(tmp_604 & '0', 42);

  tmp_606 <= c0_serialOut_0_28(1);

  tmp_607 <= resize(tmp_606, 42);

  tmp_608 <= tmp_605 - tmp_607;

  tmp_609 <= resize(tmp_608 & '0' & '0' & '0' & '0' & '0', 65);

  alpha0_deserializer_contl_29_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_29 <= to_unsigned(16#0#, 2);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' THEN
        IF alpha0_deserializer_contl_cnt_29 = to_unsigned(16#1#, 2) THEN 
          alpha0_deserializer_contl_cnt_29 <= to_unsigned(16#0#, 2);
        ELSE 
          alpha0_deserializer_contl_cnt_29 <= alpha0_deserializer_contl_cnt_29 + to_unsigned(16#1#, 2);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_29_process;

  alpha0_deserializer_tapDelayEn_58 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_29 < 
    to_unsigned(16#1#, 2));
  
  alpha0_deserializer_contl_validOutpu_29 <= '1' WHEN alpha0_deserializer_contl_cnt_29 = to_unsigned(16#1#, 
    2) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_29 <= '1' WHEN alpha0_deserializer_contl_validOutpu_29 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_29 <= '1' WHEN alpha0_deserializer_contl_validOutpu_29 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_29 <= '1';

  alpha0_deserializer_tapDelayEn_59 <= enb_1_2_0 AND alpha0_deserializer_tapDelayEn_58;

  tmp_610 <= c0_serialOut_0_19(1);

  tmp_611 <= resize(tmp_610, 32);

  tmp_612 <= c0_serialOut_0_13(2);

  tmp_613 <= tmp_612(28 DOWNTO 0);

  tmp_614 <= resize(tmp_613 & '0', 32);

  delayMatch_79_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_56 <= (OTHERS => to_signed(0, 32));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_56(0) <= tmp_614;
        delayMatch_reg_56(1) <= delayMatch_reg_56(0);
      END IF;
    END IF;
  END PROCESS delayMatch_79_process;

  tmp_615 <= delayMatch_reg_56(1);

  tmp_616 <= tmp_611 + tmp_615;

  tmp_617 <= resize(tmp_616, 34);

  tmp_618 <= signed(resize(my_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 34));

  tmp_619 <= c0_serialOut_0_19(2);

  tmp_620 <= resize(tmp_619, 32);

  tmp_621 <= c0_serialOut_0_13(3);

  tmp_622 <= tmp_621(28 DOWNTO 0);

  tmp_623 <= resize(tmp_622 & '0', 32);

  delayMatch_80_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_57 <= (OTHERS => to_signed(0, 32));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_57(0) <= tmp_623;
        delayMatch_reg_57(1) <= delayMatch_reg_57(0);
      END IF;
    END IF;
  END PROCESS delayMatch_80_process;

  tmp_624 <= delayMatch_reg_57(1);

  tmp_625 <= tmp_620 + tmp_624;

  tmp_626 <= resize(tmp_625, 34);

  tmp_627 <= signed(resize(my_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 34));

  delayMatch_81_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_58 <= (OTHERS => to_signed(0, 34));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_58(0) <= tmp_618;
        delayMatch_reg_58(1 TO 6) <= delayMatch_reg_58(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_81_process;

  tmp_628 <= delayMatch_reg_58(6);

  tmp_629 <= tmp_617 - tmp_628;

  delayMatch_82_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_59 <= (OTHERS => to_signed(0, 34));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_59(0) <= tmp_627;
        delayMatch_reg_59(1 TO 6) <= delayMatch_reg_59(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_82_process;

  tmp_630 <= delayMatch_reg_59(6);

  tmp_631 <= tmp_626 - tmp_630;

  c0_serial_0_31(0) <= tmp_629;
  c0_serial_0_31(1) <= tmp_631;

  rcc_out_58 <= c0_serial_0_31;

  ratechange_splitcomp_out0_58 <= rcc_out_58(0);

  ratechange_splitcomp_out1_58 <= rcc_out_58(1);

  
  tmp_632 <= ratechange_splitcomp_out0_58 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_58;

  tmp_633 <= c0_serialOut_0_24(3);

  tmp_634 <= unsigned(tmp_633(27 DOWNTO 0));

  tmp_635 <= signed(resize(tmp_634, 31));

  alpha0_deserializer_contl_30_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_30 <= to_unsigned(16#0#, 3);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        IF alpha0_deserializer_contl_cnt_30 = to_unsigned(16#3#, 3) THEN 
          alpha0_deserializer_contl_cnt_30 <= to_unsigned(16#0#, 3);
        ELSE 
          alpha0_deserializer_contl_cnt_30 <= alpha0_deserializer_contl_cnt_30 + to_unsigned(16#1#, 3);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_30_process;

  alpha0_deserializer_tapDelayEn_60 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_30 < 
    to_unsigned(16#3#, 3));
  
  alpha0_deserializer_contl_validOutpu_30 <= '1' WHEN alpha0_deserializer_contl_cnt_30 = to_unsigned(16#3#, 
    3) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_30 <= '1' WHEN alpha0_deserializer_contl_validOutpu_30 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_30 <= '1' WHEN alpha0_deserializer_contl_validOutpu_30 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_30 <= '1';

  alpha0_deserializer_tapDelayEn_61 <= enb AND alpha0_deserializer_tapDelayEn_60;

  c0_serial_0_32(0) <= tmp_276;
  c0_serial_0_32(1) <= tmp_276;
  c0_serial_0_32(2) <= tmp_276;
  c0_serial_0_32(3) <= tmp_276;

  rcc_out_59 <= c0_serial_0_32;

  ratechange_splitcomp_out0_59 <= rcc_out_59(0);

  ratechange_splitcomp_out1_59 <= rcc_out_59(1);

  ratechange_splitcomp_out2_44 <= rcc_out_59(2);

  ratechange_splitcomp_out3_42 <= rcc_out_59(3);

  
  v2bz_13 <= ratechange_splitcomp_out0_59 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_59 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_44 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_42;

  c0_serial_1_31(0) <= q1_5;
  c0_serial_1_31(1) <= q3_9;
  c0_serial_1_31(2) <= q0_2;
  c0_serial_1_31(3) <= q0_2;

  rcc_out_60 <= c0_serial_1_31;

  ratechange_splitcomp_out0_60 <= rcc_out_60(0);

  ratechange_splitcomp_out1_60 <= rcc_out_60(1);

  ratechange_splitcomp_out2_45 <= rcc_out_60(2);

  ratechange_splitcomp_out3_43 <= rcc_out_60(3);

  
  q1_12 <= ratechange_splitcomp_out0_60 WHEN counterSig_1 = to_unsigned(16#0#, 2) ELSE
      ratechange_splitcomp_out1_60 WHEN counterSig_1 = to_unsigned(16#1#, 2) ELSE
      ratechange_splitcomp_out2_45 WHEN counterSig_1 = to_unsigned(16#2#, 2) ELSE
      ratechange_splitcomp_out3_43;

  multiplier_cast_6 <= signed(resize(q1_12, 15));
  multiplier_mul_temp_17 <= v2bz_13 * multiplier_cast_6;
  tmp_636 <= multiplier_mul_temp_17(27 DOWNTO 0);

  alpha0_deserializer_tapDelayComp_291 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_29 <= (OTHERS => to_signed(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_tapDelayEn_61 = '1' THEN
        alpha0_deserializer_tapout_29(2) <= tmp_636;
        alpha0_deserializer_tapout_29(0 TO 1) <= alpha0_deserializer_tapout_29(1 TO 2);
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_291;


  alpha0_deserializer_muxOut_29(0) <= alpha0_deserializer_tapout_29(0);
  alpha0_deserializer_muxOut_29(1) <= alpha0_deserializer_tapout_29(1);
  alpha0_deserializer_muxOut_29(2) <= alpha0_deserializer_tapout_29(2);
  alpha0_deserializer_muxOut_29(3) <= tmp_636;

  alpha0_deserializer_regComp_28_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_29 <= (OTHERS => to_signed(16#0000000#, 28));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' AND alpha0_deserializer_innerRegEn_30 = '1' THEN
        c0_serialOut_0_29 <= alpha0_deserializer_muxOut_29;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_28_proce;


  tmp_637 <= c0_serialOut_0_29(1);

  tmp_638 <= resize(tmp_637 & '0', 31);

  tmp_639 <= c0_serialOut_0_25(1);

  tmp_640 <= signed(resize(tmp_639, 31));

  tmp_641 <= c0_serialOut_0_29(3);

  tmp_642 <= resize(tmp_641 & '0', 31);

  delayMatch_83_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_60 <= (OTHERS => to_signed(16#00000000#, 31));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_60(0) <= tmp_638;
        delayMatch_reg_60(1) <= delayMatch_reg_60(0);
      END IF;
    END IF;
  END PROCESS delayMatch_83_process;

  tmp_643 <= delayMatch_reg_60(1);

  tmp_644 <= tmp_635 + tmp_643;

  delayMatch_84_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_61 <= (OTHERS => to_signed(16#00000000#, 31));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_61(0) <= tmp_642;
        delayMatch_reg_61(1) <= delayMatch_reg_61(0);
      END IF;
    END IF;
  END PROCESS delayMatch_84_process;

  tmp_645 <= delayMatch_reg_61(1);

  tmp_646 <= tmp_640 + tmp_645;

  c0_serial_1_32(0) <= tmp_644;
  c0_serial_1_32(1) <= tmp_646;

  rcc_out_61 <= c0_serial_1_32;

  ratechange_splitcomp_out0_61 <= rcc_out_61(0);

  ratechange_splitcomp_out1_61 <= rcc_out_61(1);

  
  tmp_647 <= ratechange_splitcomp_out0_61 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_61;

  tmp_648 <= tmp_632 * tmp_647;

  alpha0_deserializer_tapDelayComp_301 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_30 <= to_signed(0, 65);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_tapDelayEn_59 = '1' THEN
        alpha0_deserializer_tapout_30 <= tmp_648;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_301;


  alpha0_deserializer_muxOut_30(0) <= alpha0_deserializer_tapout_30;
  alpha0_deserializer_muxOut_30(1) <= tmp_648;

  alpha0_deserializer_regComp_29_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_30 <= (OTHERS => to_signed(0, 65));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_innerRegEn_29 = '1' THEN
        c0_serialOut_0_30 <= alpha0_deserializer_muxOut_30;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_29_proce;


  alpha0_deserializer_contl_31_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_31 <= to_unsigned(16#0#, 2);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' THEN
        IF alpha0_deserializer_contl_cnt_31 = to_unsigned(16#1#, 2) THEN 
          alpha0_deserializer_contl_cnt_31 <= to_unsigned(16#0#, 2);
        ELSE 
          alpha0_deserializer_contl_cnt_31 <= alpha0_deserializer_contl_cnt_31 + to_unsigned(16#1#, 2);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_31_process;

  alpha0_deserializer_tapDelayEn_62 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_31 < 
    to_unsigned(16#1#, 2));
  
  alpha0_deserializer_contl_validOutpu_31 <= '1' WHEN alpha0_deserializer_contl_cnt_31 = to_unsigned(16#1#, 
    2) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_31 <= '1' WHEN alpha0_deserializer_contl_validOutpu_31 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_31 <= '1' WHEN alpha0_deserializer_contl_validOutpu_31 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_31 <= '1';

  alpha0_deserializer_tapDelayEn_63 <= enb_1_2_0 AND alpha0_deserializer_tapDelayEn_62;

  tmp_649 <= c0_serialOut_0_20(2);

  tmp_650 <= unsigned(tmp_649(28 DOWNTO 0));

  tmp_651 <= signed(resize(tmp_650, 36));

  tmp_652 <= c0_serialOut_0_23(1);

  tmp_653 <= resize(tmp_652 & '0', 36);

  delayMatch_85_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_62 <= (OTHERS => to_signed(0, 36));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_62(0) <= tmp_653;
        delayMatch_reg_62(1) <= delayMatch_reg_62(0);
      END IF;
    END IF;
  END PROCESS delayMatch_85_process;

  tmp_654 <= delayMatch_reg_62(1);

  tmp_655 <= tmp_651 + tmp_654;

  tmp_656 <= resize(tmp_655, 38);

  tmp_657 <= signed(resize(mz_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 38));

  tmp_658 <= c0_serialOut_0_20(3);

  tmp_659 <= unsigned(tmp_658(28 DOWNTO 0));

  tmp_660 <= signed(resize(tmp_659, 36));

  tmp_661 <= c0_serialOut_0_23(2);

  tmp_662 <= resize(tmp_661 & '0', 36);

  delayMatch_86_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_63 <= (OTHERS => to_signed(0, 36));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_63(0) <= tmp_662;
        delayMatch_reg_63(1) <= delayMatch_reg_63(0);
      END IF;
    END IF;
  END PROCESS delayMatch_86_process;

  tmp_663 <= delayMatch_reg_63(1);

  tmp_664 <= tmp_660 + tmp_663;

  tmp_665 <= resize(tmp_664, 38);

  tmp_666 <= signed(resize(mz_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 38));

  delayMatch_87_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_64 <= (OTHERS => to_signed(0, 38));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_64(0) <= tmp_657;
        delayMatch_reg_64(1 TO 6) <= delayMatch_reg_64(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_87_process;

  tmp_667 <= delayMatch_reg_64(6);

  tmp_668 <= tmp_656 - tmp_667;

  delayMatch_88_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_65 <= (OTHERS => to_signed(0, 38));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_65(0) <= tmp_666;
        delayMatch_reg_65(1 TO 6) <= delayMatch_reg_65(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_88_process;

  tmp_669 <= delayMatch_reg_65(6);

  tmp_670 <= tmp_665 - tmp_669;

  c0_serial_0_33(0) <= tmp_668;
  c0_serial_0_33(1) <= tmp_670;

  rcc_out_62 <= c0_serial_0_33;

  ratechange_splitcomp_out0_62 <= rcc_out_62(0);

  ratechange_splitcomp_out1_62 <= rcc_out_62(1);

  
  tmp_671 <= ratechange_splitcomp_out0_62 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_62;

  tmp_672 <= c0_serialOut_0_24(2);

  tmp_673 <= unsigned(tmp_672(27 DOWNTO 0));

  tmp_674 <= signed(resize(tmp_673, 29));

  tmp_675 <= resize(tmp_674, 31);

  tmp_676 <= c0_serialOut_0_17(3);

  tmp_677 <= tmp_676(27 DOWNTO 0);

  tmp_678 <= resize(tmp_677 & '0' & '0', 31);

  delayMatch_89_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_66 <= (OTHERS => to_signed(16#00000000#, 31));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_66(0) <= tmp_678;
        delayMatch_reg_66(1) <= delayMatch_reg_66(0);
      END IF;
    END IF;
  END PROCESS delayMatch_89_process;

  tmp_679 <= delayMatch_reg_66(1);

  tmp_680 <= tmp_675 - tmp_679;

  tmp_681 <= c0_serialOut_0_25(0);

  tmp_682 <= signed(resize(tmp_681, 29));

  tmp_683 <= resize(tmp_682, 31);

  tmp_684 <= c0_serialOut_0_24(0);

  tmp_685 <= tmp_684(27 DOWNTO 0);

  tmp_686 <= resize(tmp_685 & '0' & '0', 31);

  tmp_687 <= tmp_683 - tmp_686;

  c0_serial_1_33(0) <= tmp_680;
  c0_serial_1_33(1) <= tmp_687;

  rcc_out_63 <= c0_serial_1_33;

  ratechange_splitcomp_out0_63 <= rcc_out_63(0);

  ratechange_splitcomp_out1_63 <= rcc_out_63(1);

  
  tmp_688 <= ratechange_splitcomp_out0_63 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_63;

  tmp_689 <= tmp_671 * tmp_688;

  alpha0_deserializer_tapDelayComp_311 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_31 <= to_signed(0, 69);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_tapDelayEn_63 = '1' THEN
        alpha0_deserializer_tapout_31 <= tmp_689;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_311;


  alpha0_deserializer_muxOut_31(0) <= alpha0_deserializer_tapout_31;
  alpha0_deserializer_muxOut_31(1) <= tmp_689;

  alpha0_deserializer_regComp_30_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_31 <= (OTHERS => to_signed(0, 69));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_innerRegEn_31 = '1' THEN
        c0_serialOut_0_31 <= alpha0_deserializer_muxOut_31;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_30_proce;


  delayMatch_90_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_67 <= (OTHERS => to_signed(0, 65));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_67(0) <= tmp_609;
        delayMatch_reg_67(1 TO 5) <= delayMatch_reg_67(0 TO 4);
      END IF;
    END IF;
  END PROCESS delayMatch_90_process;

  tmp_690 <= delayMatch_reg_67(5);

  tmp_691 <= c0_serialOut_0_18(0);

  tmp_692 <= resize(tmp_691, 65);

  tmp_693 <= tmp_690 + tmp_692;

  tmp_694 <= resize(tmp_693 & '0', 67);

  tmp_695 <= c0_serialOut_0_30(1);

  tmp_696 <= resize(tmp_695, 67);

  tmp_697 <= tmp_694 + tmp_696;

  tmp_698 <= resize(tmp_697, 70);

  tmp_699 <= c0_serialOut_0_31(1);

  tmp_700 <= resize(tmp_699, 70);

  tmp_701 <= tmp_698 + tmp_700;

  tmp_702 <= tmp_701(56 DOWNTO 43);

  s1_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      s1_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        s1_tmp <= tmp_702;
      END IF;
    END IF;
  END PROCESS s1_reg_process;


  s1 <= std_logic_vector(s1_tmp);

  tmp_703 <= c0_serialOut_0_2(0);

  tmp_704 <= resize(tmp_703, 40);

  tmp_705 <= c0_serialOut_0_5(1);

  tmp_706 <= resize(tmp_705, 40);

  tmp_707 <= tmp_704 + tmp_706;

  tmp_708 <= resize(tmp_707 & '0', 42);

  tmp_709 <= c0_serialOut_0_28(0);

  tmp_710 <= resize(tmp_709, 42);

  tmp_711 <= tmp_708 - tmp_710;

  tmp_712 <= resize(tmp_711 & '0' & '0' & '0' & '0' & '0', 67);

  alpha0_deserializer_contl_32_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_contl_cnt_32 <= to_unsigned(16#0#, 2);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' THEN
        IF alpha0_deserializer_contl_cnt_32 = to_unsigned(16#1#, 2) THEN 
          alpha0_deserializer_contl_cnt_32 <= to_unsigned(16#0#, 2);
        ELSE 
          alpha0_deserializer_contl_cnt_32 <= alpha0_deserializer_contl_cnt_32 + to_unsigned(16#1#, 2);
        END IF;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_contl_32_process;

  alpha0_deserializer_tapDelayEn_64 <= hdlcoder_to_stdlogic(alpha0_deserializer_contl_cnt_32 < 
    to_unsigned(16#1#, 2));
  
  alpha0_deserializer_contl_validOutpu_32 <= '1' WHEN alpha0_deserializer_contl_cnt_32 = to_unsigned(16#1#, 
    2) ELSE
      '0';
  
  alpha0_deserializer_innerRegEn_32 <= '1' WHEN alpha0_deserializer_contl_validOutpu_32 = '1' ELSE
      '0';
  
  alpha0_deserializer_innerRegCtrolEn_32 <= '1' WHEN alpha0_deserializer_contl_validOutpu_32 = '1' ELSE
      '0';
  alpha0_deserializer_outBypassEn_32 <= '1';

  alpha0_deserializer_tapDelayEn_65 <= enb_1_2_0 AND alpha0_deserializer_tapDelayEn_64;

  tmp_713 <= c0_serialOut_0_15(0);

  tmp_714 <= resize(tmp_713, 34);

  tmp_715 <= c0_serialOut_0_16(0);

  tmp_716 <= resize(tmp_715 & '0', 34);

  delayMatch_91_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_68 <= (OTHERS => to_signed(0, 34));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_68(0) <= tmp_716;
        delayMatch_reg_68(1) <= delayMatch_reg_68(0);
      END IF;
    END IF;
  END PROCESS delayMatch_91_process;

  tmp_717 <= delayMatch_reg_68(1);

  tmp_718 <= tmp_714 + tmp_717;

  tmp_719 <= resize(tmp_718, 36);

  tmp_720 <= signed(resize(mx_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 36));

  tmp_721 <= c0_serialOut_0_15(1);

  tmp_722 <= resize(tmp_721, 34);

  tmp_723 <= c0_serialOut_0_16(1);

  tmp_724 <= resize(tmp_723 & '0', 34);

  delayMatch_92_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_69 <= (OTHERS => to_signed(0, 34));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_69(0) <= tmp_724;
        delayMatch_reg_69(1) <= delayMatch_reg_69(0);
      END IF;
    END IF;
  END PROCESS delayMatch_92_process;

  tmp_725 <= delayMatch_reg_69(1);

  tmp_726 <= tmp_722 + tmp_725;

  tmp_727 <= resize(tmp_726, 36);

  tmp_728 <= signed(resize(mx_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 36));

  delayMatch_93_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_70 <= (OTHERS => to_signed(0, 36));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_70(0) <= tmp_720;
        delayMatch_reg_70(1 TO 6) <= delayMatch_reg_70(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_93_process;

  tmp_729 <= delayMatch_reg_70(6);

  tmp_730 <= tmp_719 - tmp_729;

  delayMatch_94_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_71 <= (OTHERS => to_signed(0, 36));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_71(0) <= tmp_728;
        delayMatch_reg_71(1 TO 6) <= delayMatch_reg_71(0 TO 5);
      END IF;
    END IF;
  END PROCESS delayMatch_94_process;

  tmp_731 <= delayMatch_reg_71(6);

  tmp_732 <= tmp_727 - tmp_731;

  c0_serial_0_34(0) <= tmp_730;
  c0_serial_0_34(1) <= tmp_732;

  rcc_out_64 <= c0_serial_0_34;

  ratechange_splitcomp_out0_64 <= rcc_out_64(0);

  ratechange_splitcomp_out1_64 <= rcc_out_64(1);

  
  tmp_733 <= ratechange_splitcomp_out0_64 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_64;

  tmp_734 <= c0_serialOut_0_21(3);

  tmp_735 <= tmp_734(28 DOWNTO 0);

  tmp_736 <= resize(tmp_735, 30);

  tmp_737 <= c0_serialOut_0_29(0);

  tmp_738 <= resize(tmp_737, 30);

  delayMatch_95_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_72 <= (OTHERS => to_signed(16#00000000#, 30));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_72(0) <= tmp_738;
        delayMatch_reg_72(1) <= delayMatch_reg_72(0);
      END IF;
    END IF;
  END PROCESS delayMatch_95_process;

  tmp_739 <= delayMatch_reg_72(1);

  tmp_740 <= tmp_736 + tmp_739;

  tmp_741 <= signed(resize(tmp_451, 15));

  p797tmp_cast <= resize(tmp_741, 16);
  p797tmp_cast_1 <=  - (p797tmp_cast);
  tmp_742 <= p797tmp_cast_1(14 DOWNTO 0);

  multiplier_cast_7 <= signed(resize(q2_19, 15));
  multiplier_mul_temp_18 <= tmp_742 * multiplier_cast_7;
  tmp_743 <= multiplier_mul_temp_18(28 DOWNTO 0);

  tmp_744 <= resize(tmp_743, 30);

  tmp_745 <= c0_serialOut_0_29(2);

  tmp_746 <= resize(tmp_745, 30);

  delayMatch_96_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_747 <= to_signed(16#00000000#, 30);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_747 <= tmp_746;
      END IF;
    END IF;
  END PROCESS delayMatch_96_process;


  tmp_748 <= tmp_744 - tmp_747;

  delayMatch_97_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      tmp_749 <= to_signed(16#00000000#, 30);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        tmp_749 <= tmp_748;
      END IF;
    END IF;
  END PROCESS delayMatch_97_process;


  c0_serial_1_34(0) <= tmp_740;
  c0_serial_1_34(1) <= tmp_749;

  rcc_out_65 <= c0_serial_1_34;

  ratechange_splitcomp_out0_65 <= rcc_out_65(0);

  ratechange_splitcomp_out1_65 <= rcc_out_65(1);

  
  tmp_750 <= ratechange_splitcomp_out0_65 WHEN counterSig = '0' ELSE
      ratechange_splitcomp_out1_65;

  tmp_751 <= tmp_733 * tmp_750;

  alpha0_deserializer_tapDelayComp_321 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      alpha0_deserializer_tapout_32 <= to_signed(0, 66);
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_tapDelayEn_65 = '1' THEN
        alpha0_deserializer_tapout_32 <= tmp_751;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_tapDelayComp_321;


  alpha0_deserializer_muxOut_32(0) <= alpha0_deserializer_tapout_32;
  alpha0_deserializer_muxOut_32(1) <= tmp_751;

  alpha0_deserializer_regComp_31_proce : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      c0_serialOut_0_32 <= (OTHERS => to_signed(0, 66));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2_0 = '1' AND alpha0_deserializer_innerRegEn_32 = '1' THEN
        c0_serialOut_0_32 <= alpha0_deserializer_muxOut_32;
      END IF;
    END IF;
  END PROCESS alpha0_deserializer_regComp_31_proce;


  delayMatch_98_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_73 <= (OTHERS => to_signed(0, 67));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_73(0) <= tmp_712;
        delayMatch_reg_73(1 TO 5) <= delayMatch_reg_73(0 TO 4);
      END IF;
    END IF;
  END PROCESS delayMatch_98_process;

  tmp_752 <= delayMatch_reg_73(5);

  tmp_753 <= c0_serialOut_0_32(1);

  tmp_754 <= resize(tmp_753, 67);

  tmp_755 <= tmp_752 + tmp_754;

  tmp_756 <= resize(tmp_755 & '0', 69);

  tmp_757 <= c0_serialOut_0_30(0);

  tmp_758 <= resize(tmp_757, 69);

  tmp_759 <= tmp_756 + tmp_758;

  tmp_760 <= resize(tmp_759, 70);

  tmp_761 <= c0_serialOut_0_31(0);

  tmp_762 <= resize(tmp_761, 70);

  tmp_763 <= tmp_760 + tmp_762;

  tmp_764 <= tmp_763(57 DOWNTO 44);

  s2_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      s2_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        s2_tmp <= tmp_764;
      END IF;
    END IF;
  END PROCESS s2_reg_process;


  s2 <= std_logic_vector(s2_tmp);

  tmp_765 <= c0_serialOut_0_27(0);

  tmp_766 <= resize(tmp_765, 40);

  tmp_767 <= c0_serialOut_0_5(0);

  tmp_768 <= resize(tmp_767, 40);

  tmp_769 <= tmp_766 + tmp_768;

  tmp_770 <= resize(tmp_769 & '0' & '0' & '0' & '0' & '0' & '0', 67);

  delayMatch_99_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      delayMatch_reg_74 <= (OTHERS => to_signed(0, 67));
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        delayMatch_reg_74(0) <= tmp_770;
        delayMatch_reg_74(1 TO 5) <= delayMatch_reg_74(0 TO 4);
      END IF;
    END IF;
  END PROCESS delayMatch_99_process;

  tmp_771 <= delayMatch_reg_74(5);

  tmp_772 <= c0_serialOut_0_32(0);

  tmp_773 <= resize(tmp_772, 67);

  tmp_774 <= tmp_771 + tmp_773;

  tmp_775 <= resize(tmp_774 & '0', 69);

  tmp_776 <= c0_serialOut_0_22(0);

  tmp_777 <= resize(tmp_776, 69);

  tmp_778 <= tmp_775 + tmp_777;

  tmp_779 <= resize(tmp_778, 70);

  tmp_780 <= c0_serialOut_0_26(0);

  tmp_781 <= resize(tmp_780, 70);

  tmp_782 <= tmp_779 + tmp_781;

  tmp_783 <= tmp_782(57 DOWNTO 44);

  s3_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      s3_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb_1_4_0 = '1' THEN
        s3_tmp <= tmp_783;
      END IF;
    END IF;
  END PROCESS s3_reg_process;


  s3 <= std_logic_vector(s3_tmp);

  ce_out <= enb_1_4_1;

END rtl;

